<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dotstudio（ドットスタジオ） on dotstudio（ドットスタジオ）</title>
    <link>https://dotstud.io/index.xml</link>
    <description>Recent content in dotstudio（ドットスタジオ） on dotstudio（ドットスタジオ）</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2016 dotstudio inc.</copyright>
    <lastBuildDate>Tue, 23 May 2017 01:02:41 +0900</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Waffleとは</title>
      <link>https://dotstud.io/docs/waffle/</link>
      <pubDate>Tue, 23 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/waffle/</guid>
      
      <description>&lt;p&gt;WaffleはAndroidアプリエンジニア向けのプロトタイピングボードです。&lt;/p&gt;

&lt;p&gt;AndroidアプリからGroveセンサーの値を取ることができ、Android開発者は通常のアプリ開発の要領でIoT入門することができます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cf.kibidango.com/asset/sp/122f09f5-3173-4544-a57e-182625f6ba77.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;「AndroidアプリエンジニアでIoTや電子工作をやってみたいけれど、きっかけが無くてチャレンジ出来ていない」、「何から始めればいいか分からない」そんな人に適したボードです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ネットワーク</title>
      <link>https://dotstud.io/docs/network/</link>
      <pubDate>Sun, 21 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/network/</guid>
      
      <description>&lt;p&gt;IoT技術を支えるネットワークインフラも様々な種類があります。言葉の使い方から通信回線の種類、特徴などを抑えておきましょう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wio Node</title>
      <link>https://dotstud.io/docs/wionode/</link>
      <pubDate>Sat, 20 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/wionode/</guid>
      
      <description>

&lt;p&gt;&lt;a href=&#34;http://wiki.seeed.cc/Wio_Node/&#34;&gt;Wio Node&lt;/a&gt;は中国の&lt;a href=&#34;https://www.seeedstudio.com/&#34;&gt;Seeed社&lt;/a&gt;が開発、販売しているESP8266モジュール搭載のIoTプロトタイプデバイスです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/b4814839e1edfdf5593cad308b097e7d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;小型&#34;&gt;小型&lt;/h2&gt;

&lt;p&gt;500円玉くらいの大きさで小型です。&lt;/p&gt;

&lt;h2 id=&#34;groveだけに対応していて複雑なことはさせない&#34;&gt;Groveだけに対応していて複雑なことはさせない&lt;/h2&gt;

&lt;p&gt;Wio NodeはNefryとは違い、Groveセンサーのみに対応しています。&lt;/p&gt;

&lt;h2 id=&#34;esp8266搭載でwi-fi接続が前提&#34;&gt;ESP8266搭載でWi-Fi接続が前提&lt;/h2&gt;

&lt;p&gt;ESP8266を搭載しているため、最初からWi-Fi接続が可能です。
実際にはアドホックモードでスマートフォンアプリと連携してSSID/パスワードを書き込むことで会場や部屋（利用する場所のWi-Fi）のWi-Fiにアクセスすることができます。&lt;/p&gt;

&lt;h2 id=&#34;サーバーもseeedが用意してくれている&#34;&gt;サーバーもSeeedが用意してくれている&lt;/h2&gt;

&lt;p&gt;Wio NodeではWi-Fiに接続すると同時にSeeedが用意しているWebサーバーにセンサーの値をあげてくれます。&lt;/p&gt;

&lt;p&gt;そのため、ユーザーはWio Nodeに接続したGroveセンサーの値を即時にWebのAPIとして利用することができます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>「IoT」とは</title>
      <link>https://dotstud.io/docs/iot/</link>
      <pubDate>Thu, 10 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/iot/</guid>
      
      <description>&lt;p&gt;※この項目は書きかけです。&lt;/p&gt;

&lt;p&gt;モノのインターネット（英語: Internet of Things, IoT）とは、様々な「モノ（物）」がインターネットに接続され（単に繋がるだけではなく、モノがインターネットのように繋がる）、
情報交換することにより相互に制御する仕組みである。それによる社会の実現も指す。「物のインターネット」と表記された例もある。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nefryとは</title>
      <link>https://dotstud.io/docs/nefry/</link>
      <pubDate>Tue, 19 Jul 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/nefry/</guid>
      
      <description>

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/docs/nefry/nefry_top.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;「Nefry（ねふりー）」は、&lt;a href=&#34;https://twitter.com/wamisnet&#34;&gt;wamisnet&lt;/a&gt;氏によって開発された小型のマイコンボードです。Wi-Fiさえあればすぐにネットワークに接続でき、MilkcocoaやmyThings、IFTTTなどのインターネットのサービスと簡単に接続できます。&lt;/p&gt;

&lt;p&gt;スマートフォンで使うようなモバイルバッテリーで動くので、場所を選ばずに使えます。&lt;/p&gt;

&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;

&lt;p&gt;Nefryは「ESP8266」というマイコンモジュールを利用したボードです。ESP8266はWi-Fiに対応しており、ネットワークに無線接続できるモジュールとしてはとても優れていますが、そのままでは難易度の高いはんだ付けが必須となっていました。&lt;/p&gt;

&lt;p&gt;そこで、入出力関連はGPIOソケットと&lt;a href=&#34;http://wiki.seeed.cc/Grove_System/&#34;&gt;Grove&lt;/a&gt;を備え、また電源も汎用的なUSBによるものとしたことで、ハードウェアの開発に一切の工具を不要としました。&lt;/p&gt;

&lt;p&gt;さらに手持ちのPCのWebブラウザから様々な設定ができ、プログラムの書き込みも無線で行えるなどといったソフトウェア面での簡単さもあり、特に初心者がIoTなプロトタイプを作りたいといった場面で強力なベースプラットフォームとなるような設計になっています。&lt;/p&gt;

&lt;h2 id=&#34;説明書&#34;&gt;説明書&lt;/h2&gt;

&lt;p&gt;Nefryの詳細な仕様・動作などが参照できます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wamisnet.github.io/Nefry_manual.pdf&#34;&gt;https://wamisnet.github.io/Nefry_manual.pdf&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;インターフェース&#34;&gt;インターフェース&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://qiita-image-store.s3.amazonaws.com/0/97208/ba4a18a9-c793-bca0-5d3a-da47eea8ef71.png&#34; alt=&#34;Nefryの基板写真・各モジュールの説明入り&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/docs/nefry/nefry_detail.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;技術仕様&#34;&gt;技術仕様&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;メインチップ: ESP8266(ESP-WROOM-02)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wi-Fi 802.11b/g/n(2.4GHz帯)&lt;/li&gt;
&lt;li&gt;セキュリティ WPA2/WPA/WEP/AES/TKIP&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;フルカラーLED*1&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Groveモジュールを最大4個接続
(UART, I2C, デジタル, アナログ, 各1ソケット)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;GPIOピンソケット&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アナログ入力(A0)&lt;/li&gt;
&lt;li&gt;I2C(D0, D1)&lt;/li&gt;
&lt;li&gt;SPI(D2, D3, D4, D5)&lt;/li&gt;
&lt;li&gt;3.3Vソケット*1, GNDソケット * 2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ユーザーが利用可能なスイッチ(SW) * 1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;特徴&#34;&gt;特徴&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;モバイルバッテリに挿した状態で動かせるので、電源のない場所でも動作可能&lt;/li&gt;
&lt;li&gt;スイッチとフルカラーLEDがついているので、新たなパーツを買わなくても通信実験などができる&lt;/li&gt;
&lt;li&gt;Groveシステムに対応、センサ類もGPIOソケットに直接挿せるため、はんだ付けは一切必要なし&lt;/li&gt;
&lt;li&gt;上級者はパーツの後付けによってmicroSDカードを利用可能（スイッチとの同時利用不可）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;nefryでできること&#34;&gt;Nefryでできること&lt;/h2&gt;

&lt;p&gt;開発例の記事をまとめました！&lt;/p&gt;

&lt;h3 id=&#34;nefryとは何か-他のボードとどこが違うの&#34;&gt;Nefryとは何か？他のボードとどこが違うの？&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/docs/nefry/nefry_custom.png&#34; alt=&#34;&#34; /&gt;
&lt;a href=&#34;https://liginc.co.jp/236620&#34;&gt;自作したオリジナルIoTデバイス「Nefry」とインターネットを繋いでみた&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;まずはnefryを開発するための環境を整える&#34;&gt;まずはNefryを開発するための環境を整える！&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/docs/nefry/nefry_try.png&#34; alt=&#34;&#34; /&gt;
&lt;a href=&#34;https://liginc.co.jp/298161&#34;&gt;さくっと生活を便利にする！FRISKサイズのIoT向けデバイス「Nefry」を使ってみよう【環境構築編】&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;ボタンを押したことをwebに反映させてみよう&#34;&gt;ボタンを押したことをWebに反映させてみよう&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/docs/nefry/nefry_milkcocoa.png&#34; alt=&#34;&#34; /&gt;
&lt;a href=&#34;https://liginc.co.jp/282918&#34;&gt;NefryとMilkcocoaを連携させて、WebサイトにリアルタイムでPush通知してみる&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;スマホやtwitterに通知を送ってみる&#34;&gt;スマホやTwitterに通知を送ってみる&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/docs/nefry/nefry_ifttt.png&#34; alt=&#34;&#34; /&gt;
&lt;a href=&#34;https://liginc.co.jp/263899&#34;&gt;Webサービス同士を連携できる「IFTTT」と自作IoTデバイスを繋いで生活を便利にしてみた&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;設計情報&#34;&gt;設計情報&lt;/h2&gt;

&lt;p&gt;回路図
&lt;img src=&#34;https://dotstud.io/img/docs/nefry/nefrykr.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;配線図
&lt;img src=&#34;https://dotstud.io/img/docs/nefry/nefrycr.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;公式リンク&#34;&gt;公式リンク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;プログラム共有サイト: &lt;a href=&#34;https://program.nefry.studio/&#34;&gt;Nefry Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;購入先：&lt;a href=&#34;https://dotstud.io/projects/nefry-connect-internet/&#34;&gt;Nefry v1.0 | dotstudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;説明書：&lt;a href=&#34;https://wamisnet.github.io/Nefry_manual.pdf&#34;&gt;Nefry v2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>届いたら箱を開けましょう。</title>
      <link>https://dotstud.io/docs/waffle-box-check/</link>
      <pubDate>Tue, 23 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/waffle-box-check/</guid>
      
      <description>

&lt;p&gt;本項目では&lt;strong&gt;Waffleが手元に届いた際の箱の開け方を解説します。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;まずは、箱の開け方解説です。（2017年5月版）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://dotstud.io/blog/howto-use-original-package/&#34;&gt;dotstuidoオリジナルのパッケージができました！〜使い方編〜&lt;/a&gt;にもあるように、発送しているパッケージ（箱）はでバイス管理などにも使えるので丁寧に使ってもらえますと幸いです。&lt;/p&gt;

&lt;h2 id=&#34;手順紹介&#34;&gt;手順紹介&lt;/h2&gt;

&lt;p&gt;箱が届いた状態の面面は以下になります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/1ef7b3db3ffbfff051c823f673c38292.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;箱の裏面を確認すると発送用のラベルが貼ってありますので、丁寧に剥がしてください。ラベルを剥がす際にビリビリと破れてしまいますが、それを考慮して裏面ラベルにしてあります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/54e3545cf4053c2f04309910a9562ab5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;裏面からサイドの&amp;rdquo;羽&amp;rdquo;を剥がしていきましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/e582cea3f25c4d6c9f23d84410de66ec.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;羽&amp;rdquo;はハサミなどで切り取ってください。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/fa04504739cc20836bf203ba48a31fb0.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;切れ目も入っているので、丁寧に破けば手でも大丈夫です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/00561dc25b7af55a757803cde1f93b7a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;綺麗に切り取ったあとの箱はデバイス入れとして使えます。
ご活用ください。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/c390eb46f185ae1ce58f5a4ee724c50e.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;開けるとWaffleのチラシや保証書が入っています。
保証書は大事に保存して下さい。&lt;/p&gt;

&lt;h2 id=&#34;おまけ&#34;&gt;おまけ&lt;/h2&gt;

&lt;p&gt;箱は以下のような形でデバイス管理に再利用できます。
ぜひご活用ください。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/102/03_usage.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://dotstud.io/blog/howto-use-original-package/&#34;&gt;dotstuidoオリジナルのパッケージができました！〜使い方編〜&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LPWA</title>
      <link>https://dotstud.io/docs/lpwa/</link>
      <pubDate>Sun, 21 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/lpwa/</guid>
      
      <description>&lt;p&gt;LPWA（Low Power Wide Area）は、直訳すると低電力・広域という意味です。&lt;/p&gt;

&lt;p&gt;近距離無線（Bluetoothなど数10m程度のもの）より広く届く無線アクセスの種類を指します。消費電力が低く、Km単位の広い範囲に届き、低ビットレート（データ転送をする際のレート・ビットレートが低いと少ない情報しか送れない）なのが特徴です。&lt;/p&gt;

&lt;p&gt;機器のバッテリー消費を押さえつつ遠い場所までデータを届けることができるので、IoT向きな通信となっています。&lt;/p&gt;

&lt;p&gt;LPWAは総称でGHz帯、速度、距離などによって分けられます。具体的には&lt;a href=&#34;https://dotstud.io/docs/sigfox&#34;&gt;SIGFOX&lt;/a&gt;、LoRa、Wi-Fi HaLowなどがあります。詳細は各項目（近日公開）をご覧ください。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wio Node設定 - Android編</title>
      <link>https://dotstud.io/docs/wionode-wiosetup/</link>
      <pubDate>Sat, 20 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/wionode-wiosetup/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>Wio Node設定 - iOS編</title>
      <link>https://dotstud.io/docs/wionode-wiosetup/</link>
      <pubDate>Sat, 20 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/wionode-wiosetup/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>電流と電圧</title>
      <link>https://dotstud.io/docs/aandv/</link>
      <pubDate>Thu, 10 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/aandv/</guid>
      
      <description>

&lt;h2 id=&#34;電圧-は-水圧-と同じようなもの&#34;&gt;「電圧」は、「水圧」と同じようなもの&lt;/h2&gt;

&lt;!--![(1)コンセントとか電池の画像？]()--&gt;

&lt;p&gt;「電圧」「電流」「抵抗」
日常生活で最もよく聞くのが、「電圧」だと思います。コンセントからとれる電気の「電圧」は100V(ボルト)、単3電池1本の「電圧」は1.5V(ボルト)、というのは多くの人が知っていることでしょう。&lt;/p&gt;

&lt;p&gt;この「電圧」として表される数値は電気そのものの強さではなく、 &lt;strong&gt;「電気を流そうとする力の強さ」&lt;/strong&gt; です。&lt;/p&gt;

&lt;!--![(2)アパートの階と蛇口から出る水の強さの違い]()--&gt;

&lt;p&gt;&lt;strong&gt;水道の話に置き換えてみると「電圧」は「水圧」に相当&lt;/strong&gt; します。例えば2階や3階建てのアパートのキッチンなどでは、どの部屋のも基本的には同じ蛇口が使われていますが、1階が最も水の流れ出る量が多く、上のほうの階に行くにつれて少なくなっていきます。（※注:給水塔が屋上になく、かつ古い建物の場合です）&lt;/p&gt;

&lt;p&gt;これは、 &lt;strong&gt;蛇口の大きさは同じであるが水圧が階数によって異なるため&lt;/strong&gt; です。&lt;/p&gt;

&lt;h2 id=&#34;いわゆる-電気-とは-電流-のこと&#34;&gt;いわゆる「電気」とは、「電流」のこと&lt;/h2&gt;

&lt;p&gt;では「電流」は何なのかというと、先ほどの水道の話に置き換えると &lt;strong&gt;「電流」は水そのもの&lt;/strong&gt; となります。水圧の違いが水の流れ出る量に影響を与えるのと同様に、 &lt;strong&gt;電圧の違いは電流の量に影響を与えます。&lt;/strong&gt; 電圧が高いほど、電流量も多くなるわけです。&lt;/p&gt;

&lt;p&gt;我々人間は生きるために水が必要となります。例えばコップ1杯の水がほしいときに必要なのは「水圧」ではなく「水そのものの量」ですよね。電気を扱う機械も同じで、 &lt;strong&gt;動き続けるために必要なのは「電圧」ではなく「電流の量」です。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;このことから、 &lt;strong&gt;「電気」の本質は「電流」のこと&lt;/strong&gt; だといえます。「電圧」はあくまで、「電流」を多く発生させるために必要な力だということですね。&lt;/p&gt;

&lt;h2 id=&#34;蛇口の口径を変えると-水量も変化する&#34;&gt;蛇口の口径を変えると、水量も変化する&lt;/h2&gt;

&lt;!--![(3)口径の大きい蛇口と小さい蛇口]()--&gt;

&lt;p&gt;さて、もしもあなたがアパートの上のほうの階に住んでいて、水圧が弱くて困っているとします。このときに水の量を増やす手段としてひとつ考えられるのは、 &lt;strong&gt;蛇口の径を大きくすること&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;電気においても同じで、もしも電圧が低ければ、 &lt;strong&gt;電流の通り道を太くしてやれば電圧を変えずに電流量を増やすことができます。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;この「電流の通り道」は、電子工作の世界では、主に「銅線」という銅でできた細い線のことをいいます。水と同様にこの線の太さなどで電流の流れ具合も変わるわけですが、このときの &lt;strong&gt;「電流の流れにくさ」を「抵抗」といいます。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;抵抗-は-交通渋滞-に似ている&#34;&gt;「抵抗」は「交通渋滞」に似ている&lt;/h2&gt;

&lt;!--![(4)道路の太さとクルマの量の図]()--&gt;

&lt;p&gt;例えば、クルマを運転して東京から名古屋に行く場合をイメージしてみましょう。道路幅が比較的広くて距離も短い「新東名高速道路」を使う場合と、道路幅が狭めで距離も長くなる「中央自動車道」では、どちらのほうがストレスがたまるでしょうか。ほとんどの場合は後者のほうが疲れやすく、時間もかかります。&lt;/p&gt;

&lt;p&gt;電気の場合もこれと同じで、 &lt;strong&gt;電流の流れ道は、幅が狭くて距離が長いほど電流が流れにくくなります。&lt;/strong&gt; これは &lt;strong&gt;「抵抗値が大きい」&lt;/strong&gt; と表現することができます。&lt;/p&gt;

&lt;!--![(5)直線な高速道路と、信号のある一般道路の比較の図]()--&gt;

&lt;p&gt;では東京から名古屋まで、高速道路を使わずに一般道路で行く場合も考えてみましょう。当然、一般道路は信号機が多数あったり、カーブがきつかったり、車線は一つしかなかったり、など、高速道路に比べると明らかに障害物が多いですね。これはもうどんな高速道路を使うよりも行きづらいことに疑いはありません。&lt;/p&gt;

&lt;p&gt;電気の場合は、通り道の幅や長さを変えたりせずとも、 &lt;strong&gt;その通り道の一部に電流の流れにくい「障害物」を入れることで「抵抗値」を大きくする&lt;/strong&gt; ことができます。このような処置がなされた電気の通り道となる部品のことを &lt;strong&gt;「抵抗器」&lt;/strong&gt; といいます。&lt;/p&gt;

&lt;h2 id=&#34;電圧-電流-抵抗-のそれぞれの関係&#34;&gt;電圧・電流・抵抗 のそれぞれの関係&lt;/h2&gt;

&lt;p&gt;以上のことから、「電圧」「電流」「抵抗」の3つには、次のような関係があることがわかっていただけたかと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;電圧が大きくなると、電流の量が増える&lt;/li&gt;
&lt;li&gt;抵抗が大きくなると、電流の量が減る&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここで、電圧を記号E、電流を記号I、抵抗Rとしましょう。
するとこれら3つのあいだには次のような関係があります。&lt;/p&gt;

&lt;p&gt;I = E ÷ R&lt;/p&gt;

&lt;p&gt;この式は、 &lt;strong&gt;「オームの法則」&lt;/strong&gt; と呼ばれます。いわゆる「電気」は、「電流」のことであるというのは先述しました。&lt;/p&gt;

&lt;p&gt;つまり &lt;strong&gt;電気の強さは、電圧が大きいほど強く、抵抗が大きいほど弱くなる&lt;/strong&gt; ということになります。&lt;/p&gt;

&lt;h2 id=&#34;電子パーツは-電流-でうごく&#34;&gt;電子パーツは「電流」でうごく&lt;/h2&gt;

&lt;p&gt;さて、電子工作において、これら「電圧」「電流」「抵抗」を考えなければならない場面というのはどのようなときでしょうか。&lt;/p&gt;

&lt;!--![(6)電池とコンセントとLED等しいの図]()--&gt;

&lt;p&gt;先ほど、「電流」が「電気そのもの」ということは説明しました。つまり、電気で動くパーツは電流を基準に考えればよいわけです。（一部、電圧駆動というパーツも存在します）&lt;/p&gt;

&lt;p&gt;例えば、あるLEDを光らせたいとき、20mA（ミリアンペア）という量の電流が必要であるとします。この数値はパーツを買ったときに「定格電流」として表示されているのでチェックしておきましょう。&lt;/p&gt;

&lt;h3 id=&#34;電池でledを光らせてみよう&#34;&gt;電池でLEDを光らせてみよう&lt;/h3&gt;

&lt;!--![(7)20mAのLEDを光らせる]()--&gt;

&lt;p&gt;電源として用意できるのは乾電池やコンセントからの電気などですが、その電気に関する情報として知り得ることができるのは「電圧」のみです。&lt;/p&gt;

&lt;p&gt;例えば、乾電池4本（合計6V）で定格20mAのLEDを光らせる回路を作るとしましょう。この回路では、LEDの両端に6Vという「電気の圧力」がかかっていますが、実際に流れる電気である「電流」はどれほどになるのかわかりません。&lt;/p&gt;

&lt;!--![(8)上の回路図に抵抗を追加]()--&gt;

&lt;p&gt;そこで、LEDのどちらか側に「抵抗器」を置くと、もしも抵抗値がわかっていれば、その抵抗器から流れ出る電流はどれぐらいになるか計算することができます。その電流値が20mAで、LEDに流れ込むようにしてあげればうまく点灯しそうですよね？&lt;/p&gt;

&lt;p&gt;このとき「オームの法則」を利用して、 &lt;strong&gt;与えられた電圧から必要な電流を流せるだけの抵抗値を求めます。&lt;/strong&gt; すなわち、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;20mA = 6V ÷ R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;が成り立つようなRの値の抵抗器を、LEDの前か後に置いてあげれば良いわけです。&lt;/p&gt;

&lt;p&gt;ここで、mA(ミリアンペア)のm(ミリ)は、1000分の1を表す接頭辞です。これを考慮してRについて解くと、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;R = 6V ÷ (20 × 0.001) = 300
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となります。また、抵抗値の単位はΩ(オーム)といいます。よって、乾電池4本6Vで20mA駆動のLED1個を光らせたいときは、「300Ωの抵抗が必要」となります。&lt;/p&gt;

&lt;h3 id=&#34;コンセントでもledを光らせてみよう&#34;&gt;コンセントでもLEDを光らせてみよう&lt;/h3&gt;

&lt;p&gt;今度はコンセントからの電気、100Vの電圧でLEDを光らせることを考えてみましょう。（ここでは、簡単のため直流100Vとして話をすすめます）&lt;/p&gt;

&lt;!--![(9)コンセントで20mAのLEDを光らせる]()--&gt;

&lt;p&gt;先ほどの乾電池の電圧6Vが100Vへと大幅に大きくなりました。この場合も、オームの法則を使って必要な抵抗器の値を求めてみましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;R = 100V ÷ (20 × 0.001) = 5000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5000Ω、ですね。ほとんどの場合は5000Ωとは言わず、1000を表す接頭辞のk(キロ)を用いて5kΩ(キロオーム)と表記されます。よって、5kΩの抵抗器を入れれば、コンセントからの100Vという大きな電圧でも同じLEDを光らせることが可能なのです。&lt;/p&gt;

&lt;p&gt;しかし実際には、電子工作でよく使われるような小さな抵抗器では、「定格電力」の値を大きくオーバーして焼き切れてしまうため、大電力用の大きな抵抗器を使う必要があります。これは後述する、電子パーツの「消費電力」が関係しています。&lt;/p&gt;

&lt;h2 id=&#34;どんなところにも抵抗は存在する&#34;&gt;どんなところにも抵抗は存在する&lt;/h2&gt;

&lt;p&gt;もしも抵抗器がない回路を作ると、電流はどれぐらい流れるのでしょうか？　抵抗器がもし無かったとしても、回路を構成する銅線・LED・電池に至るまで、電子パーツはすべて「抵抗値」を持っています。ここでオームの法則を考えてみましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;I = E ÷ R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここで、回路全体の抵抗値がRだったとします。このRが限りなく0に近づくとすると、電流Iは電圧Eの値に関係なく、無限に上昇していきます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>3ステップでわかる開発方法</title>
      <link>https://dotstud.io/docs/nefry_3step/</link>
      <pubDate>Tue, 19 Jul 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/nefry_3step/</guid>
      
      <description>

&lt;p&gt;基本的な始め方は以下の記事で紹介されています。
&lt;img src=&#34;https://dotstud.io/img/docs/nefry/nefry_try.png&#34; alt=&#34;&#34; /&gt;
&lt;a href=&#34;https://liginc.co.jp/298161&#34;&gt;さくっと生活を便利にする！FRISKサイズのIoT向けデバイス「Nefry」を使ってみよう【環境構築編】&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;また、詳細な手順は各項目のドキュメントで確認してください。こちらでは簡単な開発の流れを説明します。&lt;/p&gt;

&lt;h3 id=&#34;1-arduino-ideとnefryライブラリをインストール&#34;&gt;1. Arduino IDEとNefryライブラリをインストール&lt;/h3&gt;

&lt;p&gt;Nefryは、「Arduino IDE」というArduino用の開発ソフトウェアで開発できます。Arduinoで開発をしたことがない方は、まずArduino IDEをダウンロード・インストールしましょう。次にIDE内からNefryライブラリをインストールします。&lt;/p&gt;

&lt;p&gt;詳細: &lt;a href=&#34;https://dotstud.io/docs/nefry-setup&#34;&gt;Arduino IDEのインストール&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-nefryをusb電源に接続してブラウザからwi-fiセットアップ&#34;&gt;2. NefryをUSB電源に接続してブラウザからWi-Fiセットアップ&lt;/h3&gt;

&lt;!-- ![モバイルバッテリにつないだNefryとPCのセットアップ画面]() --&gt;

&lt;p&gt;NefryのUSBをモバイルバッテリやPCのUSBポートに接続しましょう。これは電源専用となっています。
電源が入ったらLEDが光るので、NefryのアクセスポイントをPCから探して接続します。&lt;/p&gt;

&lt;p&gt;Nefryアクセスポイントに接続したままWebブラウザから &lt;a href=&#34;http://192.168.4.1&#34;&gt;http://192.168.4.1&lt;/a&gt; を参照して、コンソールが表示されれば各設定を調整します。（詳しくは上記の記事を参照ください）&lt;/p&gt;

&lt;h3 id=&#34;3-arduino-ideで出力したバイナリファイルを転送&#34;&gt;3. Arduino IDEで出力したバイナリファイルを転送&lt;/h3&gt;

&lt;p&gt;Arduino IDEで打ち込んだプログラムをあらかじめバイナリファイルにコンパイルしておきます。
Web上のコンソールから当該のバイナリファイルを選択してアップロードしたら書き込みは完了です。&lt;/p&gt;

&lt;p&gt;詳細: &lt;a href=&#34;https://dotstud.io/docs/nefry-usage&#34;&gt;プログラムの書き方&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>中身の確認（単体orキット購入）</title>
      <link>https://dotstud.io/docs/waffle-device-check/</link>
      <pubDate>Tue, 23 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/waffle-device-check/</guid>
      
      <description>

&lt;p&gt;本項目では&lt;strong&gt;Waffleを購入した際の中身の確認を行います。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;単体購入の場合&#34;&gt;単体購入の場合&lt;/h2&gt;

&lt;p&gt;Waffleを単体で購入した場合はWaffleの本体のみが入っています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/e881212cd34978eb23ed70770a804f2f.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ただ、Waffle本体だけでは開発が出来ませんので、追加購入をする必要があります。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://dotstud.io/docs/waffle-additional-parts&#34;&gt;単体購入の場合の追加購入&lt;/a&gt;をご参照下さい。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;キット購入の場合&#34;&gt;キット購入の場合&lt;/h2&gt;

&lt;p&gt;Waffleをキットで購入した場合は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Waffle本体&lt;/li&gt;
&lt;li&gt;USBアダプタ（USBAオス-MicroUSBメス）&lt;/li&gt;
&lt;li&gt;Groveセンサー（+Groveコネクタ）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;が同梱されています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/920d29677084e1b315fe69d56e1da135.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Groveセンサーは販売のタイミングによって中身が異なる場合があります。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>単体購入の場合の追加購入パーツ</title>
      <link>https://dotstud.io/docs/waffle-additional-parts/</link>
      <pubDate>Tue, 23 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/waffle-additional-parts/</guid>
      
      <description>&lt;p&gt;本項目では&lt;strong&gt;Waffleを単体購入した際に追加で購入するものを紹介します。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/e881212cd34978eb23ed70770a804f2f.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Waffleの開発はArduinoプログラムをパソコンから書き込むためのコネクタが必要になります。&lt;/p&gt;

&lt;p&gt;※（&lt;a href=&#34;https://kibidango.com/project/463&#34;&gt;kibidango経由で入手して下さった初期ロット&lt;/a&gt;の）出荷時には、Grove Analogセンサーの値を読み取れるようにプログラムを書き込んであるので、Grove Analogセンサーをお持ちの方はA0のポートにセンサーをつなぐことで、スマホと連携することができます。&lt;/p&gt;

&lt;p&gt;Arduinoプログラムを書き込む用途で以下のアダプタを購入しましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/6517d3bf13d22ee796197a13da0bfaa7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.yodobashi.com/product/100000001001811849/?gad1=&amp;amp;gad2=g&amp;amp;gad3=&amp;amp;gad4=56278881131&amp;amp;gad5=14674084338273717031&amp;amp;gad6=1o2&amp;amp;gclid=CjwKEAjwr_rIBRDJzq-Z-LC_2HgSJADoL57HldDeGhZK6FFjCulzSAJo938U7780Kl74IvbaJNu0WxoCDc3w_wcB&amp;amp;xfr=pla&#34;&gt;GM-UH011 [ニッチなMicroUSBアダプタ USB Aコネクタ（オス）?microBコネクタ（メス）] 通販&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;また、Groveセンサーも&lt;a href=&#34;https://www.switch-science.com/catalog/list/379/&#34;&gt;Switch Science&lt;/a&gt;のサイトから購入することが出来ます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/fba8151489ff5e56b3c0224ca563ca06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGFOX</title>
      <link>https://dotstud.io/docs/sigfox/</link>
      <pubDate>Sun, 21 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/sigfox/</guid>
      
      <description>&lt;p&gt;&lt;strong&gt;LPWA&lt;/strong&gt;通信企画の一つで、仏通信業者SIGFOXが提供しています。&lt;/p&gt;

&lt;p&gt;2009年から欧州を中心に世界24ヶ国で展開しており、2017年2月から京セラコミュニケーションシステム（KCCS）がSIGFOXから独占ライセンスを受け、日本でもサービスが開始します。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;免許を要しない無線局&lt;/strong&gt;（電波法による総務大臣の免許を必要としない）である&lt;strong&gt;小電力無線局&lt;/strong&gt;の一つであり、その中で最も最大伝送速度が遅く（100bps程度）、最大伝送距離が広い（50km程度）ことが特徴です。またデータ送受信量が少ないこともあり、通信費用がとても安価（1端末あたり年間数百円程度の業者もある）です。&lt;/p&gt;

&lt;p&gt;日本国内の事例としては、現場を調査しづらい姫路市内の離島・山間部での水道を自動検針（=SIGFOX自動検針コンソーシアム）などが挙げられます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wio Node設定 - 繋がらない場合</title>
      <link>https://dotstud.io/docs/wionode-wiosetup/</link>
      <pubDate>Sat, 20 May 2017 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/wionode-wiosetup/</guid>
      
      <description>

&lt;p&gt;Wio NodeはiOSアプリとAndroidアプリでWi-Fi設定を行いますが、稀にアプリの不具合でWi-Fi設定ができない場合があります。&lt;/p&gt;

&lt;p&gt;その場合に利用すると便利なのが&lt;a href=&#34;https://github.com/horihiro/wio-setup&#34;&gt;Wio-Setup&lt;/a&gt;というコマンドラインツールです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;スマートフォンアプリを使わずにパソコンを使ってWio NodeのWi-Fi設定ができます。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;wio-setupの使い方&#34;&gt;Wio-Setupの使い方&lt;/h2&gt;

&lt;p&gt;※以下はmacOS Sierra 10.12を利用しています。&lt;/p&gt;

&lt;h3 id=&#34;インストール&#34;&gt;インストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ npm i -g wio-setup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールができたら確認してみましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wio-setup -h

  Usage: wio-setup [options]

  Options:

    -h, --help              output usage information
    -V, --version           output the version number
    -e, --email [value]     email address
    -p, --password [value]  password
    -s, --wifiSsid [value]  wifi ssid
    -P, --wifiPwd [value]   wifi password
    -n, --wioName [value]   wio-node name
    -l, --list              list your wio-node
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでインストールは完了です。&lt;/p&gt;

&lt;h3 id=&#34;認証&#34;&gt;認証&lt;/h3&gt;

&lt;p&gt;事前にWio Linkアプリからユーザー登録をしておきましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wio-setup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で実行できます。以下は対話式のインターフェイスで質問に答えていきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;email: &amp;lt;登録したメールアドレス&amp;gt;
password: &amp;lt;登録したパスワード&amp;gt;
wifi ssid: &amp;lt;現時点でパソコンが接続しているSSID&amp;gt;
wifi password for &#39;&amp;lt;SSID&amp;gt;&#39;: &amp;lt;SSIDのパスワード&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここでエンターを押すと、自分が過去に登録したWio Nodeのリストが表示されます。今回は新規のWio Nodeデバイスなので&lt;code&gt;0&lt;/code&gt;を選択します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[1] Wio Node 2
[2] Wio Node 3
[3] Wio Node 17
[0] creating new one

select [0-3]: &amp;lt;数字を入力&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にWio Nodeに名前を付けます。今回は&lt;code&gt;Wio-n0bisuke&lt;/code&gt;としました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wio-node name: &amp;lt;自分のWio Nodeに名前を付ける&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここまで出来たら、Wio Nodeの左側のボタンを4秒間長押ししましょう。
そうすると、LEDの点滅パターンが緩やかになり、Wio Node自体がWi-Fiのアクセスポイントとして機能します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/9659129f3236e924011d2685950a79e2.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                          　    ／＼
                              ／　／＼
hold down this button      =&amp;gt; |　＼／|
 until blue-light breathes    ＼　　／
                              　＼／
                           　    ┃

connect to Wio-Node AP, &#39;Wio_XXXXXX&#39;

checking SSID your machine connected...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/095/06_func.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;パソコンから周辺のアクセスポイントを確認してみると&lt;code&gt;Wio_XXXXXX&lt;/code&gt;というSSIDがあることが確認できます。これはWio Node自身がWi-Fiのアクセスポイントになっていて、情報の書き込みを受け付けている状態です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/7092c4b2695bb83e49d52ae018c2ce11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Wio_XXXXXX&lt;/code&gt;にパソコンから接続してみましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/0b573c2df4e16443ae579037d33f5170.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;接続するとターミナルで以下の情報が表示されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;now connected to SSID &#39;Wio_XXXXXX&#39;, ok? [Y/n]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Y&lt;/code&gt;を入力して進みます。
接続が完了すると以下の情報が表示され、アクセストークンの情報も表示されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;done.
access_token for &#39;wio-n0bisuke&#39; is &#39;xxxxxxxxxxxxxxxxxxxxx&#39;.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;繋がらない場合は再度&lt;code&gt;Y&lt;/code&gt;を押して再接続してみましょう。&lt;/p&gt;

&lt;h2 id=&#34;確認&#34;&gt;確認&lt;/h2&gt;

&lt;p&gt;成功するとアプリ画面に名前を設定したWio Nodeデバイスの項目が追加されています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/937a9d95323200c133a1b689d4fa4ede.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これが確認できれば成功です。&lt;/p&gt;

&lt;h2 id=&#34;謝辞&#34;&gt;謝辞&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/hori__hiro&#34;&gt;@horihiro&lt;/a&gt;さんが&lt;a href=&#34;https://iotlt.connpass.com/event/52082/&#34;&gt;#iotlt vol27&lt;/a&gt;で公開して下さいました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/iotlt?src=hash&#34;&gt;#iotlt&lt;/a&gt; 今朝リリースされたそうです❗ &lt;a href=&#34;https://t.co/HuB2BNIaBL&#34;&gt;pic.twitter.com/HuB2BNIaBL&lt;/a&gt;&lt;/p&gt; 大熊 元気 (@JNTEST23) &lt;a href=&#34;https://twitter.com/JNTEST23/status/865524586166665218&#34;&gt;2017年5月19日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>