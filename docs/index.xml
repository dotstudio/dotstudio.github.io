<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs-rsses on dotstudio（ドットスタジオ）</title>
    <link>https://dotstud.io/docs/index.xml</link>
    <description>Recent content in Docs-rsses on dotstudio（ドットスタジオ）</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2016 dotstudio inc.</copyright>
    <lastBuildDate>Sun, 20 Nov 2016 01:02:41 +0900</lastBuildDate>
    <atom:link href="/docs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>シリアル通信</title>
      <link>https://dotstud.io/docs/2-serial/</link>
      <pubDate>Sun, 20 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/2-serial/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>センサー</title>
      <link>https://dotstud.io/docs/2-sensor/</link>
      <pubDate>Sat, 19 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/2-sensor/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>マイコンボード</title>
      <link>https://dotstud.io/docs/2-microcon/</link>
      <pubDate>Tue, 15 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/2-microcon/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>直流と交流</title>
      <link>https://dotstud.io/docs/2-dirandalt/</link>
      <pubDate>Mon, 14 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/2-dirandalt/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>デジタルとアナログ</title>
      <link>https://dotstud.io/docs/2-digitalanalog/</link>
      <pubDate>Sun, 13 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/2-digitalanalog/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>消費電力</title>
      <link>https://dotstud.io/docs/2-consumption/</link>
      <pubDate>Sun, 13 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/2-consumption/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>回路図</title>
      <link>https://dotstud.io/docs/2-circuit/</link>
      <pubDate>Sat, 12 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/2-circuit/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>ブレッドボード</title>
      <link>https://dotstud.io/docs/3-breadboard/</link>
      <pubDate>Fri, 11 Nov 2016 03:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/3-breadboard/</guid>
      
      <description>

&lt;p&gt;ブレッドボードとはハンダなどを利用して基板と素子を溶接することなく、素子を差し込むだけで回路を組み立てられる部品です。&lt;/p&gt;

&lt;p&gt;![基板の写真]()&lt;/p&gt;

&lt;p&gt;ハンダが不要なのでmまずはブレッドボード上で回路を組み立て、想定通りに回路が動くことを確かめてからユニバーサル基板やプリント基板などを作成することがよくあります。&lt;/p&gt;

&lt;h1 id=&#34;構造&#34;&gt;構造&lt;/h1&gt;

&lt;p&gt;![構造の絵]()&lt;/p&gt;

&lt;p&gt;たくさんの穴が空いており、中心に深い溝があります。また、製品によっては英字、数字が書かれていたり、横に赤と青のラインが書かれたものもあります。&lt;/p&gt;

&lt;p&gt;深い溝を中心に左右に伸びるライン方向（行列で言うところの&amp;rdquo;行&amp;rdquo;方向、写真の数字の書かれている方向）は電気的に繋がっています。深い溝と平行なライン（行列で言うところの&amp;rdquo;列&amp;rdquo;方向、写真の英字が書かれている方向）や、行方向でも深い溝を超えては継っていません。スイッチやマイコンなど、電気的に継ってしまっては困る回路は中心の深い溝をまたぐように配置をします。&lt;/p&gt;

&lt;p&gt;ブレッドボードは構造上大電流を流すような回路には向いていないため、モータを回すような回路を作るのはやめておいた方が良い。火事の原因になる場合があります。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;相談事項&lt;/strong&gt; 安いのでいいから分解して中身を剥き出したい&lt;/p&gt;

&lt;h1 id=&#34;使い方&#34;&gt;使い方&lt;/h1&gt;

&lt;p&gt;実際にジャンパワイヤとLEDを使用して、電源にジャンパワイヤを接続するとLEDが点灯する回路を組んでみます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt; 回路図と写真&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>グローブシステム</title>
      <link>https://dotstud.io/docs/3-grove/</link>
      <pubDate>Fri, 11 Nov 2016 02:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/3-grove/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>抵抗</title>
      <link>https://dotstud.io/docs/2-r/</link>
      <pubDate>Fri, 11 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/2-r/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>「IoT」とは</title>
      <link>https://dotstud.io/docs/1-iot/</link>
      <pubDate>Thu, 10 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/1-iot/</guid>
      
      <description></description>
    </item>
    
    <item>
      <title>電流と電圧</title>
      <link>https://dotstud.io/docs/aandv/</link>
      <pubDate>Thu, 10 Nov 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/aandv/</guid>
      
      <description>

&lt;h2 id=&#34;電圧-は-水圧-と同じようなもの&#34;&gt;「電圧」は、「水圧」と同じようなもの&lt;/h2&gt;

&lt;!--![(1)コンセントとか電池の画像？]()--&gt;

&lt;p&gt;「電圧」「電流」「抵抗」
日常生活で最もよく聞くのが、「電圧」だと思います。コンセントからとれる電気の「電圧」は100V(ボルト)、単3電池1本の「電圧」は1.5V(ボルト)、というのは多くの人が知っていることでしょう。&lt;/p&gt;

&lt;p&gt;この「電圧」として表される数値は電気そのものの強さではなく、 &lt;strong&gt;「電気を流そうとする力の強さ」&lt;/strong&gt; です。&lt;/p&gt;

&lt;!--![(2)アパートの階と蛇口から出る水の強さの違い]()--&gt;

&lt;p&gt;&lt;strong&gt;水道の話に置き換えてみると「電圧」は「水圧」に相当&lt;/strong&gt; します。例えば2階や3階建てのアパートのキッチンなどでは、どの部屋のも基本的には同じ蛇口が使われていますが、1階が最も水の流れ出る量が多く、上のほうの階に行くにつれて少なくなっていきます。（※注:給水塔が屋上になく、かつ古い建物の場合です）&lt;/p&gt;

&lt;p&gt;これは、 &lt;strong&gt;蛇口の大きさは同じであるが水圧が階数によって異なるため&lt;/strong&gt; です。&lt;/p&gt;

&lt;h2 id=&#34;いわゆる-電気-とは-電流-のこと&#34;&gt;いわゆる「電気」とは、「電流」のこと&lt;/h2&gt;

&lt;p&gt;では「電流」は何なのかというと、先ほどの水道の話に置き換えると &lt;strong&gt;「電流」は水そのもの&lt;/strong&gt; となります。水圧の違いが水の流れ出る量に影響を与えるのと同様に、 &lt;strong&gt;電圧の違いは電流の量に影響を与えます。&lt;/strong&gt; 電圧が高いほど、電流量も多くなるわけです。&lt;/p&gt;

&lt;p&gt;我々人間は生きるために水が必要となります。例えばコップ1杯の水がほしいときに必要なのは「水圧」ではなく「水そのものの量」ですよね。電気を扱う機械も同じで、 &lt;strong&gt;動き続けるために必要なのは「電圧」ではなく「電流の量」です。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;このことから、 &lt;strong&gt;「電気」の本質は「電流」のこと&lt;/strong&gt; だといえます。「電圧」はあくまで、「電流」を多く発生させるために必要な力だということですね。&lt;/p&gt;

&lt;h2 id=&#34;蛇口の口径を変えると-水量も変化する&#34;&gt;蛇口の口径を変えると、水量も変化する&lt;/h2&gt;

&lt;!--![(3)口径の大きい蛇口と小さい蛇口]()--&gt;

&lt;p&gt;さて、もしもあなたがアパートの上のほうの階に住んでいて、水圧が弱くて困っているとします。このときに水の量を増やす手段としてひとつ考えられるのは、 &lt;strong&gt;蛇口の径を大きくすること&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;電気においても同じで、もしも電圧が低ければ、 &lt;strong&gt;電流の通り道を太くしてやれば電圧を変えずに電流量を増やすことができます。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;この「電流の通り道」は、電子工作の世界では、主に「銅線」という銅でできた細い線のことをいいます。水と同様にこの線の太さなどで電流の流れ具合も変わるわけですが、このときの &lt;strong&gt;「電流の流れにくさ」を「抵抗」といいます。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;抵抗-は-交通渋滞-に似ている&#34;&gt;「抵抗」は「交通渋滞」に似ている&lt;/h2&gt;

&lt;!--![(4)道路の太さとクルマの量の図]()--&gt;

&lt;p&gt;例えば、クルマを運転して東京から名古屋に行く場合をイメージしてみましょう。道路幅が比較的広くて距離も短い「新東名高速道路」を使う場合と、道路幅が狭めで距離も長くなる「中央自動車道」では、どちらのほうがストレスがたまるでしょうか。ほとんどの場合は後者のほうが疲れやすく、時間もかかります。&lt;/p&gt;

&lt;p&gt;電気の場合もこれと同じで、 &lt;strong&gt;電流の流れ道は、幅が狭くて距離が長いほど電流が流れにくくなります。&lt;/strong&gt; これは &lt;strong&gt;「抵抗値が大きい」&lt;/strong&gt; と表現することができます。&lt;/p&gt;

&lt;!--![(5)直線な高速道路と、信号のある一般道路の比較の図]()--&gt;

&lt;p&gt;では東京から名古屋まで、高速道路を使わずに一般道路で行く場合も考えてみましょう。当然、一般道路は信号機が多数あったり、カーブがきつかったり、車線は一つしかなかったり、など、高速道路に比べると明らかに障害物が多いですね。これはもうどんな高速道路を使うよりも行きづらいことに疑いはありません。&lt;/p&gt;

&lt;p&gt;電気の場合は、通り道の幅や長さを変えたりせずとも、 &lt;strong&gt;その通り道の一部に電流の流れにくい「障害物」を入れることで「抵抗値」を大きくする&lt;/strong&gt; ことができます。このような処置がなされた電気の通り道となる部品のことを &lt;strong&gt;「抵抗器」&lt;/strong&gt; といいます。&lt;/p&gt;

&lt;h2 id=&#34;電圧-電流-抵抗-のそれぞれの関係&#34;&gt;電圧・電流・抵抗 のそれぞれの関係&lt;/h2&gt;

&lt;p&gt;以上のことから、「電圧」「電流」「抵抗」の3つには、次のような関係があることがわかっていただけたかと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;電圧が大きくなると、電流の量が増える&lt;/li&gt;
&lt;li&gt;抵抗が大きくなると、電流の量が減る&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここで、電圧を記号E、電流を記号I、抵抗Rとしましょう。
するとこれら3つのあいだには次のような関係があります。&lt;/p&gt;

&lt;p&gt;I = E ÷ R&lt;/p&gt;

&lt;p&gt;この式は、 &lt;strong&gt;「オームの法則」&lt;/strong&gt; と呼ばれます。いわゆる「電気」は、「電流」のことであるというのは先述しました。&lt;/p&gt;

&lt;p&gt;つまり &lt;strong&gt;電気の強さは、電圧が大きいほど強く、抵抗が大きいほど弱くなる&lt;/strong&gt; ということになります。&lt;/p&gt;

&lt;h2 id=&#34;電子パーツは-電流-でうごく&#34;&gt;電子パーツは「電流」でうごく&lt;/h2&gt;

&lt;p&gt;さて、電子工作において、これら「電圧」「電流」「抵抗」を考えなければならない場面というのはどのようなときでしょうか。&lt;/p&gt;

&lt;!--![(6)電池とコンセントとLED等しいの図]()--&gt;

&lt;p&gt;先ほど、「電流」が「電気そのもの」ということは説明しました。つまり、電気で動くパーツは電流を基準に考えればよいわけです。（一部、電圧駆動というパーツも存在します）&lt;/p&gt;

&lt;p&gt;例えば、あるLEDを光らせたいとき、20mA（ミリアンペア）という量の電流が必要であるとします。この数値はパーツを買ったときに「定格電流」として表示されているのでチェックしておきましょう。&lt;/p&gt;

&lt;h3 id=&#34;電池でledを光らせてみよう&#34;&gt;電池でLEDを光らせてみよう&lt;/h3&gt;

&lt;!--![(7)20mAのLEDを光らせる]()--&gt;

&lt;p&gt;電源として用意できるのは乾電池やコンセントからの電気などですが、その電気に関する情報として知り得ることができるのは「電圧」のみです。&lt;/p&gt;

&lt;p&gt;例えば、乾電池4本（合計6V）で定格20mAのLEDを光らせる回路を作るとしましょう。この回路では、LEDの両端に6Vという「電気の圧力」がかかっていますが、実際に流れる電気である「電流」はどれほどになるのかわかりません。&lt;/p&gt;

&lt;!--![(8)上の回路図に抵抗を追加]()--&gt;

&lt;p&gt;そこで、LEDのどちらか側に「抵抗器」を置くと、もしも抵抗値がわかっていれば、その抵抗器から流れ出る電流はどれぐらいになるか計算することができます。その電流値が20mAで、LEDに流れ込むようにしてあげればうまく点灯しそうですよね？&lt;/p&gt;

&lt;p&gt;このとき「オームの法則」を利用して、 &lt;strong&gt;与えられた電圧から必要な電流を流せるだけの抵抗値を求めます。&lt;/strong&gt; すなわち、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;20mA = 6V ÷ R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;が成り立つようなRの値の抵抗器を、LEDの前か後に置いてあげれば良いわけです。&lt;/p&gt;

&lt;p&gt;ここで、mA(ミリアンペア)のm(ミリ)は、1000分の1を表す接頭辞です。これを考慮してRについて解くと、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;R = 6V ÷ (20 × 0.001) = 300
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となります。また、抵抗値の単位はΩ(オーム)といいます。よって、乾電池4本6Vで20mA駆動のLED1個を光らせたいときは、「300Ωの抵抗が必要」となります。&lt;/p&gt;

&lt;h3 id=&#34;コンセントでもledを光らせてみよう&#34;&gt;コンセントでもLEDを光らせてみよう&lt;/h3&gt;

&lt;p&gt;今度はコンセントからの電気、100Vの電圧でLEDを光らせることを考えてみましょう。（ここでは、簡単のため直流100Vとして話をすすめます）&lt;/p&gt;

&lt;!--![(9)コンセントで20mAのLEDを光らせる]()--&gt;

&lt;p&gt;先ほどの乾電池の電圧6Vが100Vへと大幅に大きくなりました。この場合も、オームの法則を使って必要な抵抗器の値を求めてみましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;R = 100V ÷ (20 × 0.001) = 5000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5000Ω、ですね。ほとんどの場合は5000Ωとは言わず、1000を表す接頭辞のk(キロ)を用いて5kΩ(キロオーム)と表記されます。よって、5kΩの抵抗器を入れれば、コンセントからの100Vという大きな電圧でも同じLEDを光らせることが可能なのです。&lt;/p&gt;

&lt;p&gt;しかし実際には、電子工作でよく使われるような小さな抵抗器では、「定格電力」の値を大きくオーバーして焼き切れてしまうため、大電力用の大きな抵抗器を使う必要があります。これは後述する、電子パーツの「消費電力」が関係しています。&lt;/p&gt;

&lt;h2 id=&#34;どんなところにも抵抗は存在する&#34;&gt;どんなところにも抵抗は存在する&lt;/h2&gt;

&lt;p&gt;もしも抵抗器がない回路を作ると、電流はどれぐらい流れるのでしょうか？　抵抗器がもし無かったとしても、回路を構成する銅線・LED・電池に至るまで、電子パーツはすべて「抵抗値」を持っています。ここでオームの法則を考えてみましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;I = E ÷ R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここで、回路全体の抵抗値がRだったとします。このRが限りなく0に近づくとすると、電流Iは電圧Eの値に関係なく、無限に上昇していきます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LED</title>
      <link>https://dotstud.io/docs/led/</link>
      <pubDate>Tue, 19 Jul 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/led/</guid>
      
      <description>

&lt;h1 id=&#34;led&#34;&gt;LED&lt;/h1&gt;

&lt;p&gt;英語でLight Emitting Diode、略してLED。日本語では発光ダイオードと呼ばれる部品です。
その名の通り電気を流すと光を発します。
ダイオードと同じく電流が流れる方向が決まっている(「極性がある」と言ったりします)ので、接続に注意が必要です。&lt;/p&gt;

&lt;h2 id=&#34;構造&#34;&gt;構造&lt;/h2&gt;

&lt;p&gt;LEDは砲弾型の2本足の物であったり、砲弾型で複数の足があるもの、表面実装用のものであたりと様々な形のものがあります。
砲弾型であれば５mmと3mmがよく売られています。よく電子工作で使われているのは5mmのものが多いです。&lt;/p&gt;

&lt;p&gt;LEDはアノード、カソードの２極があります。
アノードからカソードへ電流を流しますが、反対のカソードからアノードへはほとんど電流を流しません。また、LEDはアノードからカソードへ電流を流す際にエネルギーを光に変換して発光します。&lt;/p&gt;

&lt;p&gt;複数の足があるLEDのや７セグ、LEDマトリックスには構造によってアノードコモン、カソードコモンと区別されます。コモンとは共通のという意味で、例えばカソードコモンの場合、共通のカソード(-側)をグランドに接続し、アノード側を抵抗を経由してマイコンの端子に接続をします。そうするとマイコン端子の出力に応じてLEDの表示を変えることができるようになります。&lt;/p&gt;

&lt;h2 id=&#34;使い方&#34;&gt;使い方&lt;/h2&gt;

&lt;h3 id=&#34;基本的なled&#34;&gt;基本的なLED&lt;/h3&gt;

&lt;p&gt;アノード側を＋、カソード側を-に接続することで電流が流れ発光します。&lt;/p&gt;

&lt;!--![回路図]()--&gt;

&lt;h3 id=&#34;複数の端子のあるled&#34;&gt;複数の端子のあるLED&lt;/h3&gt;

&lt;p&gt;フルカラーLEDなどが複数の端子をもっています。それぞれの端子に加える電圧によって色が変化します。&lt;/p&gt;

&lt;!--![回路図]()--&gt;

&lt;h3 id=&#34;7セグ-led&#34;&gt;7セグ LED&lt;/h3&gt;

&lt;p&gt;７セグの例を見てみましょう。&lt;/p&gt;

&lt;!--![カソードコモンの回路図]()-&gt;

参考:http://www.web-mondai.com/upload/00023/00023_1275552483_0023_a.png

この場合、マイコンのP0端子のみをHighにすると８の一番上が光ります。なので例えば２と表示する場合、P0、P1、P3、P4、P6をHighにしてそれ以外をLowにすると２の形に光らせることが可能になります。

&lt;!--![回路例]--&gt;

&lt;p&gt;また、コモン側の端子をマイコンで制御することで複数の桁数の７セグLEDを表示することも可能になります。&lt;/p&gt;

&lt;!--![回路例]--&gt;

&lt;p&gt;参考:&lt;a href=&#34;http://jsdiy.web.fc2.com/avr_7seg8test/&#34;&gt;http://jsdiy.web.fc2.com/avr_7seg8test/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nefry</title>
      <link>https://dotstud.io/docs/nefry/</link>
      <pubDate>Tue, 19 Jul 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/nefry/</guid>
      
      <description>

&lt;p&gt;Nefryとは、&lt;a href=&#34;twitter.com/wamisnet&#34;&gt;wamisnet&lt;/a&gt;氏によって開発された小型のマイコンボードです。Wi-Fiさえあればすぐにネットワークに接続でき、IoTアプリケーションを製作する際のハードウェアプラットフォームとして非常に優秀な製品となっています。&lt;/p&gt;

&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;

&lt;p&gt;Nefryは、「ESP8266」というマイコンモジュールを利用したボードです。ESP8266はWi-Fiに対応しており、ネットワークに無線接続できるモジュールとしてはとても優れていますが、そのままでは難易度の高いはんだ付けが必須となっていました。&lt;/p&gt;

&lt;p&gt;そこで、入出力関連はGPIOソケットと&lt;a href=&#34;http://wiki.seeed.cc/Grove_System/&#34;&gt;Grove&lt;/a&gt;を備え、また電源も汎用的なUSBによるものとしたことで、ハードウェアの開発に一切の工具を不要としました。&lt;/p&gt;

&lt;p&gt;さらに手持ちのPCのWebブラウザから様々な設定ができ、プログラムの書き込みも無線で行えるなどといったソフトウェア面での簡単さもあり、特に初心者がIoTなプロトタイプを作りたいといった場面で強力なベースプラットフォームとなるような設計になっています。&lt;/p&gt;

&lt;h2 id=&#34;インターフェース&#34;&gt;インターフェース&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://qiita-image-store.s3.amazonaws.com/0/97208/ba4a18a9-c793-bca0-5d3a-da47eea8ef71.png&#34; alt=&#34;Nefryの基板写真・各モジュールの説明入り&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;技術仕様&#34;&gt;技術仕様&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;メインチップ: ESP8266(ESP-WROOM-02)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wi-Fi 802.11b/g/n(2.4GHz帯)&lt;/li&gt;
&lt;li&gt;セキュリティ WPA2/WPA/WEP/AES/TKIP&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;フルカラーLED*1&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Groveモジュールを最大4個接続
(UART, I2C, デジタル, アナログ, 各1ソケット)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;GPIOピンソケット&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アナログ入力(A0)&lt;/li&gt;
&lt;li&gt;I2C(D0, D1)&lt;/li&gt;
&lt;li&gt;SPI(D2, D3, D4, D5)&lt;/li&gt;
&lt;li&gt;3.3Vソケット*1, GNDソケット * 2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ユーザーが利用可能なスイッチ(SW) * 1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;特徴&#34;&gt;特徴&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;モバイルバッテリに挿した状態で動かせるので、電源のない場所でも動作可能&lt;/li&gt;
&lt;li&gt;スイッチとフルカラーLEDがついているので、新たなパーツを買わなくても通信実験などができる&lt;/li&gt;
&lt;li&gt;Groveシステムに対応、センサ類もGPIOソケットに直接挿せるため、はんだ付けは一切必要なし&lt;/li&gt;
&lt;li&gt;上級者はパーツの後付けによってmicroSDカードを利用可能（スイッチとの同時利用不可）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3ステップでわかる開発方法&#34;&gt;3ステップでわかる開発方法&lt;/h2&gt;

&lt;p&gt;基本的な始め方は以下の記事で紹介されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://liginc.co.jp/298161&#34;&gt;さくっと生活を便利にする！FRISKサイズのIoT向けデバイス「Nefry」を使ってみよう【環境構築編】&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;こちらでは簡単な開発の流れを説明します。&lt;/p&gt;

&lt;h3 id=&#34;1-arduino-ideとnefryライブラリをインストール&#34;&gt;1. Arduino IDEとNefryライブラリをインストール&lt;/h3&gt;

&lt;p&gt;Nefryは、「Arduino IDE」というArduino用の開発ソフトウェアで開発できます。Arduinoで開発をしたことがない方は、まずArduino IDEをダウンロード・インストールしましょう。次にIDE内からNefryライブラリをインストールします。&lt;/p&gt;

&lt;h3 id=&#34;2-nefryをusb電源に接続してブラウザからwi-fiセットアップ&#34;&gt;2. NefryをUSB電源に接続してブラウザからWi-Fiセットアップ&lt;/h3&gt;

&lt;p&gt;![モバイルバッテリにつないだNefryとPCのセットアップ画面]()&lt;/p&gt;

&lt;p&gt;NefryのUSBをモバイルバッテリやPCのUSBポートに接続しましょう。これは電源専用となっています。
電源が入ったらLEDが光るので、NefryのアクセスポイントをPCから探して接続します。&lt;/p&gt;

&lt;p&gt;Nefryアクセスポイントに接続したままWebブラウザから &lt;a href=&#34;http://192.168.4.1&#34;&gt;http://192.168.4.1&lt;/a&gt; を参照して、コンソールが表示されれば各設定を調整します。（詳しくは上記の記事を参照ください）&lt;/p&gt;

&lt;h3 id=&#34;3-arduino-ideで出力したバイナリファイルを転送&#34;&gt;3. Arduino IDEで出力したバイナリファイルを転送&lt;/h3&gt;

&lt;p&gt;Arduino IDEで打ち込んだプログラムをあらかじめバイナリファイルにコンパイルしておきます。
Web上のコンソールから当該のバイナリファイルを選択してアップロードしたら書き込みは完了です。&lt;/p&gt;

&lt;h2 id=&#34;開発例&#34;&gt;開発例&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Nefryとは何か？他のボードとどこが違うの？&lt;br /&gt;
&lt;a href=&#34;https://liginc.co.jp/236620&#34;&gt;自作したオリジナルIoTデバイス「Nefry」とインターネットを繋いでみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;まずはNefryを開発するための環境を整える！&lt;br /&gt;
&lt;a href=&#34;https://liginc.co.jp/298161&#34;&gt;さくっと生活を便利にする！FRISKサイズのIoT向けデバイス「Nefry」を使ってみよう【環境構築編】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ボタンを押したことをWebに反映させてみよう&lt;br /&gt;
&lt;a href=&#34;https://liginc.co.jp/282918&#34;&gt;NefryとMilkcocoaを連携させて、WebサイトにリアルタイムでPush通知してみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スマホやTwitterに通知を送ってみる&lt;br /&gt;
&lt;a href=&#34;https://liginc.co.jp/263899&#34;&gt;Webサービス同士を連携できる「IFTTT」と自作IoTデバイスを繋いで生活を便利にしてみた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;公式リンク&#34;&gt;公式リンク&lt;/h2&gt;

&lt;p&gt;購入先：&lt;a href=&#34;https://dotstud.io/projects/nefry-connect-internet/&#34;&gt;Nefry v1.0 | dotstudio&lt;/a&gt;&lt;br /&gt;
説明書：&lt;a href=&#34;https://wamisnet.github.io/Nefry_manual.pdf&#34;&gt;Nefry v2.0&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Seeeduino v4.2</title>
      <link>https://dotstud.io/docs/4-seeduino/</link>
      <pubDate>Tue, 19 Jul 2016 01:02:41 +0900</pubDate>
      
      <guid>https://dotstud.io/docs/4-seeduino/</guid>
      
      <description></description>
    </item>
    
  </channel>
</rss>