<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>basics on dotstudio（ドットスタジオ）</title><link>https://dotstud.io/doctype/basics/</link><description>Recent content in basics on dotstudio（ドットスタジオ）</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>© 2018 dotstudio inc.</copyright><lastBuildDate>Thu, 18 Jan 2018 01:02:41 +0900</lastBuildDate><atom:link href="/doctype/basics/" rel="self" type="application/rss+xml"/><item><title>「IoT」とは</title><link>https://dotstud.io/docs/iot/</link><pubDate>Thu, 10 Nov 2016 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/iot/</guid><description>&lt;p>※この項目は書きかけです。&lt;/p>
&lt;p>モノのインターネット（英語: Internet of Things, IoT）とは、様々な「モノ（物）」がインターネットに接続され（単に繋がるだけではなく、モノがインターネットのように繋がる）、
情報交換することにより相互に制御する仕組みである。それによる社会の実現も指す。「物のインターネット」と表記された例もある。&lt;/p></description></item><item><title>電流と電圧</title><link>https://dotstud.io/docs/aandv/</link><pubDate>Thu, 10 Nov 2016 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/aandv/</guid><description>&lt;h2 id="heading">「電圧」は、「水圧」と同じようなもの&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>「電圧」「電流」「抵抗」
日常生活で最もよく聞くのが、「電圧」だと思います。コンセントからとれる電気の「電圧」は100V(ボルト)、単3電池1本の「電圧」は1.5V(ボルト)、というのは多くの人が知っていることでしょう。&lt;/p>
&lt;p>この「電圧」として表される数値は電気そのものの強さではなく、 &lt;strong>「電気を流そうとする力の強さ」&lt;/strong> です。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>水道の話に置き換えてみると「電圧」は「水圧」に相当&lt;/strong> します。例えば2階や3階建てのアパートのキッチンなどでは、どの部屋のも基本的には同じ蛇口が使われていますが、1階が最も水の流れ出る量が多く、上のほうの階に行くにつれて少なくなっていきます。（※注:給水塔が屋上になく、かつ古い建物の場合です）&lt;/p>
&lt;p>これは、 &lt;strong>蛇口の大きさは同じであるが水圧が階数によって異なるため&lt;/strong> です。&lt;/p>
&lt;h2 id="heading-1">いわゆる「電気」とは、「電流」のこと&lt;/h2>
&lt;p>では「電流」は何なのかというと、先ほどの水道の話に置き換えると &lt;strong>「電流」は水そのもの&lt;/strong> となります。水圧の違いが水の流れ出る量に影響を与えるのと同様に、 &lt;strong>電圧の違いは電流の量に影響を与えます。&lt;/strong> 電圧が高いほど、電流量も多くなるわけです。&lt;/p>
&lt;p>我々人間は生きるために水が必要となります。例えばコップ1杯の水がほしいときに必要なのは「水圧」ではなく「水そのものの量」ですよね。電気を扱う機械も同じで、 &lt;strong>動き続けるために必要なのは「電圧」ではなく「電流の量」です。&lt;/strong>&lt;/p>
&lt;p>このことから、 &lt;strong>「電気」の本質は「電流」のこと&lt;/strong> だといえます。「電圧」はあくまで、「電流」を多く発生させるために必要な力だということですね。&lt;/p>
&lt;h2 id="heading-2">蛇口の口径を変えると、水量も変化する&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>さて、もしもあなたがアパートの上のほうの階に住んでいて、水圧が弱くて困っているとします。このときに水の量を増やす手段としてひとつ考えられるのは、 &lt;strong>蛇口の径を大きくすること&lt;/strong>です。&lt;/p>
&lt;p>電気においても同じで、もしも電圧が低ければ、 &lt;strong>電流の通り道を太くしてやれば電圧を変えずに電流量を増やすことができます。&lt;/strong>&lt;/p>
&lt;p>この「電流の通り道」は、電子工作の世界では、主に「銅線」という銅でできた細い線のことをいいます。水と同様にこの線の太さなどで電流の流れ具合も変わるわけですが、このときの &lt;strong>「電流の流れにくさ」を「抵抗」といいます。&lt;/strong>&lt;/p>
&lt;h2 id="heading-3">「抵抗」は「交通渋滞」に似ている&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;p>例えば、クルマを運転して東京から名古屋に行く場合をイメージしてみましょう。道路幅が比較的広くて距離も短い「新東名高速道路」を使う場合と、道路幅が狭めで距離も長くなる「中央自動車道」では、どちらのほうがストレスがたまるでしょうか。ほとんどの場合は後者のほうが疲れやすく、時間もかかります。&lt;/p>
&lt;p>電気の場合もこれと同じで、 &lt;strong>電流の流れ道は、幅が狭くて距離が長いほど電流が流れにくくなります。&lt;/strong> これは &lt;strong>「抵抗値が大きい」&lt;/strong> と表現することができます。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>では東京から名古屋まで、高速道路を使わずに一般道路で行く場合も考えてみましょう。当然、一般道路は信号機が多数あったり、カーブがきつかったり、車線は一つしかなかったり、など、高速道路に比べると明らかに障害物が多いですね。これはもうどんな高速道路を使うよりも行きづらいことに疑いはありません。&lt;/p>
&lt;p>電気の場合は、通り道の幅や長さを変えたりせずとも、 &lt;strong>その通り道の一部に電流の流れにくい「障害物」を入れることで「抵抗値」を大きくする&lt;/strong> ことができます。このような処置がなされた電気の通り道となる部品のことを &lt;strong>「抵抗器」&lt;/strong> といいます。&lt;/p>
&lt;h2 id="-">電圧・電流・抵抗 のそれぞれの関係&lt;/h2>
&lt;p>以上のことから、「電圧」「電流」「抵抗」の3つには、次のような関係があることがわかっていただけたかと思います。&lt;/p>
&lt;ul>
&lt;li>電圧が大きくなると、電流の量が増える&lt;/li>
&lt;li>抵抗が大きくなると、電流の量が減る&lt;/li>
&lt;/ul>
&lt;p>ここで、電圧を記号E、電流を記号I、抵抗Rとしましょう。
するとこれら3つのあいだには次のような関係があります。&lt;/p>
&lt;p>I = E ÷ R&lt;/p>
&lt;p>この式は、 &lt;strong>「オームの法則」&lt;/strong> と呼ばれます。いわゆる「電気」は、「電流」のことであるというのは先述しました。&lt;/p>
&lt;p>つまり &lt;strong>電気の強さは、電圧が大きいほど強く、抵抗が大きいほど弱くなる&lt;/strong> ということになります。&lt;/p>
&lt;h2 id="heading-4">電子パーツは「電流」でうごく&lt;/h2>
&lt;p>さて、電子工作において、これら「電圧」「電流」「抵抗」を考えなければならない場面というのはどのようなときでしょうか。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>先ほど、「電流」が「電気そのもの」ということは説明しました。つまり、電気で動くパーツは電流を基準に考えればよいわけです。（一部、電圧駆動というパーツも存在します）&lt;/p>
&lt;p>例えば、あるLEDを光らせたいとき、20mA（ミリアンペア）という量の電流が必要であるとします。この数値はパーツを買ったときに「定格電流」として表示されているのでチェックしておきましょう。&lt;/p>
&lt;h3 id="led">電池でLEDを光らせてみよう&lt;/h3>
&lt;!-- raw HTML omitted -->
&lt;p>電源として用意できるのは乾電池やコンセントからの電気などですが、その電気に関する情報として知り得ることができるのは「電圧」のみです。&lt;/p>
&lt;p>例えば、乾電池4本（合計6V）で定格20mAのLEDを光らせる回路を作るとしましょう。この回路では、LEDの両端に6Vという「電気の圧力」がかかっていますが、実際に流れる電気である「電流」はどれほどになるのかわかりません。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>そこで、LEDのどちらか側に「抵抗器」を置くと、もしも抵抗値がわかっていれば、その抵抗器から流れ出る電流はどれぐらいになるか計算することができます。その電流値が20mAで、LEDに流れ込むようにしてあげればうまく点灯しそうですよね？&lt;/p>
&lt;p>このとき「オームの法則」を利用して、 &lt;strong>与えられた電圧から必要な電流を流せるだけの抵抗値を求めます。&lt;/strong> すなわち、&lt;/p>
&lt;pre>&lt;code>20mA = 6V ÷ R
&lt;/code>&lt;/pre>&lt;p>が成り立つようなRの値の抵抗器を、LEDの前か後に置いてあげれば良いわけです。&lt;/p>
&lt;p>ここで、mA(ミリアンペア)のm(ミリ)は、1000分の1を表す接頭辞です。これを考慮してRについて解くと、&lt;/p>
&lt;pre>&lt;code>R = 6V ÷ (20 × 0.001) = 300
&lt;/code>&lt;/pre>&lt;p>となります。また、抵抗値の単位はΩ(オーム)といいます。よって、乾電池4本6Vで20mA駆動のLED1個を光らせたいときは、「300Ωの抵抗が必要」となります。&lt;/p>
&lt;h3 id="led-1">コンセントでもLEDを光らせてみよう&lt;/h3>
&lt;p>今度はコンセントからの電気、100Vの電圧でLEDを光らせることを考えてみましょう。（ここでは、簡単のため直流100Vとして話をすすめます）&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>先ほどの乾電池の電圧6Vが100Vへと大幅に大きくなりました。この場合も、オームの法則を使って必要な抵抗器の値を求めてみましょう。&lt;/p>
&lt;pre>&lt;code>R = 100V ÷ (20 × 0.001) = 5000
&lt;/code>&lt;/pre>&lt;p>5000Ω、ですね。ほとんどの場合は5000Ωとは言わず、1000を表す接頭辞のk(キロ)を用いて5kΩ(キロオーム)と表記されます。よって、5kΩの抵抗器を入れれば、コンセントからの100Vという大きな電圧でも同じLEDを光らせることが可能なのです。&lt;/p>
&lt;p>しかし実際には、電子工作でよく使われるような小さな抵抗器では、「定格電力」の値を大きくオーバーして焼き切れてしまうため、大電力用の大きな抵抗器を使う必要があります。これは後述する、電子パーツの「消費電力」が関係しています。&lt;/p>
&lt;h2 id="heading-5">どんなところにも抵抗は存在する&lt;/h2>
&lt;p>もしも抵抗器がない回路を作ると、電流はどれぐらい流れるのでしょうか？　抵抗器がもし無かったとしても、回路を構成する銅線・LED・電池に至るまで、電子パーツはすべて「抵抗値」を持っています。ここでオームの法則を考えてみましょう。&lt;/p>
&lt;pre>&lt;code>I = E ÷ R
&lt;/code>&lt;/pre>&lt;p>ここで、回路全体の抵抗値がRだったとします。このRが限りなく0に近づくとすると、電流Iは電圧Eの値に関係なく、無限に上昇していきます。&lt;/p></description></item><item><title>回路図</title><link>https://dotstud.io/docs/circuit/</link><pubDate>Sat, 25 Feb 2017 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/circuit/</guid><description>&lt;p>回路図とは、電子部品同士をどのように繋ぐのか図解したものです。&lt;/p>
&lt;p>回路図があることで、自分が見たときはもちろん他の人に伝える時にも &lt;strong>間違えることなく電子回路を組み立てる&lt;/strong> ことができます。&lt;/p>
&lt;h2 id="heading">回路図をみてみよう&lt;/h2>
&lt;h3 id="heading-1">一般的な回路図&lt;/h3>
&lt;p>回路図にもいくつか種類があります。下記のような、線と簡単な図形で描かれたシンプルなものが一般的です。&lt;/p>
&lt;p>&lt;img src="https://dotstud.io/img/docs/circuit/circuit.png" alt="">&lt;/p>
&lt;p>このような回路図を読むことができると、インターネット上にある様々な回路を組むことができます。
しかし、事前知識なしに読むのは難しいです。&lt;/p>
&lt;p>上のような回路図を読みたい場合、詳しく説明してくれるサイトもあるのでそちらを参照してください。&lt;/p>
&lt;h3 id="fritzing">回路図作成ソフト『Fritzing』&lt;/h3>
&lt;p>そこで今回は、『Fritzing』と呼ばれる回路図作成ソフトの回路図を見てみようと思います。&lt;/p>
&lt;p>このソフトで描かれた回路図の特徴は、&lt;strong>電子部品をイラストで表してくれるところ&lt;/strong> です。&lt;/p>
&lt;p>&lt;img src="https://dotstud.io/img/docs/circuit/illust.png" alt="">&lt;/p>
&lt;p>ボタンを押すとLEDが光る回路を組んでみました。実は、&lt;strong>上の回路図とこのイラストの回路図は同じことを表しています。&lt;/strong>&lt;/p>
&lt;p>多くの場合は前述のシンプルな回路図で表記されるため、読める方がよいとは思います。&lt;/p>
&lt;p>「この図形ってなんだっけ？」という時にはFritzingを使って検索してみるとよいでしょう。&lt;/p>
&lt;h2 id="heading-2">回路図でよくみる記号&lt;/h2>
&lt;h3 id="heading-3">電源&lt;/h3>
&lt;p>&lt;img src="https://dotstud.io/img/docs/circuit/battery.png" alt="">
電池やUSBなどから供給される電気の供給源です。プラスとマイナスがあり、横に２本線があるうち長い方がプラス、短い方がマイナスとなります。&lt;/p>
&lt;h3 id="heading-4">コンデンサ&lt;/h3>
&lt;p>&lt;img src="https://dotstud.io/img/docs/circuit/condenser.png" alt="">&lt;/p>
&lt;p>コンデンサは電気を蓄えたり放出したりする電子部品です。プラス・マイナスの極性が決まっているものもあるので注意が必要です。&lt;/p>
&lt;h3 id="heading-5">抵抗&lt;/h3>
&lt;p>&lt;img src="https://dotstud.io/img/docs/circuit/r.png" alt="">
抵抗は電流の流れを抑えることができます。LEDと一緒に使うことで、LEDが焼けることを保護することができます。&lt;/p>
&lt;h3 id="heading-6">スイッチ&lt;/h3>
&lt;p>&lt;img src="https://dotstud.io/img/docs/circuit/switch.png" alt="">
オン、オフを切り替えすることができるものです。スイッチにも種類があるので、どのようなことがしたいかでスイッチを変えるとよいでしょう。&lt;/p>
&lt;h3 id="led">LED&lt;/h3>
&lt;p>&lt;img src="https://dotstud.io/img/docs/circuit/led.png" alt="">
LEDは小さい電力で操作でき、強く光らせることができます。明るいものやマトリックス状になったものなどがあります。&lt;/p></description></item><item><title>消費電力</title><link>https://dotstud.io/docs/consumption/</link><pubDate>Sun, 19 Mar 2017 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/consumption/</guid><description>&lt;p>消費電力とは、「電気回路で消費される電力、つまり &lt;strong>電気回路を動かすために必要な電気の量&lt;/strong> を指します。&lt;/p>
&lt;h2 id="heading">消費電力の計算&lt;/h2>
&lt;p>消費される電気の量は、以下の式で表すことができます。&lt;/p>
&lt;pre>&lt;code>電圧[V:ボルト] × 電流[A] = 消費電力[W:ワット]
&lt;/code>&lt;/pre>&lt;p>電圧が「電気を発生させる力の大きさ」、電流が「流れる電気そのもの」です。&lt;/p>
&lt;p>詳しくは「&lt;a href="https://dotstud.io/docs/aandv/">電流と電圧&lt;/a>」の項目を参照してください。&lt;/p>
&lt;p>白熱電球を例に考えてみましょう。電球の表面に「100V 60W」という表記がある場合、この電球は &lt;strong>100[V]の電圧をかけたときに60[W]の電力を消費する&lt;/strong> ことを表します。&lt;/p>
&lt;h2 id="heading-1">消費電力量&lt;/h2>
&lt;p>単位時間あたりに消費される電気の量は「消費電力量」と呼ばれ、&lt;/p>
&lt;pre>&lt;code>電力[W] × 時間[h] = 消費電力量[Wh:ワットアワー]
&lt;/code>&lt;/pre>&lt;p>で表すことができます。&lt;/p>
&lt;p>先程の白熱電球を2時間点灯させた場合の消費電力量は、&lt;/p>
&lt;pre>&lt;code>60[W] × 2[h] = 120[Wh]
&lt;/code>&lt;/pre>&lt;p>となります。&lt;/p>
&lt;h2 id="heading-2">消費電力が大きい＝たくさん電気を使う&lt;/h2>
&lt;p>消費電力が大きいということは、それだけ多くの電気を使うということです。&lt;/p>
&lt;p>乾電池やモバイルバッテリーは持っている電気の量が少ないので、消費電力の大きい電子部品を動かす場合は &lt;strong>回路全体の稼働時間が短くなってしまう&lt;/strong> ことに注意してください。&lt;/p>
&lt;p>Arduino等のマイコンボードを省電力で使いたい場合、マイコンボードの &lt;strong>SLEEP機能&lt;/strong> が便利です。これはマイコンボードの電源は保ったまま必要な時だけ復帰する仕組みで、極力電力消費を抑えることができます。&lt;/p>
&lt;p>マイコンボードの形式や設定方法にもよりますが、乾電池1本で数ヶ月〜年単位で電力を供給することが可能になります。&lt;/p></description></item><item><title>デジタルとアナログ</title><link>https://dotstud.io/docs/digitalanalog/</link><pubDate>Fri, 10 Feb 2017 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/digitalanalog/</guid><description>&lt;p>デジタル、アナログと聞いて何が思い浮かぶでしょうか？&lt;/p>
&lt;p>テレビの種類にも使われますが、今回は電気的な違いについて説明していきます。&lt;/p>
&lt;h2 id="heading">デジタルとアナログの違いって？&lt;/h2>
&lt;p>一番の違いは、電圧の変化をグラフにしたときに分かります。&lt;/p>
&lt;p>もともと以下のようなアナログの信号があるとします。&lt;/p>
&lt;p>&lt;img src="https://dotstud.io/img/docs/digitalanalog/analog.png" alt="">&lt;/p>
&lt;p>アナログの信号をデジタルにするとこのようになります。&lt;/p>
&lt;p>&lt;img src="https://dotstud.io/img/docs/digitalanalog/digital.png" alt="">&lt;/p>
&lt;p>見比べると、デジタルはある（1）ない（0）のどちらかで表現されるため、シンプルなデータになっています。&lt;/p>
&lt;p>これによってあるかないかはハッキリと見て分かるのですが、 &lt;strong>もともとの値がどれくらい大きかったのか、小さかったのかは分からなくなってしまいました。&lt;/strong>&lt;/p>
&lt;p>逆に、アナログはどれだけ大きい・小さいかは分かるのですが、 &lt;strong>データは大きくなります。&lt;/strong>&lt;/p>
&lt;h2 id="heading-1">マイコンボードでみるデジタル、アナログ&lt;/h2>
&lt;p>どのような違いがあるか分かったところで、マイコンボードでその値を取得する方法を説明します。&lt;/p>
&lt;p>マイコンボードの種類により詳細な手順は変わるので注意してください。今回のプログラムについての説明は全て、Arduino Unoに基づいたものとします。&lt;/p>
&lt;p>デジタル、アナログの入出力については、指定されたピンでやりとりします。&lt;/p>
&lt;h2 id="heading-2">デジタルの入出力&lt;/h2>
&lt;h3 id="heading-3">入力&lt;/h3>
&lt;p>Arduino Unoでは、digitalRead関数を使ってある（HIGH）ない（LOW）を取得できます。&lt;/p>
&lt;p>このときに注意しなくてはいけないのが閾値の値です。&lt;/p>
&lt;p>Arduino Unoの場合は閾値は2.5vです。2.5vを超えるとHIGHになり、それ以下はLOWとなります。&lt;/p>
&lt;p>この閾値はマイコンボードにより異なるので注意が必要です。&lt;/p>
&lt;p>スイッチなどを付けて、押された・押されてないという状態を取得するときに、ノイズによって押していないのに押したと誤検知することがあります。&lt;/p>
&lt;p>その場合は、プルアップという方法を利用することで誤検知を減らすことができます。&lt;/p>
&lt;h3 id="heading-4">出力&lt;/h3>
&lt;p>Arduino Unoでは、digitalWrite関数を使ってある（HIGH）ない（LOW）を出力できます。&lt;/p>
&lt;p>HIGHのときに5vが出力され、LOWのとき0vが出力されます。&lt;/p>
&lt;p>こちらもマイコンボードによって異なるので注意してください。&lt;/p>
&lt;h2 id="heading-5">アナログの入出力&lt;/h2>
&lt;h3 id="heading-6">入力&lt;/h3>
&lt;p>Arduino Unoでは、analogRead関数により0（0v）-1023（5v）の1024段階で値を取得できます。&lt;/p>
&lt;p>入力する電圧が5vを超える場合、抵抗で分圧をすることで入力することができます。&lt;/p>
&lt;p>分圧については、計算してくれるサイトなどもあるので参考にしてください。&lt;/p>
&lt;h3 id="heading-7">出力&lt;/h3>
&lt;p>Arduino Unoではアナログ出力はできません。&lt;/p>
&lt;p>しかしPWMと呼ばれる方式により、擬似的にアナログ出力をすることができます。　&lt;/p>
&lt;p>PWMの出力は、analogWrite関数により可能となります。0（0v）-255（5v）の256段階で指定することが可能です。&lt;/p>
&lt;p>それによりLEDをふんわり点けることなどができるようになります。&lt;/p></description></item><item><title>直流と交流</title><link>https://dotstud.io/docs/dirandalt/</link><pubDate>Mon, 14 Nov 2016 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/dirandalt/</guid><description/></item><item><title>マイコンボード</title><link>https://dotstud.io/docs/microcon/</link><pubDate>Tue, 14 Feb 2017 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/microcon/</guid><description>&lt;p>マイコンボードとは、マイクロコンピュータ（マイコン）と入出力回路などの周辺回路を1枚の基板に乗せ、手軽にマイコンを利用するための回路です。&lt;/p>
&lt;p>一昔前は、主に小型・低価格のマイコンを積んだものを指していました。&lt;/p>
&lt;p>最近では広義な意味でのマイコンボードとして、ArduinoやRaspberry Piなど、スマートフォンと同様の高性能なCPUを積んでいるものを含みます。&lt;/p>
&lt;h2 id="heading">構成要素&lt;/h2>
&lt;p>ボードによって異なりますが、マイコンボードにはマイコンを動かすための最低限の機能が備わっています。&lt;/p>
&lt;h3 id="cpu">CPU&lt;/h3>
&lt;p>プログラムを動かす部分です。&lt;/p>
&lt;p>入出力PINやメモリなどを１個のICに集積したマイコンを使用している物が主でしたが、最近では高性能なCPUを使用しているボードも多くあります。&lt;/p>
&lt;h3 id="heading-1">メモリ&lt;/h3>
&lt;h4 id="romread-only-memory">ROM（Read Only Memory）&lt;/h4>
&lt;p>読み込み専用のメモリです。プログラムの格納や、プログラム内の定数を保存しておくのに利用され、 &lt;strong>電源が切れてもデータは残ります。&lt;/strong>&lt;/p>
&lt;h4 id="ramrandom-access-memory">RAM（Random Access Memory）&lt;/h4>
&lt;p>読み書きが可能なメモリです。プログラムの変数を格納するのに利用され、 &lt;strong>電源が切れるとデータは消えてしまいます。&lt;/strong>&lt;/p>
&lt;h3 id="heading-2">周辺回路&lt;/h3>
&lt;p>電源やクロック回路など、CPUと組み合わせて利用する回路のことです。&lt;/p>
&lt;p>アナログ-デジタル変換やデジタル-アナログ変換、クロック、UARTなどのよく利用する機能はCPUに内蔵されている事が多く、「内蔵ペリフェラル」と呼ばれます。&lt;/p>
&lt;h3 id="heading-3">ネットワークインターフェース&lt;/h3>
&lt;p>マイコンボードが、外部の回路や他の機器との通信を行うためのインターフェースです。&lt;/p>
&lt;p>仕組みや構造はそれぞれの章を参照してください。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dotstud.io/docs/serial/">シリアル通信&lt;/a>&lt;/li>
&lt;li>USBケーブル [WIP]&lt;/li>
&lt;li>イーサネット [WIP]&lt;/li>
&lt;/ul>
&lt;h3 id="gpio">GPIO&lt;/h3>
&lt;p>センサやLEDなどとCPU間の信号のやり取りを行うための、汎用的な入出力ピンのことです。&lt;/p>
&lt;p>マイコンボードによっては、１つのピンにGPIOと内蔵ペリフェラルの複数の機能を割り当てていることがあります。&lt;/p>
&lt;p>排他的な利用となりピン数がたりなくなることもあるため、 &lt;strong>実現したい機能に応じたマイコンボードを用意することが大切です。&lt;/strong>&lt;/p>
&lt;h2 id="heading-4">マイコンボードの分類&lt;/h2>
&lt;h3 id="os">安価でOSが乗らない単機能なマイコンボード&lt;/h3>
&lt;blockquote>
&lt;p>例：Arduino、mbed、ESPer、Nefry、WioNodeなど&lt;/p>
&lt;/blockquote>
&lt;p>安いCPU（マイコン）を搭載しており、OSは乗っておらず、独自言語でプログラミングをします。&lt;/p>
&lt;p>電源を入れるとマイコンに書き込まれているプログラムが自動的に起動します。&lt;/p>
&lt;p>シリアル通信は簡単ですが、TCP/IPやUDP/IPといったIP通信は難易度が上がります。&lt;/p>
&lt;p>しかし最近では、ESPerというWi-Fiモジュールが出て無線LANやBluetoothが容易に扱えるため、人気になっています。&lt;/p>
&lt;p>&lt;strong>電飾系やモータを回すといった単機能な用途&lt;/strong> に向いています。&lt;/p>
&lt;h3 id="os-1">比較的高価でOSが乗る多機能なマイコンボード&lt;/h3>
&lt;blockquote>
&lt;p>例：Raspberry Pi、DragonBoardなど&lt;/p>
&lt;/blockquote>
&lt;p>高機能なCPUを搭載しており、LinuxやWindows 10 IoT Coreなど様々なOSが動きます。&lt;/p>
&lt;p>「シングルボードコンピュータ」とも呼ばれることもあります。&lt;/p>
&lt;p>ディスプレイ出力、USBや無線LANといったリッチな外部通信I/Fを備えています。&lt;/p>
&lt;p>&lt;strong>複雑で多機能な用途&lt;/strong> に向いています。&lt;/p>
&lt;h2 id="heading-5">使い方&lt;/h2>
&lt;p>dotstudioで販売しているマイコンボードなどの使い方は、それぞれの章を参照してみてください。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dotstud.io/docs/nefry/">Nefry&lt;/a>&lt;/li>
&lt;li>WIO Node [WIP]&lt;/li>
&lt;li>Seeeduino v4.2 [WIP]&lt;/li>
&lt;/ul></description></item><item><title>抵抗</title><link>https://dotstud.io/docs/r/</link><pubDate>Fri, 05 May 2017 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/r/</guid><description>&lt;h2 id="heading">抵抗とは&lt;/h2>
&lt;p>電子回路における「抵抗」とは正しくを「電気抵抗」と言い、その名の通り 「&lt;strong>電流を阻害する要素全般&lt;/strong>」のことを指します。&lt;/p>
&lt;p>抵抗には2つの種類があります。1つ目は、電子回路の特定の区間において、&lt;strong>その瞬間の電圧値を実際に流れる電流量で割った「電気抵抗」&lt;/strong> であり、これはいかなる電気的な物質・回路においても発生する電流阻害要素のことです。&lt;/p>
&lt;p>2つ目は、時間的に変化する交流電流がもつ「リアクタンス」です。交流電流の場合、回路そのものの電流の流れにくさとは関係なく、電流を変化させることによって「電磁場」が発生します。この「電磁場」が、発生元である**交流電流自身に対して与える「時間的に変化する抵抗」**を「&lt;strong>リアクタンス&lt;/strong>」といいます。&lt;/p>
&lt;p>このドキュメントにおいては、大半の電子回路で扱う直流のみを対象とした「電気抵抗」のみについて説明し、これを以下においてはすべて「抵抗」と呼称します。&lt;/p>
&lt;h2 id="3">抵抗を決定づける3つの要素&lt;/h2>
&lt;p>「電流と電圧」の『「抵抗」は「交通渋滞」に似ている』において、&lt;strong>電流の流れ道は、幅が狭くて距離が長いほど電流が流れにくくなる&lt;/strong>ということを説明しました。&lt;/p>
&lt;p>この関係を、もう一度「交通」（道路）に例えてみましょう。電流の流れ道のことを、ここでは &lt;strong>導線&lt;/strong> と呼びます。導線の持つ各要素を道路の要素にあてはめて、それぞれ文字記号で表すと、次のようになります。&lt;/p>
&lt;ul>
&lt;li>L：導線の長さ = 道路の距離&lt;/li>
&lt;li>S：導線の太さ = 道路の車線幅・車線数&lt;/li>
&lt;li>ρ：導線の電気抵抗率 = 道路の路面状況・カーブの数など&lt;/li>
&lt;/ul>
&lt;p>これらの関係を式で表すと、次のようになります。&lt;/p>
&lt;pre>&lt;code>抵抗値R[Ω] = ρ × (L / S)
&lt;/code>&lt;/pre>&lt;p>この「抵抗値」を決定づける3つの要素をひとつずつそれぞれ読み解くと、次のことがわかります。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>抵抗値は導線の長さに比例する&lt;/strong>&lt;br>
= 車の運転のしやすさは距離の長さに比例する（短いほど楽）&lt;/li>
&lt;li>&lt;strong>抵抗値は太さ（断面積）に反比例する&lt;/strong>&lt;br>
= 車の運転のしやすさは車線幅・車線数に反比例する（太い・多いほど楽）&lt;/li>
&lt;li>&lt;strong>抵抗値は電気抵抗率に比例する&lt;/strong>&lt;br>
= 車の運転のしやすさは路面状況に比例する（綺麗な舗装の道路のほうが楽）&lt;/li>
&lt;/ul>
&lt;p>このように、&lt;strong>抵抗値を決定づける要素は「交通」の要素と非常に似ている&lt;/strong>ことがわかります。&lt;/p>
&lt;h2 id="heading-1">抵抗値の計算&lt;/h2>
&lt;p>抵抗値は、電圧と電流に対して次のような関係があります。&lt;/p>
&lt;pre>&lt;code>抵抗[Ω] = 電圧[V] ÷ 電流[A]
&lt;/code>&lt;/pre>&lt;p>この式を見ると、抵抗は &lt;strong>電圧と電流の比&lt;/strong>であるとも言えます。&lt;/p>
&lt;h2 id="heading-2">実際に使用される抵抗&lt;/h2>
&lt;p>電子回路で使用される抵抗は「&lt;strong>抵抗器&lt;/strong>」といい、電気抵抗を制御する目的で利用されます。「抵抗器」は上述の三つの要素のうちの「電気抵抗率」が異なる物質を様々に利用し、物質のサイズ（長さおよび断面積）を微調整することで多種多様な抵抗値を生み出します。&lt;/p>
&lt;p>実際に抵抗を用いる際は、&lt;strong>適切な抵抗値が設定されたもの&lt;/strong>を用いる必要があります。交流回路では、「コイル」や「コンデンサ」といった電子パーツを組み合わせ全体的な抵抗値を調整します。&lt;/p>
&lt;p>詳細は「抵抗器」の項目を参照してください。（近日公開予定です。）&lt;/p></description></item><item><title>抵抗器</title><link>https://dotstud.io/docs/resistance/</link><pubDate>Tue, 19 Jul 2016 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/resistance/</guid><description>&lt;p>抵抗器は任意の抵抗値をもった電子パーツのことで、 &lt;strong>数ある電子パーツのうちで最も重要&lt;/strong>と言っても過言ではありません。様々な種類があり、用途に応じて使い分けられます。&lt;/p>
&lt;p>抵抗の概要や計算については「&lt;a href="https://dotstud.io/docs/r">抵抗&lt;/a>」の項目を参照してください。&lt;/p>
&lt;h2 id="heading">抵抗器の種類&lt;/h2>
&lt;p>抵抗器は以下のような項目によって分けられます。&lt;/p>
&lt;ul>
&lt;li>抵抗値が可変であるか否か
&lt;ul>
&lt;li>固定の場合・・・抵抗値ごとに数十種類&lt;/li>
&lt;li>可変の場合・・・抵抗値の可変幅ごとに数十種類&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使われている素材&lt;/li>
&lt;li>許容電力容量&lt;/li>
&lt;li>形状&lt;/li>
&lt;li>サイズ&lt;/li>
&lt;/ul>
&lt;p>実際に抵抗を用いる際は、&lt;strong>適切な抵抗値が設定されたもの&lt;/strong>を用いる必要があります。&lt;/p>
&lt;h3 id="heading-1">固定抵抗器&lt;/h3>
&lt;p>抵抗値が最初から決まっていて変化させることができません。電子回路においては、必ずといっていいほどよく使われます。&lt;/p>
&lt;h4 id="heading-2">カーボン皮膜抵抗器&lt;/h4>
&lt;p>&lt;img src="https://dotstud.io/img/docs/resistance/carbon.png" alt="">
&lt;strong>個人向けの電子工作では、LEDに次いで使用頻度が非常に高いパーツ&lt;/strong>です。&lt;/p>
&lt;p>カーボン皮膜抵抗器は値段が非常に安く（1本1円以下）、とても扱いやすい電子パーツのひとつです。その名の通り、炭素素材が使われています。&lt;/p>
&lt;h5 id="heading-3">カラーコードの読み方&lt;/h5>
&lt;p>&lt;img src="https://dotstud.io/img/docs/resistance/color_code.png" alt="">&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h4 id="heading-4">チップ抵抗器&lt;/h4>
&lt;p>&lt;img src="https://dotstud.io/img/docs/resistance/tip.png" alt="">
電子回路の基板上に直接実装される抵抗器で、ゴマ粒ほどのサイズで四角い形をしています。&lt;/p>
&lt;p>機械で実装基板が作られるときに自動で取り付けられることがほとんどですが、手ではんだ付けをすることもできます。ただしその場合はある程度の経験と技量が必要です。&lt;/p>
&lt;h3 id="heading-5">可変抵抗器&lt;/h3>
&lt;p>&lt;img src="https://dotstud.io/img/docs/resistance/variable.png" alt="">
抵抗値が可変である抵抗器の総称で、ボリュームのようにつまみを操作することで抵抗体の長さが変わり、全体の抵抗値を変化させることができます。&lt;/p>
&lt;p>直線的な位置変化や回転量を抵抗値に変換できるため、その特徴から&lt;strong>センサの一種としても扱われる&lt;/strong>ことも多いです。&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h4 id="23">2端子型と3端子型&lt;/h4>
&lt;p>端子が2つしかないタイプは、両端のあいだの全体の抵抗値が可変となっています。&lt;/p>
&lt;p>端子が3つあるタイプは、真ん中の端子と両端のそれぞれの端子とのあいだで、抵抗値が異なります。両端の端子をAとC、真ん中の端子をBとした場合、つまみを動かすとA-B間の抵抗値とB-C間の抵抗値の合計値が常に等しくなるようにBの位置が変化します。&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h4 id="heading-6">抵抗値の変化特性&lt;/h4>
&lt;p>可変抵抗は、つまみの位置に比例して抵抗値が変わるものとそうでないものがあります。この特徴を&lt;strong>可変抵抗器のカーブ特性&lt;/strong>といいます。&lt;/p>
&lt;p>つまみの位置に比例して直線的に抵抗値が変化するカーブ特性をもった可変抵抗器は「Bカーブ特性の可変抵抗器」と呼ばれ、つまみの変化量に対して抵抗値の変化がゆるやかであるものがAカーブ、急であるものがCカーブとされています。&lt;/p>
&lt;p>これらの特性は可変抵抗器表面に表示されていて、例えば「B10K」と書かれていれば「Bカーブ特性で0〜10kΩまで変化する可変抵抗器」であることがわかります。&lt;/p>
&lt;h2 id="heading-7">温度特性と精度&lt;/h2>
&lt;h3 id="heading-8">抵抗器は、使用すると発熱する&lt;/h3>
&lt;p>抵抗器は、その名の通り電気に抗うパーツです。抵抗器に電圧をかけると、その作用により決まった電流しか流れません。
本来、抵抗器がなければ流れるはずだったぶんの電流は、すべて&lt;strong>熱に変換&lt;/strong>されています。&lt;/p>
&lt;p>電子工作で扱う電流はごく小さいものなので、抵抗器に触れてもあまり熱を感じませんが、&lt;strong>どんな小さな抵抗器であっても熱は発生しています&lt;/strong>。&lt;/p>
&lt;h3 id="heading-9">抵抗器は、温度によって抵抗値が変化する&lt;/h3>
&lt;p>抵抗器に使われる素材はその種類によって「電気抵抗率」がそれぞれ異なります。どんな素材であっても&lt;strong>温度が高くなればなるほどその電気抵抗率は高くなります&lt;/strong>。&lt;/p>
&lt;h3 id="heading-10">つまり、抵抗器を使用していると、抵抗値に誤差が発生する&lt;/h3>
&lt;p>抵抗器の種類により、もともと表示されている抵抗値と比べて実際の抵抗値が数%異なることがあり、これを抵抗器の「&lt;strong>精度&lt;/strong>」といいます。&lt;/p>
&lt;p>またこれとは別に、通電による発熱や外気温上昇などで抵抗値本体の温度が上がると抵抗値も同時に上昇します。これを抵抗器の「&lt;strong>温度特性&lt;/strong>」といいます。温度変化に対する抵抗値の変化が小さければ小さいほど、「温度特性が良い」といいます。&lt;/p>
&lt;p>ほとんどの個人レベルの電子工作では必要ありませんが、精密なオーディオ機器などを製作する際はこれら抵抗器の**「精度」と「温度特性」による誤差を考慮して回路を組む技術が必須**となります。&lt;/p>
&lt;h2 id="heading-11">定格電力（許容電力）&lt;/h2>
&lt;p>抵抗器は、その抵抗値や素材の種類によって&lt;strong>扱うことのできる最大の電力が決まっています&lt;/strong>。&lt;/p>
&lt;p>これを定格電力や許容電力といい、W（ワット）単位で表されます。電子工作で扱う抵抗器は、1/8W（=125mW）や1/4W（250mW）のものがほとんどです。&lt;/p>
&lt;p>定格電力と電圧の関係は次のようになっています。&lt;/p>
&lt;pre>&lt;code>定格電力(W) = 抵抗器にかかる電圧E^2 ÷ 抵抗値R
&lt;/code>&lt;/pre>&lt;p>例えば、抵抗値が10kΩで定格電力が1/4Wの抵抗器の場合、&lt;/p>
&lt;pre>&lt;code>0.25 = E^2 ÷ 10000
&lt;/code>&lt;/pre>&lt;p>これを解くと、定格電力を超えずに抵抗器にかけられる最大の電圧Eは50Vとなります。
実際にはこれよりもかなり低い電圧で使用することが望ましいです。&lt;/p>
&lt;p>定格電力は、先に説明した「抵抗は発熱する」特性を考慮して設定されています。そのため&lt;strong>定格電力を超えて使用すると抵抗器が溶ける・焦げる・発火する等の危険性がある&lt;/strong>ため、大きな電圧を使う回路では必ず抵抗値の定格電力も確認する必要があります。&lt;/p></description></item><item><title>センサー</title><link>https://dotstud.io/docs/sensor/</link><pubDate>Wed, 15 Feb 2017 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/sensor/</guid><description>&lt;p>センサーとは、人の目や耳などの代わりに、機械が周りの状況を取得するために使われる部品です。&lt;/p>
&lt;p>音量を取得するものや明るさを取得するものなどその種類は多種多様で、人が感じられるものはもちろん、 &lt;strong>人の感知することのできない微弱な信号も取得することができます。&lt;/strong>&lt;/p>
&lt;h2 id="heading">どんなセンサーがあるのか&lt;/h2>
&lt;p>先ほど例に挙げた音量や明るさを取得するものに加えて、手のジェスチャーを取得するものやモノの色を取得するものなど様々です。&lt;/p>
&lt;p>センサーによっては簡単に入手できないものもあるので、今回はネットや秋葉原で電子部品を販売している秋月電子通商さんで扱っているものを基準にリストにまとめてみました。&lt;/p>
&lt;ul>
&lt;li>距離センサ&lt;/li>
&lt;li>方位センサ&lt;/li>
&lt;li>アルコールセンサ&lt;/li>
&lt;li>角度センサ&lt;/li>
&lt;li>圧力センサ&lt;/li>
&lt;li>放射線センサ&lt;/li>
&lt;li>加速度センサ&lt;/li>
&lt;li>カラーセンサ&lt;/li>
&lt;li>明るさセンサ&lt;/li>
&lt;li>温度センサ&lt;/li>
&lt;li>湿度センサ&lt;/li>
&lt;li>ジェスチャセンサ&lt;/li>
&lt;/ul>
&lt;p>秋月電子通商さんで扱っているセンサーはまだまだありますが、目立ったセンサーだけでもこれだけあります。&lt;/p>
&lt;p>一般的には、これらのセンサーからの「入力」を使って他のモノを制御します。&lt;/p>
&lt;h2 id="heading-1">センサーの選び方&lt;/h2>
&lt;p>次にセンサーの選び方について簡単に説明します。&lt;/p>
&lt;p>まずは「どのようなことを取得したいか」をはっきりとさせ、目的の種類のセンサーを探します。&lt;/p>
&lt;h3 id="heading-2">目的を明確にする&lt;/h3>
&lt;p>例として、『大体100cm以内に人やモノが来たことを発見したい』というケースを想定して説明します。&lt;/p>
&lt;p>距離を測る目的のため、今回は距離センサのページを開きます。&lt;/p>
&lt;p>距離センサと一口に言っても、80cmまでしかはかれないものや、5.5mまではかれるものなど様々です。&lt;/p>
&lt;p>この中から今回の目的に向いたものを選んでみましょう。&lt;/p>
&lt;h3 id="heading-3">適切な性能のセンサーを見つける&lt;/h3>
&lt;p>ページを開いた時に見るのが「データシート」と呼ばれるセンサーの性能が記載されている書類です。&lt;/p>
&lt;p>データが詳細に書いてありこれを読むのが一番よいのですが、内容を理解するのはなかなか難しいです。&lt;/p>
&lt;p>データシートを読めるようになることは大切ですが、初心者の方は以下の方法を試してみてください。&lt;/p>
&lt;h4 id="heading-4">先例を見つける&lt;/h4>
&lt;p>まず秋月電子通商さんのセンサーごとのページに書かれている概要を読み、実現出来そうなセンサーにだいたいの目星を付け、「センサーの名前（例えばGP2Y0A02YK） ＋ 使いたいボード（例えばArduino）」で検索をかけてみてください。&lt;/p>
&lt;p>同様の実装をしたサンプルプログラムや回路図が記載されているブログなどのサイトが見つかると思うので、その内容を読み問題なく使えそうであればよいと思います。&lt;/p>
&lt;p>全く見つからない場合はプログラムを１から作らなくてはいけないので、扱えるようにするまでがなかなか大変ですので最初のうちはオススメできません。&lt;/p>
&lt;h4 id="heading-5">自力で実装する&lt;/h4>
&lt;p>どうしても実現したい場合は、先ほどのデータシートをよく読み、プログラムや回路を作成することで扱えるようになります。&lt;/p>
&lt;p>少し難易度は上がるので、興味があれば試してみるのも面白いと思います。&lt;/p>
&lt;h3 id="heading-6">要件やコストを確認する&lt;/h3>
&lt;p>上記の選び方で、秋月電子通商で扱っている距離センサーの中から、シャープ製の「GP2Y0A02YK」という型番のセンサをえらんでみました。&lt;/p>
&lt;p>距離も0.2mから1.5mまで読めますし、検索すると複数のサイトが見つかりますので問題なく作成出来るでしょう。&lt;/p>
&lt;p>他にも同様のセンサーはありますが、このセンサーは距離の精度やお値段も安いのでこれでいいでしょう。&lt;/p>
&lt;p>距離に精度が必要であれば別のセンサーを使うとよいと思います。&lt;/p>
&lt;h2 id="heading-7">センサーとマイコンボードのつなぎ方&lt;/h2>
&lt;p>センサーを選んだあとは、通常センサーとマイコンボード（センサーのデータを処理するところ）を繋げてプログラムを書き、他のモノと連携させていきます。&lt;/p>
&lt;p>どのように繋げることができるのか、簡単に紹介していきます。&lt;/p>
&lt;h3 id="heading-8">マイコンボードの役割&lt;/h3>
&lt;p>なぜマイコンボードが必要かと言うと、様々なセンサーで取得した値は電気信号のため、何らかの形で私たちが分かるようにしないと扱うことができません。&lt;/p>
&lt;p>オススメはArduinoとよばれるマイコンボードです。比較的単機能で扱いやすく、本やインターネット上の情報が多いので困ったときにも調べやすいです。&lt;/p>
&lt;p>センサーからは電気信号が出ているといいましたが、アナログの値で出力されているものや、ある規則に沿って通信するものもあるので、順に説明していきます。&lt;/p>
&lt;h3 id="heading-9">アナログ&lt;/h3>
&lt;p>シンプルな圧力センサや明るさセンサでよくみられるものです。&lt;/p>
&lt;p>電圧が徐々に変化するため、この情報を取得するためには指定されたアナログ入力ピンに接続することが前提になります。&lt;/p>
&lt;h3 id="heading-10">デジタル&lt;/h3>
&lt;p>HIGH or LOWの2つの状態を持つセンサです。&lt;/p>
&lt;p>スイッチや人感センサなどで見られます。この情報はデジタル入力ピンで取得することができます。&lt;/p>
&lt;h3 id="i2c-spi">I2C, SPIなど&lt;/h3>
&lt;p>特定の規格で通信できるセンサーで、規格によっては複数のセンサーを少ない制御線で制御出来たり、アナログのセンサーに比べて明確な数値で値を入力出来たりなどのメリットがあります。&lt;/p>
&lt;p>プログラムが少し複雑になるため、センサーごとにライブラリーが出回っていることが多いです。&lt;/p></description></item><item><title>シリアル通信</title><link>https://dotstud.io/docs/serial/</link><pubDate>Fri, 10 Feb 2017 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/serial/</guid><description>&lt;p>シリアル通信とは、一度に1ビットずつ逐次的にデータを送ることを指します。
シリアル（serial）は、 &lt;strong>「直列・連続した」&lt;/strong> という意味です。&lt;/p>
&lt;h2 id="heading">シリアル通信を用いたアーキテクチャ&lt;/h2>
&lt;p>一般的にも多く普及しているUSBをはじめ、有線LANの規格であるイーサネットや、電子楽器の制御に用いられるMIDI、センサー系の通信規格であるI2Cなど、多くの仕組みで採用されています。&lt;/p>
&lt;h2 id="heading-1">シリアル通信のメリット&lt;/h2>
&lt;p>バイト単位（=8ビット）を一度に送る「パラレル通信」に比べて電線が少なくて済むため、 &lt;strong>シンプルな仕組みで通信を行うことができます。&lt;/strong>&lt;/p>
&lt;p>特に、組み込み系のマイコンボードや小さいセンサーなど、省スペースな仕組みが求められる場合は、使用する端子の少ないシリアル通信の仕組みが適しています。&lt;/p>
&lt;h2 id="heading-2">シリアル通信の仕組み&lt;/h2>
&lt;p>アルファベットの「A」をシリアル通信でやり取りする場合を考えてみましょう。&lt;/p>
&lt;p>「A」はASCIIコードで「0x41」ですが、これをシリアル通信で送信する場合は、「0100 0001」という2進数の文字列になります。&lt;/p>
&lt;h3 id="01--">01.スタートビット / ストップビット&lt;/h3>
&lt;p>データの前と後にはそれぞれ &lt;strong>「スタートビット」&lt;/strong> &lt;strong>「ストップビット」&lt;/strong> と呼ばれる識別情報が付与されます。&lt;/p>
&lt;p>データを受信する側は、スタートビットを認識することでデータの始まりを認識し、ストップビットを認識することでデータの終わりを認識することができます。&lt;/p>
&lt;p>スタートビットは「0」で、ストップビットは「1」です。&lt;/p>
&lt;p>これらを「A」の2進数データ「0100 0001」に付与した場合、以下のような文字列になります。&lt;/p>
&lt;pre>&lt;code>（スタートビット→）0（データ→）0100 0001（ストップビット→）111...
&lt;/code>&lt;/pre>&lt;h3 id="02">02.パリティビット&lt;/h3>
&lt;p>データが正常に送られたかどうかを検査するために付与されるビットを &lt;strong>「パリティビット」&lt;/strong> と呼びます。&lt;/p>
&lt;p>パリティには、&lt;/p>
&lt;ul>
&lt;li>偶数パリティ&lt;/li>
&lt;li>奇数パリティ&lt;/li>
&lt;/ul>
&lt;p>の2つの方式があります。2進数のデータの「1」を偶数個にするのが偶数パリティ、奇数にするのが奇数パリティです。&lt;/p>
&lt;p>偶数パリティで先程のデータを送信する場合、以下のような文字列になります。&lt;/p>
&lt;pre>&lt;code>（スタートビット→）0（データ→）0100 0001 （偶数パリティビット→）0（ストップビット→）111...
&lt;/code>&lt;/pre>&lt;p>「0100 0001」に含まれる「1」の個数は2つなので、既に偶数です。そのため偶数パリティビットは「0」となります。&lt;/p>
&lt;h3 id="03">03.ボーレート&lt;/h3>
&lt;p>シリアル通信では、1秒あたり何ビットのデータを送るかという単位（bps: bit-per-second）で通信速度を表します。これを、 &lt;strong>「ボーレート」&lt;/strong> と呼びます。&lt;/p>
&lt;p>（厳密に、ボーレートとは「1秒間に変調・復調できる回数」を示しますが、ここでは便宜上「ボーレート=bps」という定義で記載します。）&lt;/p>
&lt;p>送信側と受信側でボーレートを合わせておくことで、適切に値を得ることができます。Arduino等のマイコンでシリアル通信を行う場合、「9600bps」を指定することが多いようです。&lt;/p></description></item><item><title>ブレッドボード</title><link>https://dotstud.io/docs/breadboard/</link><pubDate>Thu, 02 Mar 2017 03:02:41 +0900</pubDate><guid>https://dotstud.io/docs/breadboard/</guid><description>&lt;p>&lt;img src="https://dotstud.io/img/docs/breadboard/breadboard.png" alt="">
ブレッドボードとは、素子を差し込むだけで回路を組み立てられる部品です。ハンダなどを利用して基板と素子を溶接することなく回路を試すことができます。&lt;/p>
&lt;p>通常、ブレッドボード上で回路を組み立てて想定通りに動くことを確かめてから、ユニバーサル基板やプリント基板などを作成します。&lt;/p>
&lt;h2 id="heading">構造&lt;/h2>
&lt;p>&lt;img src="https://dotstud.io/img/docs/breadboard/standard.png" alt="">
たくさんの穴が空いており、中心に深い溝があります。また、製品によっては英字や数字が書かれていたり、横に赤と青のラインが書かれたものもあります。&lt;/p>
&lt;p>溝に対して垂直なライン方向（写真では縦方向）は内部で繋がっています。深い溝に対して平行に伸びるライン（写真では横方向）や、深い溝をまたいだ縦方向は繋がっていません。スイッチやICなど、両方の足が繋がってしまうと困る回路は中心の深い溝をまたぐように配置をします。
&lt;img src="https://dotstud.io/img/docs/breadboard/switch.png" alt="">&lt;/p>
&lt;p>ブレッドボードは構造上大電流を流すような回路には向いておらず、火事の原因になる場合があるためモータを回すような回路を作るのはやめておいた方が良いです。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item><item><title>グローブシステム</title><link>https://dotstud.io/docs/grove/</link><pubDate>Sun, 05 Feb 2017 02:02:41 +0900</pubDate><guid>https://dotstud.io/docs/grove/</guid><description>&lt;p>Groveとは、seeed studioが開発している &lt;strong>差すだけ&lt;/strong> で扱えるセンサーなどがあるモジュールのことです。&lt;/p>
&lt;p>どのモジュールも端子に凹凸があるため、初心者でも向きを間違えることなく扱えたり手軽に差し替えたりすることが出来るので、プロトタイピングをするときにピッタリのものとなっています。&lt;/p>
&lt;h2 id="heading">どんなものがあるの？&lt;/h2>
&lt;p>2017/2/1現在、周りの環境を取得するためのセンサ、サーボやファンなど &lt;strong>動きのあるアクチュエータなどが100個以上もあります。&lt;/strong>&lt;/p>
&lt;p>今回は、どのようなセンサやアクチュエータなどがあるのか、100個以上の中から選んだ10個を解説します。&lt;/p>
&lt;h3 id="heading-1">明るさセンサ&lt;/h3>
&lt;p>&lt;img src="https://images-na.ssl-images-amazon.com/images/I/41Q%2B5LzCjNL.jpg" alt="">&lt;/p>
&lt;p>このセンサーの特徴は、明るさを照度の単位であるlux(ルクス)で取得できることです。&lt;/p>
&lt;p>アナログのセンサーでも明るさを取得する事はできますが、このセンサは明確に数値として取得出来るので、机の上が適切な明るさかアドバイスすることができたり、植物にちゃんと光があたっているかを見たりすることができます。&lt;/p>
&lt;h3 id="heading-2">カラーセンサ&lt;/h3>
&lt;p>&lt;img src="http://ecx.images-amazon.com/images/I/41Hj3dWPstL.jpg" alt="">&lt;/p>
&lt;p>このセンサーの特徴は、色を取得することが出来ることです。&lt;/p>
&lt;p>色を識別して、果物を見分ける仕組みを作ったり、色によって処理を分けるものを作成したりする事ができます。&lt;/p>
&lt;h3 id="heading-3">三軸加速度センサ&lt;/h3>
&lt;p>&lt;img src="http://ecx.images-amazon.com/images/I/41G4wUde7wL.jpg" alt="">&lt;/p>
&lt;p>このセンサの特徴は、モノや人などの動きを取得できることです。&lt;/p>
&lt;p>x,y,zの三軸が取得できるため、ジャンプしたことや横に移動していること、モノが落下してることなどの動きを取得できます。&lt;/p>
&lt;h3 id="heading-4">水分センサ&lt;/h3>
&lt;p>&lt;img src="http://ecx.images-amazon.com/images/I/411uV91gbkL.jpg" alt="">&lt;/p>
&lt;p>このセンサの特徴は、土の中の水分量を取得出来ることです。&lt;/p>
&lt;p>このセンサを使うことで、植物が事前に枯れないような仕組みを作ることが出来ます。&lt;/p>
&lt;h3 id="pir">PIRモーションセンサ&lt;/h3>
&lt;p>&lt;img src="http://ecx.images-amazon.com/images/I/51oBw0EYBUL.jpg" alt="">&lt;/p>
&lt;p>このセンサの特徴は、動きのある人を取得できることです。&lt;/p>
&lt;p>このセンサを使うことで、自動ドアのように人が来たときに動作するものを作成する事ができます。&lt;/p>
&lt;h3 id="oled">OLEDディスプレイ&lt;/h3>
&lt;p>&lt;img src="http://ecx.images-amazon.com/images/I/41Y%2B%2B8gbXbL.jpg" alt="">&lt;/p>
&lt;p>これはOLEDと呼ばれる仕組みで作られたディスプレイです。&lt;/p>
&lt;p>明るく見やすいディスプレイになっていて、文字だけでなく図形などの表示も可能です。&lt;/p>
&lt;h3 id="heading-5">ジョイスティック&lt;/h3>
&lt;p>&lt;img src="http://ecx.images-amazon.com/images/I/41zI7ZmHrWL.jpg" alt="">&lt;/p>
&lt;p>これはゲームなどでよく見られるジョイスティック型のセンサです。&lt;/p>
&lt;p>前後・左右はもちろん、クリックにも対応しており、ゲームのコントローラーとしてや、ラジコンやロボットの制御の入力として扱うことができます。&lt;/p>
&lt;h3 id="heading-6">赤外線送受信&lt;/h3>
&lt;p>これは赤外線を制御できるものです。&lt;/p>
&lt;p>今使われているテレビやエアコンなどのリモコンは赤外線で操作するため、赤外線を制御できるこの通信器を使えば自分好みの学習リモコンを作成することができます。&lt;/p>
&lt;h4 id="heading-7">受信&lt;/h4>
&lt;p>&lt;img src="http://ecx.images-amazon.com/images/I/41ZMlWx-c6L.jpg" alt="">&lt;/p>
&lt;p>こちらで赤外線の信号を受けることができます。&lt;/p>
&lt;h4 id="heading-8">送信&lt;/h4>
&lt;p>&lt;img src="http://ecx.images-amazon.com/images/I/41u64mLAz2L.jpg" alt="">&lt;/p>
&lt;p>こちらで赤外線の信号を送信することができます。&lt;/p>
&lt;h3 id="mp3">MP3&lt;/h3>
&lt;p>&lt;img src="http://akizukidenshi.com/img/goods/C/M-10450.jpg" alt="">&lt;/p>
&lt;p>これは、mp3の音楽を再生できるものです。&lt;/p>
&lt;p>電子工作で音楽を流すのはひと手間かかるのですが、これは手軽に音楽を流せるため、普通の音楽はもちろん、警告音や説明音声を流すことができます。&lt;/p>
&lt;h2 id="heading-9">なにと繋げられるの？&lt;/h2>
&lt;p>seeed studioから様々な変換基板が販売されており、変換基板を介して接続する時ことができます。&lt;/p>
&lt;p>接続できるモノの一例です。&lt;/p>
&lt;ul>
&lt;li>Arduino&lt;/li>
&lt;li>Raspberry pi&lt;/li>
&lt;li>mbed&lt;/li>
&lt;li>Nefry&lt;/li>
&lt;li>wio node&lt;/li>
&lt;li>konashi&lt;/li>
&lt;/ul>
&lt;p>多くの基板が変換基板を介してではあるものの、たくさんのGROVEモジュールに接続することができます。&lt;/p></description></item><item><title>ジャンパワイヤ</title><link>https://dotstud.io/docs/jumperwire/</link><pubDate>Sun, 26 Mar 2017 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/jumperwire/</guid><description>&lt;p>&lt;img src="https://dotstud.io/img/docs/jumperwire/jumperwire.png" alt="">
ジャンパワイヤとは、その名の通り回路上にジャンプ（電路のショートカット）を作り、繋ぐことからこの名前がついています。
「ジャンプワイヤー」「ジャンパー線」なども同じものを指します。&lt;/p>
&lt;p>主に基板上の回路を繋ぐために使われ、電子工作では欠かせないものの一つです。&lt;/p>
&lt;h2 id="heading">種類&lt;/h2>
&lt;p>ジャンパワイヤは、主に両端の形状と硬さ・長さで分けることができます。&lt;/p>
&lt;h3 id="heading-1">形状&lt;/h3>
&lt;h4 id="heading-2">オス&lt;/h4>
&lt;p>&lt;img src="https://dotstud.io/img/docs/jumperwire/male.png" alt="">
ピンソケットやブレッドボードに差し込みやすい形状で、隣り合ったソケットに差し込んでも互いに干渉しないようになっています。&lt;/p>
&lt;p>Arduino Unoのようにピンソケットがメス（凹型）になっているボードは、オス型のジャンパワイヤを使って接続します。&lt;/p>
&lt;h4 id="heading-3">メス&lt;/h4>
&lt;p>&lt;img src="https://dotstud.io/img/docs/jumperwire/female.png" alt="">
凹型の形状で、オス型のジャンパワイヤやピンヘッダを差し込めるようになっています。&lt;/p>
&lt;p>RaspberryPiシリーズのボードの多くは端子がピンヘッダになっているため、メス型のジャンパワイヤを使って接続します。&lt;/p>
&lt;h4 id="heading-4">ミノムシクリップ（ワニ口）&lt;/h4>
&lt;p>&lt;img src="https://dotstud.io/img/docs/jumperwire/crocodile_clip.png" alt="">&lt;/p>
&lt;p>クリップの形状で挟んで接続することができ、ミノムシのようなカバーで覆われています。&lt;/p>
&lt;p>通常のサイズよりも太い・細いなどで上手く繋ぐことができないジャンパワイヤの線を繋げることができます。&lt;/p>
&lt;h3 id="heading-5">硬さ・長さ&lt;/h3>
&lt;p>硬めのジャンパワイヤは、自立するためブレッドボード上などで扱いやすくなっています。ただし、回路によっては通常の方が扱いやすい場合もあります。&lt;/p>
&lt;p>長さは150mmのものが主ですが、短め・長めのものもあります。足りない場合はメスタイプのジャンパワイヤを使って延長します。&lt;/p>
&lt;p>回路によって向き不向きはありますが、最初は &lt;strong>オス〜オス（両側がオスタイプ）の150mmのもの&lt;/strong> があればだいたいの用途に使用することができます。&lt;/p>
&lt;h2 id="heading-6">使い方&lt;/h2>
&lt;p>&lt;img src="https://dotstud.io/img/docs/jumperwire/usage.png" alt="">
マイコンボードからブレッドボード、ブレッドボードからセンサーなど、あらゆる電路の接続に利用します。電子工作の必須道具の一つです。&lt;/p>
&lt;p>10本セットでも200円〜程度で購入できるので、入手しておきましょう。&lt;/p></description></item><item><title>LED</title><link>https://dotstud.io/docs/led/</link><pubDate>Tue, 14 Feb 2017 01:02:41 +0900</pubDate><guid>https://dotstud.io/docs/led/</guid><description>&lt;p>英語でLight Emitting Diode、略してLED。&lt;/p>
&lt;p>日本語では発光ダイオードと呼ばれ、その名のとおり電気を流すと光を発します。&lt;/p>
&lt;p>ダイオードと同じく &lt;strong>電流が流れる方向が決まっている&lt;/strong>（「極性がある」とも言います）ので、接続に注意が必要です。&lt;/p>
&lt;h2 id="heading">形状&lt;/h2>
&lt;p>LEDには、砲弾型の2本足のものや、砲弾型で複数の足があるもの、表面実装用のものなど様々な形があります。&lt;/p>
&lt;p>砲弾型では5mmや3mmのものが多く売られています。電子工作で使われているのは主に5mmのものです。&lt;/p>
&lt;h2 id="heading-1">構造&lt;/h2>
&lt;p>LEDには、「アノード」「カソード」の２極があります。アノードからカソードへ電流を流しますが、反対のカソードからアノードへはほとんど電流を流しません。&lt;/p>
&lt;p>アノードからカソードへ電流を流す際に、&lt;strong>エネルギーを光に変換して発光&lt;/strong> します。&lt;/p>
&lt;p>複数の足があるLEDや７セグ、LEDマトリックスは、構造によって「アノードコモン」「カソードコモン」に区別されます。&lt;/p>
&lt;p>コモンは「共通の」という意味で、内部の端子が一箇所にまとめられて「コモン(共通)」端子になっていることを示します。&lt;/p>
&lt;p>例えば「カソードコモン」の場合、共通のカソード（-側）をグランドに接続し、アノード側を抵抗を経由して個々のマイコンの端子に接続すると、マイコン端子の出力に応じてLEDの表示を変えることができるようになります。&lt;/p>
&lt;h2 id="heading-2">使い方&lt;/h2>
&lt;h3 id="led">基本的なLED&lt;/h3>
&lt;p>アノード側を＋、カソード側を-に接続することで電流が流れ発光します。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h3 id="led-1">複数の端子があるLED&lt;/h3>
&lt;p>フルカラーLEDなどは複数の端子をもっています。それぞれの端子に加える電圧によって色が変化します。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h3 id="7-led">7セグ LED&lt;/h3>
&lt;p>７セグの例を見てみましょう。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>また、コモン側の端子をマイコンで制御することで複数の桁数の７セグLEDを表示することも可能になります。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>参考: &lt;a href="http://jsdiy.web.fc2.com/avr_7seg8test/">http://jsdiy.web.fc2.com/avr_7seg8test/&lt;/a>&lt;/p></description></item></channel></rss>