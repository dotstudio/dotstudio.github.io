<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Smartspeaker on dotstudio（ドットスタジオ）</title>
    <link>https://dotstud.io/series/smartspeaker/</link>
    <description>Recent content in Smartspeaker on dotstudio（ドットスタジオ）</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2018 dotstudio inc.</copyright>
    <lastBuildDate>Mon, 30 Apr 2018 16:50:26 +0900</lastBuildDate>
    <atom:link href="/series/smartspeaker/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>AlexaスキルでMP3ファイルを流そう！効果音を入れてワンランクアップのスキル開発</title>
      <link>https://dotstud.io/blog/nodejs-alexa-skill-mp3/</link>
      <pubDate>Mon, 30 Apr 2018 16:50:26 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/nodejs-alexa-skill-mp3/</guid>
      
      <description>

&lt;p&gt;こんにちは、ちゃんとくです。&lt;/p&gt;

&lt;p&gt;実はAlexaスキルでは、&lt;strong&gt;MP3ファイルを簡単に流すことができる&lt;/strong&gt;のを知っていますか？さらになんと、&lt;strong&gt;「Alexa Skills Kit Sound Library」というすぐに組み込める音源があらかじめ用意&lt;/strong&gt;されています。&lt;/p&gt;

&lt;p&gt;今回は、&lt;u&gt;AlexaスキルでMP3形式の音源を流す方法を紹介&lt;/u&gt;します。効果音を入れたり、録音したセリフを流したり、可能性は無限大……！&lt;/p&gt;

&lt;p&gt;「Alexaスキルを作るの初めて！」という方は、こちらの記事も併せて読んでみてください。&lt;/p&gt;



&lt;section class=&#34;link&#34; id=&#34;144&#34;&gt;
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
          &lt;div class=&#34;link_content&#34;&gt;
          &lt;a href=&#34;https://dotstud.io/blog/nodejs-amazon-alexa-skill/&#34;&gt;&lt;/a&gt;
          &lt;img src=&#34;https://dotstud.io/img/blog/144/00_thumbnail.png&#34; alt=&#34;サムネイル&#34;&gt;
          &lt;/div&gt;
          &lt;div class=&#34;link_content&#34;&gt;
            &lt;div class=&#34;link_detail&#34;&gt;
              &lt;div class=&#34;link_title&#34;&gt;
                Amazon Echoを使いこなそう！Node.jsでAlexaスキル開発 - スマートスピーカーの基本とスキル開発入門
              &lt;/div&gt;
              &lt;div class=&#34;link_date&#34;&gt;
                
                2018-03-06
              &lt;/div&gt;
              &lt;div class=&#34;link_desc&#34;&gt;
                Amazon Echoで動くAlexaのスキル開発をNode.jsでやってみましょう！
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/section&gt;
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
&lt;/section&gt;


&lt;h2 id=&#34;基本の実装方法-ssml&#34;&gt;基本の実装方法（SSML）&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/ssml.png&#34; alt=&#34;&#34; /&gt;
Alexaスキルの開発には、「&lt;a href=&#34;https://developer.amazon.com/ja/docs/custom-skills/speech-synthesis-markup-language-ssml-reference.html&#34;&gt;&lt;strong&gt;SSML&lt;/strong&gt;&lt;/a&gt;」という音声合成マークアップ言語が用意されています。HTMLのような「タグ」を使って実装していきます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/sample.png&#34; alt=&#34;&#34; /&gt;
一見難しそうですが、基本的にはサンプルコードのように&lt;strong&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;というタグを発話内に埋め込むだけでOK&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;&lt;font size=&#34;2&#34;&gt;
※SSMLには音声合成に関する様々な実装機能があるのですが、今回は&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;タグの使い方のみ紹介します！
&lt;/font&gt;&lt;/p&gt;

&lt;h2 id=&#34;alexa-skills-kit-sound-libraryを使う場合&#34;&gt;Alexa Skills Kit Sound Libraryを使う場合&lt;/h2&gt;

&lt;p&gt;Alexa Skills Kitでは、Alexaスキル開発向けに「&lt;strong&gt;Sound Library&lt;/strong&gt;」という効果音のライブラリが用意されています（自分で用意した音源を流したい方は「&lt;a href=&#34;#%E8%87%AA%E5%88%86%E3%81%A7%E7%94%A8%E6%84%8F%E3%81%97%E3%81%9Fmp3%E9%9F%B3%E6%BA%90%E3%82%92%E4%BD%BF%E3%81%86%E5%A0%B4%E5%90%88&#34;&gt;&lt;strong&gt;自分で用意したMP3音源を使う場合&lt;/strong&gt;&lt;/a&gt;」へ進んでください）。
&lt;a href=&#34;https://developer.amazon.com/ja/docs/custom-skills/ask-soundlibrary.html&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/sound_library.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
このライブラリの音源はAlexaスキル用に最適化されているので、音源のURLを指定すればすぐに使うことができます。&lt;/p&gt;

&lt;p&gt;まだドキュメントは英語ページのみですが、サンプルコードたっぷりなので割と読みやすいかと思います！&lt;/p&gt;

&lt;p&gt;&lt;font size=&#34;2&#34;&gt;
※「&lt;strong&gt;important&lt;/strong&gt;」という注意書きにあるように、この音源はAlexaスキルでの利用向けに用意されているものです。DLして使ったり、ブラウザから直接アクセスしたりしてはいけません。
&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/categories.png&#34; alt=&#34;&#34; /&gt;
スクロールしていくと、「&lt;strong&gt;The sounds are organized into the following categories:&lt;/strong&gt;」という部分から、用意されている音源のカテゴリー一覧を見ることができます。&lt;/p&gt;

&lt;p&gt;Ambience Sounds（環境音）、Animal Sounds（動物の音）、Battle Sounds……とたくさん用意されているのがわかりますね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/select_category.png&#34; alt=&#34;&#34; /&gt;
例えば「&lt;strong&gt;Office Sounds&lt;/strong&gt;」を選んでみると、コピーマシーンの音、エレベータのベルの音など、実際の音を確かめながら選ぶことができます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/copy_url.png&#34; alt=&#34;&#34; /&gt;
使いたい音が見つかったら、SSMLのコードをコピーしておきます。&lt;/p&gt;

&lt;h2 id=&#34;自分で用意したmp3音源を使う場合&#34;&gt;自分で用意したMP3音源を使う場合&lt;/h2&gt;

&lt;p&gt;自分でMP3形式の音源を用意して流す場合、&lt;strong&gt;いくつかの条件に沿ってフォーマットする必要&lt;/strong&gt;があります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/caution.png&#34; alt=&#34;&#34; /&gt;
SSMLのリファレンスの「&lt;a href=&#34;https://developer.amazon.com/ja/docs/custom-skills/speech-synthesis-markup-language-ssml-reference.html#audio&#34;&gt;&lt;strong&gt;Audio&lt;/strong&gt;&lt;/a&gt;」の項目を見ると、詳細な条件を確認できます。&lt;/p&gt;

&lt;p&gt;主な注意点は下記です。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HTTPSエンドポイントにホストされている&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;90秒以内である&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特定のビットレート・周波数にフォーマットされている&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;個人情報や機密情報を含まない&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;また&lt;u&gt;著作権にはよく注意し、自分で録音した音源やフリー素材を利用するようにしましょう&lt;/u&gt;。&lt;/p&gt;

&lt;p&gt;ちゃんとくは「&lt;a href=&#34;http://musicisvfr.com/free/index.html&#34;&gt;&lt;strong&gt;Music is VFR&lt;/strong&gt;&lt;/a&gt;」というフリー素材サイトから音源をお借りしました（こちらのサイトはクレジットを明記すると利用可能です）。ありがとうございます！&lt;/p&gt;

&lt;h3 id=&#34;ffmpegを使ってフォーマット&#34;&gt;ffmpegを使ってフォーマット&lt;/h3&gt;

&lt;p&gt;音源のフォーマットには、「&lt;strong&gt;FFmpeg&lt;/strong&gt;」という無料ソフトウェアを使います。FFmpegは、動画・音声の記録・変換・再生ができる有名なツールです。&lt;/p&gt;

&lt;p&gt;インストールしていない方は、&lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;公式ページ&lt;/a&gt;からインストールしましょう。Macの方は下記コマンドでインストールできます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install ffmpeg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールできたら、コマンドが使えることを確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ffmpeg -version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;「command not found」などと出なければインストール完了です。&lt;/p&gt;

&lt;p&gt;ffmpegが用意できたら、MP3ファイルをフォーマットします。ビットレート、周波数は細かく指定されているのでそれに沿って下記のように実行します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ffmpeg -y -i before.mp3 -ar 16000 -ab 48k -codec:a libmp3lame -ac 1 after.mp3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;before.mp3&lt;/strong&gt;の部分には用意したMP3ファイルのPATH、&lt;strong&gt;after.mp3&lt;/strong&gt; の部分には保存するPATHを記述してください。&lt;/p&gt;

&lt;h3 id=&#34;s3に音源をアップロード&#34;&gt;S3に音源をアップロード&lt;/h3&gt;

&lt;p&gt;上記でフォーマットしたMP3ファイルを、HTTPSでアクセス可能なようにホスティングします。&lt;/p&gt;

&lt;p&gt;今回はAWSの&lt;a href=&#34;https://aws.amazon.com/jp/s3/&#34;&gt;&lt;strong&gt;S3&lt;/strong&gt;&lt;/a&gt;というクラウドストレージにホストしてみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/create_bucket.png&#34; alt=&#34;&#34; /&gt;
AWSアカウントでS3にアクセスしたら、まずは「&lt;strong&gt;バケット&lt;/strong&gt;」を作成します（フォルダのようなもの）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/create_bucket2.png&#34; alt=&#34;&#34; /&gt;
バケット名とリージョンを選択したら、あとはデフォルト値のまま「&lt;strong&gt;作成&lt;/strong&gt;」を選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/upload.png&#34; alt=&#34;&#34; /&gt;
作成したバケットを選択し、「&lt;strong&gt;アップロード&lt;/strong&gt;」を選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/upload2.png&#34; alt=&#34;&#34; /&gt;
先ほどフォーマットした音源をドラッグ＆ドロップし、「&lt;strong&gt;アップロード&lt;/strong&gt;」を選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/change_auth.png&#34; alt=&#34;&#34; /&gt;
アップロードできたら、アクセスできるように「&lt;strong&gt;公開する&lt;/strong&gt;」を選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/change_auth2.png&#34; alt=&#34;&#34; /&gt;
これでアクセス可能なHTTPSのエンドポイントが用意できました！「&lt;strong&gt;リンク&lt;/strong&gt;」をコピーしておきます。&lt;/p&gt;

&lt;p&gt;&lt;font size=&#34;2&#34;&gt;
※不用意にアクセスされないよう、URLの扱いには気をつけましょう。
&lt;/font&gt;&lt;/p&gt;

&lt;h2 id=&#34;lambda関数でプログラム&#34;&gt;Lambda関数でプログラム&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/welcome.html&#34;&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt;&lt;/a&gt;にスキル用の関数を作成していきます。今回はコードのみ紹介するので、詳しい手順を知りたい方は前回の記事を参照してください！&lt;/p&gt;

&lt;p&gt;

&lt;section class=&#34;link&#34; id=&#34;144&#34;&gt;
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
          &lt;div class=&#34;link_content&#34;&gt;
          &lt;a href=&#34;https://dotstud.io/blog/nodejs-amazon-alexa-skill/&#34;&gt;&lt;/a&gt;
          &lt;img src=&#34;https://dotstud.io/img/blog/144/00_thumbnail.png&#34; alt=&#34;サムネイル&#34;&gt;
          &lt;/div&gt;
          &lt;div class=&#34;link_content&#34;&gt;
            &lt;div class=&#34;link_detail&#34;&gt;
              &lt;div class=&#34;link_title&#34;&gt;
                Amazon Echoを使いこなそう！Node.jsでAlexaスキル開発 - スマートスピーカーの基本とスキル開発入門
              &lt;/div&gt;
              &lt;div class=&#34;link_date&#34;&gt;
                
                2018-03-06
              &lt;/div&gt;
              &lt;div class=&#34;link_desc&#34;&gt;
                Amazon Echoで動くAlexaのスキル開発をNode.jsでやってみましょう！
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/section&gt;
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
&lt;/section&gt;
&lt;/p&gt;

&lt;p&gt;前回記事の手順に沿って、Lambda上でAlexaスキル用の関数を作成し、トリガーの設定などを済ませます。
&lt;img src=&#34;https://dotstud.io/img/blog/163/coding.png&#34; alt=&#34;&#34; /&gt;
コードの編集画面が開いたら、いよいよMP3ファイルを再生するSSMLタグを実装しましょう！&lt;/p&gt;

&lt;h3 id=&#34;基本の実装方法&#34;&gt;基本の実装方法&lt;/h3&gt;

&lt;p&gt;MP3ファイルの再生は、基本的に以下のタグのみで実装できます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;audio src=&#39;https://path/xxx.mp3&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通常Alexaで発話させるように、下記のように発言の中にAudioタグを組み込みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// mp3を再生するサンプル
&#39;SampleIntent&#39;: function () {
    const intent = this.event.request.intent;
    let speechOut = &amp;quot;&amp;lt;audio src=&#39;https://path/xxx.mp3&#39; /&amp;gt;&amp;quot;;
    speechOut += &amp;quot;おはようございます！&amp;quot;;
    this.emit(&#39;:tell&#39;, speechOut);
},
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;+=&lt;/code&gt;という演算子では、下記のように変数内の文字列に文字列を連結しています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let sample = &#39;A&#39;;
sample += &#39;B&#39;;
console.log(sample); // AB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;全て同じ&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;内で繋げて書いても良いのですが、区切ることで可読性（読みやすさ）を高めています。&lt;/p&gt;

&lt;p&gt;今回は、Alexa Skills Kit Sounds Libraryの「&lt;a href=&#34;https://developer.amazon.com/ja/docs/custom-skills/office-sounds.html&#34;&gt;&lt;strong&gt;typing medium（1）&lt;/strong&gt;&lt;/a&gt;」を流すサンプルコードを用意してみました！とりあえず試したいという方は下記をコピペして利用してください。&lt;/p&gt;

&lt;p&gt;またAmazon Developerコンソール側では、同名の「OfficeIntent」を作成し、「音を流して」で応答するように設定してください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;use strict&#39;;

const Alexa = require(&#39;alexa-sdk&#39;);

const handlers = {
    &#39;LaunchRequest&#39;: function () {
        const speechOutput = &#39;こんにちは。音を流してと言ってみてください。&#39;
        const reprompt = &#39;音を流します。&#39;
        this.emit(&#39;:ask&#39;, speechOutput, reprompt);
    },
    &#39;OfficeIntent&#39;: function () {
        let speechOut = &amp;quot;&amp;lt;audio src=&#39;https://s3.amazonaws.com/ask-soundlibrary/office/amzn_sfx_typing_medium_01.mp3&#39;/&amp;gt;&amp;quot;;
        speechOut += &amp;quot;&amp;lt;break time =&#39;1s&#39; /&amp;gt;&amp;quot;;
 		speechOut += &amp;quot;今日も頑張っていますね！&amp;quot;;
		this.emit(&#39;:tell&#39;, speechOut)
    },
    &#39;AMAZON.HelpIntent&#39;: function () {
        this.emit(&#39;:tell&#39;, this.t(&#39;&#39;));
    },
    &#39;AMAZON.CancelIntent&#39;: function () {
        this.emit(&#39;:tell&#39;, this.t(&#39;&#39;));
    },
    &#39;AMAZON.StopIntent&#39;: function () {
        this.emit(&#39;:tell&#39;, this.t(&#39;&#39;));
    },
};

exports.handler = function(event, context, callback) {
    const alexa = Alexa.handler(event, context, callback);
    alexa.registerHandlers(handlers);
    alexa.execute();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;試してみる&#34;&gt;試してみる&lt;/h2&gt;

&lt;p&gt;MP3を再生する関数が作成できたら、さっそくスキル上で試してみましょう！（再三ですが、スキルの作成方法や連携方法は前回の記事を参照してください！）&lt;/p&gt;



&lt;section class=&#34;link&#34; id=&#34;144&#34;&gt;
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
          &lt;div class=&#34;link_content&#34;&gt;
          &lt;a href=&#34;https://dotstud.io/blog/nodejs-amazon-alexa-skill/&#34;&gt;&lt;/a&gt;
          &lt;img src=&#34;https://dotstud.io/img/blog/144/00_thumbnail.png&#34; alt=&#34;サムネイル&#34;&gt;
          &lt;/div&gt;
          &lt;div class=&#34;link_content&#34;&gt;
            &lt;div class=&#34;link_detail&#34;&gt;
              &lt;div class=&#34;link_title&#34;&gt;
                Amazon Echoを使いこなそう！Node.jsでAlexaスキル開発 - スマートスピーカーの基本とスキル開発入門
              &lt;/div&gt;
              &lt;div class=&#34;link_date&#34;&gt;
                
                2018-03-06
              &lt;/div&gt;
              &lt;div class=&#34;link_desc&#34;&gt;
                Amazon Echoで動くAlexaのスキル開発をNode.jsでやってみましょう！
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/section&gt;
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
      
      
  
&lt;/section&gt;


&lt;p&gt;実機検証もよいですが、今回はシミュレータで試してみます。
&lt;img src=&#34;https://dotstud.io/img/blog/163/simulator.png&#34; alt=&#34;&#34; /&gt;
Amazon Developerコンソール上のAlexaスキルで「テスト」のタブを選択すると開きます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/163/simulator2.png&#34; alt=&#34;&#34; /&gt;
設定した呼び出し名でスキルを開きます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gyazo.com/4553a3341ae9fd585837834e416b793f&#34;&gt;&lt;img src=&#34;https://i.gyazo.com/4553a3341ae9fd585837834e416b793f.gif&#34; alt=&#34;https://gyazo.com/4553a3341ae9fd585837834e416b793f&#34; /&gt;&lt;/a&gt;
設定したインテントで呼びかけると、無事にMP3の音源を再生することができました！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;外部ファイルを扱うのは一見難しそうに見えますが、かなりサクッと実装することができました。&lt;u&gt;フォーマットの方法、音源の長さなどに注意&lt;/u&gt;すれば簡単にスキルに音源を組み込んでいけますね！&lt;/p&gt;

&lt;p&gt;Sounds Libraryには「&lt;strong&gt;これいつ使うの！？&lt;/strong&gt;」という不思議な効果音もありますので、ぜひ試してみてください！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Amazon Echoを使いこなそう！Node.jsでAlexaスキル開発 - スマートスピーカーの基本とスキル開発入門</title>
      <link>https://dotstud.io/blog/nodejs-amazon-alexa-skill/</link>
      <pubDate>Tue, 06 Mar 2018 01:00:43 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/nodejs-amazon-alexa-skill/</guid>
      
      <description>

&lt;p&gt;こんにちは、ちゃんとくです。突然ですが、「&lt;strong&gt;スマートスピーカー&lt;/strong&gt;」流行っていますね！&lt;/p&gt;

&lt;p&gt;dotstudioでも「LINE Wave」「Google Home mini」「Amazon Echo Dot」と取り揃えております。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;が。&lt;strong&gt;ぶっちゃけ「音楽かけて」しか活用できてない……。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ということで、スマートスピーカーのスキルを開発し、&lt;u&gt;活用できるよう自分向けにカスタマイズ&lt;/u&gt;してみましょう！今回は&lt;strong&gt;Amazon EchoのAlexaスキルをNode.jsで開発&lt;/strong&gt;してみます！&lt;/p&gt;

&lt;p&gt;※記事は長いですが、開発は簡単なのでぜひチャレンジしてみてください！&lt;/p&gt;

&lt;h2 id=&#34;開発を始める前に&#34;&gt;開発を始める前に&lt;/h2&gt;

&lt;h3 id=&#34;alexaって何-amazon-echoじゃないの&#34;&gt;Alexaって何？Amazon Echoじゃないの？&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/device.png&#34; alt=&#34;&#34; /&gt;
Amazonのスマートスピーカーは「Echo」という&lt;strong&gt;スピーカーのシリーズ&lt;/strong&gt;に、「Alexa」という&lt;strong&gt;音声AI&lt;/strong&gt;が搭載されたものです。Alexaは音声AIの名前なので、Alexa搭載のPCやクルマもありますよね。&lt;/p&gt;

&lt;p&gt;各スピーカの違いは音質だったり、スマートホームハブ内臓だったりと色々あるので、調べてみてください。&lt;/p&gt;

&lt;p&gt;⇒ 参考: &lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1711/08/news107.html&#34;&gt;日本上陸「Amazon Echo」3機種の違いは？　他社とどう差別化する？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ちなみに「LINE WAVE」の音声AIは「Clova」、「Google Home」の音声AIは「Googleアシスタント」と言います。&lt;/p&gt;

&lt;h3 id=&#34;alexaのスキルってなに&#34;&gt;Alexaのスキルってなに？&lt;/h3&gt;

&lt;p&gt;「スキル」とは、&lt;u&gt;開発者によって追加された拡張機能&lt;/u&gt;を指します。スマートフォンでいうアプリのようなものですね。&lt;/p&gt;

&lt;p&gt;スキルにも「カスタムスキル（汎用）」「スマートホームスキル（家電制御など）」「フラッシュブリーフィングスキル（読み上げ）」などの種類があります。&lt;/p&gt;

&lt;p&gt;開発したカスタムスキルは&lt;strong&gt;自分のデバイスですぐに利用&lt;/strong&gt;できますが、&lt;strong&gt;Alexaスキルストアで公開して頒布する&lt;/strong&gt;こともできます！今回は自分のデバイスで利用できるところまでやってみますよ〜！&lt;/p&gt;

&lt;h3 id=&#34;スキルを開発する方法&#34;&gt;スキルを開発する方法&lt;/h3&gt;

&lt;p&gt;まずはスキルの全体の処理の流れを見てみましょう。
&lt;img src=&#34;https://dotstud.io/img/blog/144/2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Echoデバイスは受け取った音声をAlexaサービスに渡します。&lt;/li&gt;
&lt;li&gt;Alexaサービスは音声を解析してテキストに変換し、処理ロジックに渡します。&lt;/li&gt;
&lt;li&gt;処理ロジックの結果がAlexaに渡され、音声データを生成してデバイスに渡します。&lt;/li&gt;
&lt;li&gt;Echoデバイスが音声を発します。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;スキルを開発するときに必要なのは、上の図で「&lt;strong&gt;音声インタフェース&lt;/strong&gt;」と「&lt;strong&gt;処理ロジック&lt;/strong&gt;」の部分です。&lt;/p&gt;

&lt;p&gt;音声インタフェースは&lt;u&gt;どんな言葉を受け取るか、どう理解するか&lt;/u&gt;などです。この部分は&lt;strong&gt;Amazon Developer上で設計&lt;/strong&gt;することができます。&lt;/p&gt;

&lt;p&gt;処理ロジックは&lt;u&gt;返答をする部分&lt;/u&gt;です。自前でエンドポイントを作成することもできますが、&lt;strong&gt;AWS Lambdaで作成すると簡単に紐付けることができます&lt;/strong&gt;。今回はAWS Lambdaを使ってみます。&lt;/p&gt;

&lt;h3 id=&#34;開発手順の整理&#34;&gt;開発手順の整理&lt;/h3&gt;

&lt;p&gt;今回は下記の手順で開発していきます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Developer上で音声インタフェースを設計&lt;/li&gt;
&lt;li&gt;AWS Lambdaで処理ロジックを開発&lt;/li&gt;
&lt;li&gt;音声インタフェースと処理ロジックの紐付け&lt;/li&gt;
&lt;li&gt;デバイスでスキルを有効にする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一つ一つの手順は難しくないので、しっかり理解しておきましょう！&lt;/p&gt;

&lt;h2 id=&#34;開発の事前準備&#34;&gt;開発の事前準備&lt;/h2&gt;

&lt;p&gt;各種アカウントやセットアップは開発の前にあらかじめ用意しておくとスムーズです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Developerアカウント&lt;/li&gt;
&lt;li&gt;Echoデバイスのセットアップ&lt;/li&gt;
&lt;li&gt;AWSアカウント&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下記でそれぞれの手順を紹介します。&lt;/p&gt;

&lt;h3 id=&#34;amazon-developerアカウントの作成&#34;&gt;Amazon Developerアカウントの作成&lt;/h3&gt;

&lt;p&gt;Alexaスキルの登録や音声インタフェースの設計に必要です。Amazon.co.jpのお買い物アカウントをそのまま紐付けることができます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;※Amazon.com（米国）アカウントを紐付けると最後のデバイスとスキルの紐付けでうまくいかない場合があります。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;https://developer.amazon.com/ja/&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/ad_console.png&#34; alt=&#34;&#34; /&gt;
Amazon Developer（日本語版）&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;右上のDeveloper Consoleから登録します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/ad_monetize.png&#34; alt=&#34;&#34; /&gt;
収益化の項目はひとまず「いいえ」にしておきます（後から変更できます）。&lt;/p&gt;

&lt;h3 id=&#34;echoデバイスのセットアップ&#34;&gt;Echoデバイスのセットアップ&lt;/h3&gt;

&lt;p&gt;スマートフォンアプリで、Amazon Developerアカウントの紐づけとWi-Fi設定を行います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/app_login.png&#34; alt=&#34;&#34; /&gt;
お手持ちのiPhone、Android端末にAlexaアプリをインストールしましょう（以下iPhoneでの説明です）。Amazon Developerアカウントでログインします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/app_setup.png&#34; alt=&#34;&#34; /&gt;
「設定」から「新しいデバイスをセットアップ」を選びます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/app_wifi.png&#34; alt=&#34;&#34; /&gt;
言語を選択し、スマートフォンを利用するWi-Fiに接続します。&lt;strong&gt;Wi-Fiは2.4GHz帯でないと利用できない&lt;/strong&gt;ので注意しましょう（最近だと5GHz帯も多いので確認してください）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/app_action.png&#34; alt=&#34;&#34; /&gt;
Echoデバイスと接続します。デバイスがオレンジになっていない場合はアクションボタンを長押しします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/app_mode.png&#34; alt=&#34;&#34; /&gt;
「・」のボタンがアクションボタンです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/app_device.png&#34; alt=&#34;&#34; /&gt;
「Amazon-XXXX」に接続します（複数のデバイスがセットアップモードになっている場合、混同しないよう注意してください）。&lt;/p&gt;

&lt;p&gt;以上でセットアップ完了です！&lt;/p&gt;

&lt;h3 id=&#34;awsアカウントの作成&#34;&gt;AWSアカウントの作成&lt;/h3&gt;

&lt;p&gt;AWSアカウントは下記の公式サイトを参考に進めてみてください（以前に登録済みだったので画面キャプチャが用意できませんでした……）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/jp/register-flow/&#34;&gt;https://aws.amazon.com/jp/register-flow/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;アカウント登録の際には&lt;strong&gt;クレジットカードの登録&lt;/strong&gt;、&lt;strong&gt;電話確認&lt;/strong&gt;（自動応答）が必要です。&lt;/p&gt;

&lt;p&gt;AWSアカウントには2018年3月現在では1年間の無料枠がついてきますが、&lt;u&gt;ご自身のアカウントの管理には注意してください。&lt;/u&gt;&lt;/p&gt;

&lt;h2 id=&#34;音声インタフェースの設計&#34;&gt;音声インタフェースの設計&lt;/h2&gt;

&lt;p&gt;まずは&lt;a href=&#34;https://developer.amazon.com/ja/&#34;&gt;Amazon Developer&lt;/a&gt;上で音声インタフェースを作成していきます。
&lt;img src=&#34;https://dotstud.io/img/blog/144/3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;alexaスキルを新規登録&#34;&gt;Alexaスキルを新規登録&lt;/h3&gt;

&lt;p&gt;Amazon Developerにログインして&lt;a href=&#34;https://developer.amazon.com/home.html&#34;&gt;Developer Console&lt;/a&gt;を開きます。
&lt;img src=&#34;https://dotstud.io/img/blog/144/ad_alexa.png&#34; alt=&#34;&#34; /&gt;
Alexaのページへ移動します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/ad_start.png&#34; alt=&#34;&#34; /&gt;
「Alexa Skills Kit」を始めます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/create1.png&#34; alt=&#34;&#34; /&gt;
「新しいスキルを追加」します（新メニューのβ版が出てますが、まだ日本語対応していないようです）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/create2.png&#34; alt=&#34;&#34; /&gt;
作成するスキルの情報を入力します。今回は下記のようにしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;スキルの種類 ⇒ 「カスタム対話モデル」&lt;/li&gt;
&lt;li&gt;言語 ⇒ 日本語&lt;/li&gt;
&lt;li&gt;スキル名 ⇒ ちゃんとくカフェ&lt;/li&gt;
&lt;li&gt;呼び出し名 ⇒ ちゃんとくカフェ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「保存」して「次へ」で作成します。&lt;/p&gt;

&lt;h3 id=&#34;対話モデルを作成&#34;&gt;対話モデルを作成&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/create3.png&#34; alt=&#34;&#34; /&gt;
作成したら、&lt;strong&gt;対話モデル&lt;/strong&gt;を作っていきます。「スキルビルダーを起動する」を選択します。&lt;/p&gt;

&lt;p&gt;対話モデルとは、&lt;u&gt;ユーザがどのように発話するか、どのように解釈して処理ロジックに伝えるか&lt;/u&gt;の部分です。用語がいくつか出てくるので、下の図を見てみましょう。
&lt;img src=&#34;https://dotstud.io/img/blog/144/model1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;スキル名を&lt;strong&gt;Invocation name&lt;/strong&gt;と言い、「&lt;strong&gt;Alexa、{Invocation name}を開いて&lt;/strong&gt;」と呼びかけます。&lt;/li&gt;
&lt;li&gt;起動後に返すAlexaの言葉を&lt;strong&gt;LaunchRequest&lt;/strong&gt;と言います。&lt;/li&gt;
&lt;li&gt;&lt;u&gt;Alexaが受け付けるアクションの呼びかけ&lt;/u&gt;を、&lt;strong&gt;Intent&lt;/strong&gt;と言います。&lt;/li&gt;
&lt;li&gt;Intentに対するAlexaの返答を&lt;strong&gt;IntentRequest&lt;/strong&gt;と言います。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これが基本的なユーザとAlexaのやりとりの構図です。対話モデルでは&lt;strong&gt;Intent&lt;/strong&gt;を設定して、Alexaに受け付けてもらえるようにしていきます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/model2.png&#34; alt=&#34;&#34; /&gt;
ちなみに「スキルを開く〜アクション」までは一文での呼びかけでもできます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/builder1.png&#34; alt=&#34;&#34; /&gt;
スキルビルダーの画面が開いたら、左のIntentsから「ADD」を選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/builder2.png&#34; alt=&#34;&#34; /&gt;
設定するIntentの名前を付けます。今回はオススメを教えてもらうアクションを作成したいので「RecomendIntent」にしてみました。&lt;u&gt;アクションに沿った名前をつけておく&lt;/u&gt;とIntentが増えてもわかりやすいと思います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/builder3.png&#34; alt=&#34;&#34; /&gt;
アクションを呼ぶときの「呼びかけ」のサンプル発話を登録していきます。公式によると、パターン数は1つのIntentに対し、&lt;u&gt;最低6つ、理想は30&lt;/u&gt;だそうです。サンプル発話が多いほど認識精度が向上します。&lt;/p&gt;

&lt;p&gt;登録したら「&lt;strong&gt;Save Model&lt;/strong&gt;」、「&lt;strong&gt;Build Model&lt;/strong&gt;」を順に選択します。（Buildには少し時間がかかります。ここで機械学習がされているそうです。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/builder4.png&#34; alt=&#34;&#34; /&gt;
ビルドが完了したら「Configuration」を選択し、設定画面に戻ります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/builder5.png&#34; alt=&#34;&#34; /&gt;
スキルの「ID」をコピーして、Amazon Developerは一旦置いておきます（まだ設定があるので開いたまま）。&lt;/p&gt;

&lt;h2 id=&#34;処理ロジックの開発&#34;&gt;処理ロジックの開発&lt;/h2&gt;

&lt;p&gt;続いて、&lt;a href=&#34;https://aws.amazon.com/jp/&#34;&gt;AWS&lt;/a&gt;のLambda上で処理ロジックを作っていきます。
&lt;img src=&#34;https://dotstud.io/img/blog/144/4.png&#34; alt=&#34;&#34; /&gt;
AWS Lambdaは、&lt;u&gt;AWSに関するイベントにをトリガーにする処理を作成できる実行環境&lt;/u&gt;です。&lt;/p&gt;

&lt;p&gt;自分自身でエンドポイントを立てることもできますが、AWS Lambdaを使うとロジック自体の開発や他のAWSサービスとの連携も簡単です。&lt;/p&gt;

&lt;h3 id=&#34;aws-lambda関数を作成&#34;&gt;AWS Lambda関数を作成&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func1.png&#34; alt=&#34;&#34; /&gt;
AWSコンソールを開いたら、「lambda」を検索して開きます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func2.png&#34; alt=&#34;&#34; /&gt;
&lt;strong&gt;リージョンが「東京」になっていることを確認&lt;/strong&gt;し、「関数を作成」します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func3.png&#34; alt=&#34;&#34; /&gt;
「設計図」から作成し、「alexa-skill-sdk-factskill」を検索して選びます。この設計図を利用すると、&lt;strong&gt;Alexa Skills Kit for Node.jsというNode.jsのSDK&lt;/strong&gt;がデフォルトで入ってきます。&lt;u&gt;現在のところ公式に開発されているSDKはNode.jsだけ&lt;/u&gt;です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func4.png&#34; alt=&#34;&#34; /&gt;
上記のように関数の情報を設定します。&lt;/p&gt;

&lt;p&gt;「ロール」は関数のアクセス権限です。今回は「シンプルなマイクロハーネスのアクセス権限」を選択しましたが、S3など他のサービスに繋ぎたい場合は別途選択が必要です。AWSの&lt;a href=&#34;https://developer.amazon.com/ja/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html&#34;&gt;ドキュメント&lt;/a&gt;を参考にしましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func5.png&#34; alt=&#34;&#34; /&gt;
下にスクロールして保存します。&lt;/p&gt;

&lt;h3 id=&#34;トリガーをセット&#34;&gt;トリガーをセット&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func6.png&#34; alt=&#34;&#34; /&gt;
関数が作成できたら、トリガー部分に「Alexa Skills Kit」をドラッグ＆ドロップで設定します。&lt;/p&gt;

&lt;p&gt;ここで「Alexa Skills Kitがない！」という人は、&lt;strong&gt;リージョンが東京になっているか&lt;/strong&gt;をもう一度確認してください。（東京じゃない場合は、リージョンを選び直して関数を再度作成ですよ！）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func8.png&#34; alt=&#34;&#34; /&gt;
下にスクロールして「トリガーの設定」に、Amazon Developerで取得した「スキルのID」を貼り付けます。&lt;/p&gt;

&lt;h3 id=&#34;処理ロジックを編集&#34;&gt;処理ロジックを編集&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func9.png&#34; alt=&#34;&#34; /&gt;
関数がデフォルトの設計図のままなので編集します。上記の部分を選択すると下にエディタが開きます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func11.png&#34; alt=&#34;&#34; /&gt;
コードのエントリタイプ（エディタを使う・アップロードするなど）や、ランタイムを選択できます。Node.jsは6.10までの対応になっています。もう少しバージョンが上がってほしいですね……！&lt;/p&gt;

&lt;p&gt;エディタには、デフォルトのコードを参考に下記のようなコードを貼り付けます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;use strict&#39;;

const Alexa = require(&#39;alexa-sdk&#39;);

const handlers = {
    // アプリ起動時の返答
    &#39;LaunchRequest&#39;: function () {
        const speechOutput = &#39;こんにちは。オススメをお知らせします。&#39;
        const reprompt = &#39;オススメをお知らせします。&#39;
        this.emit(&#39;:ask&#39;, speechOutput, reprompt);
    },
    // RecomendIntentへの返答
    &#39;RecomendIntent&#39;: function () {
        const intent = this.event.request.intent;
        const speechOutput = &#39;オススメはハンバーグ定食です。&#39;
        this.emit(&#39;:tell&#39;, speechOutput);
    },
    // ヘルプ（デフォルト）への返答
    &#39;AMAZON.HelpIntent&#39;: function () {
        const speechOutput = &#39;ちゃんとくカフェのオススメメニューをお知らせします。&#39;;
        const reprompt = &#39;オススメを聞いてみてください。&#39;
        this.emit(&#39;:ask&#39;, speechOutput, reprompt);
    },
    // キャンセル（デフォルト）への返答
    &#39;AMAZON.CancelIntent&#39;: function () {
        this.emit(&#39;:tell&#39;, this.t(&#39;STOP_MESSAGE&#39;));
    },
    // 対応できないアクションへの返答
    &#39;AMAZON.StopIntent&#39;: function () {
        const speechOutput = &#39;すみません。わかりません。&#39;;
        const reprompt = &#39;もう一度お願いします。&#39;
        this.emit(&#39;:tell&#39;, this.t(&#39;STOP_MESSAGE&#39;));
    },
};

// 下記のように修正
exports.handler = function(event, context, callback) {
    const alexa = Alexa.handler(event, context, callback);
    alexa.registerHandlers(handlers);
    alexa.execute();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;先ほど設定した「RecomendIntent」（ご自身が設定したIntent名。小文字大文字など注意！）に対する返答や、その他の返答を作成しました。RaunchRequest、HelpIntentなど、&lt;strong&gt;スキル開発で推奨されている設定があるので記述する&lt;/strong&gt;ようにします。&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;この辺がきちんと設定されていないとAlexaスキルストアでは公開できない&lt;/strong&gt;みたいです。&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/func7.png&#34; alt=&#34;&#34; /&gt;
コードが編集できたら右上で保存し、ARNをコピーして、AWSの設定は完了です。&lt;/p&gt;

&lt;h2 id=&#34;音声インターフェースと処理ロジックの紐付け&#34;&gt;音声インターフェースと処理ロジックの紐付け&lt;/h2&gt;

&lt;p&gt;作成したAWS Lambda関数とAmazon Developer上のスキルを紐づけます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/ad_func.png&#34; alt=&#34;&#34; /&gt;
Amazon Developer側の設定ページで、「エンドポイント」に「AWS LambdaのARN」を選択し、「デフォルト」に先ほどのARNを貼り付けます。&lt;/p&gt;

&lt;p&gt;保存して紐づけは完了です！&lt;strong&gt;これでスキルの作成が一通り完了しました！&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;試してみよう&#34;&gt;試してみよう！&lt;/h2&gt;

&lt;h3 id=&#34;シミュレータでテスト&#34;&gt;シミュレータでテスト&lt;/h3&gt;

&lt;p&gt;まずはAmazon Developer上に用意されているシミュレータでテストしてみます（実はスキル開発だけならEchoデバイスが無くてもできるんですね）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/simu1.png&#34; alt=&#34;&#34; /&gt;
「テスト」のサービスシミュレータに登録したサンプル発話を入力し、スキルを呼び出します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/simu2.png&#34; alt=&#34;&#34; /&gt;
レスポンスが返ってきました！処理ロジックを作ったらここでデバッグをしていくのが良さそうです。&lt;/p&gt;

&lt;h3 id=&#34;echoデバイスでスキルを有効にする&#34;&gt;Echoデバイスでスキルを有効にする&lt;/h3&gt;

&lt;p&gt;開発したスキルは、自分のAmazon Developerアカウントに紐付いているデバイスで検証することができます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/demo1.png&#34; alt=&#34;&#34; /&gt;
スマートフォンアプリから「スキル」を選びます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/demo2.png&#34; alt=&#34;&#34; /&gt;
「有効なスキル」を選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/demo3.png&#34; alt=&#34;&#34; /&gt;
「DEVスキル」の項目から、作成したスキルを選択します。&lt;/p&gt;

&lt;p&gt;ここで作ったスキルが表示されていない場合は、Amazon Developerアカウントが&lt;strong&gt;Amazon.comアカウント（米国）に紐付いてないか確認&lt;/strong&gt;してください。Amazon.co.jpアカウントに紐づけないとダメみたい……（現象が起こせなくて解決策がイマイチわかっていません、すみません）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/144/demo4.png&#34; alt=&#34;&#34; /&gt;
選択すると連携しているEchoデバイスでスキルが使えるようになります（無効にすると使えなくなります）。&lt;/p&gt;

&lt;h3 id=&#34;いざ-スキルを呼び出し&#34;&gt;いざ、スキルを呼び出し！&lt;/h3&gt;

&lt;p&gt;デバイスで作成したスキルを試してみましょう！&lt;/p&gt;

&lt;p&gt;基本のやりとりから……
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/RyHESCiE03s&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
バッチリです！&lt;/p&gt;

&lt;p&gt;「ヘルプ」「ストップ」などの呼びかけは、Intentを登録しなくてもデフォルトで設定されています。
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/dr-akz9qTDk&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;手順の紹介は長くなってしまいましたが、あまり引っかかるところなくスキルの開発ができたと思います。&lt;/p&gt;

&lt;p&gt;今回の基本のスキルに加えて、&lt;u&gt;デフォルトのIntentの拡張や、任意の数字や都市を受け取ることができる「Slot」の追加&lt;/u&gt;などまだまだカスタマイズができます。&lt;/p&gt;

&lt;p&gt;次回はカスタマイズを加えたスキルを開発し、公開するところまでやってみたいと思います。それではまた！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>