<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dotstudio（ドットスタジオ）</title>
    <link>https://dotstud.io/series/mac/index.xml</link>
    <description>Recent content on dotstudio（ドットスタジオ）</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2016 dotstudio inc.</copyright>
    <atom:link href="/series/mac/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>人柱覚悟でさっそくmacOS Sierraにしてみました。</title>
      <link>https://dotstud.io/blog/macos-sierra-update-process/</link>
      <pubDate>Fri, 23 Sep 2016 10:00:39 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/macos-sierra-update-process/</guid>
      
      <description>

&lt;p&gt;こんにちは、dotstudio代表の&lt;a href=&#34;https://dotstud.io/members/n0bisuke&#34;&gt;のびすけ&lt;/a&gt;です。macOS Sierraが出ましたね。まだ早いんじゃないかと思いつつ試しにアップデートしてみたのでレポートします。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ちなみに今回は「実際にmacOS Sierraにアップデートしてみたレポート」ですので、試す際にもしトラブルが発生しても当メディアでは責任は負いません。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;macos-sierra-v10-12&#34;&gt;macOS Sierra （v10.12）&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/01_image.png&#34; alt=&#34;&#34; /&gt;
&lt;a href=&#34;http://www.apple.com/jp/macos/sierra/&#34;&gt;macOS Sierra&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;シエラって読むみたいです。OS X El Capitan（v10.11）の後続版にあたります。
バージョンは10.12でコードネームがSierraです。&lt;/p&gt;

&lt;p&gt;ちなみに10.11までは「Mac OS X」という表記でしたが、Sierraからは「macOS」へ変わり最初のmが小文字になりました。デザイン的な理由がありそうですね（笑）&lt;/p&gt;

&lt;p&gt;既に色々なメディアが記事を書いていますので、何が変わったかや新機能などの詳細についてはそちらからキャッチアップして下さい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;（http://www.itmedia.co.jp/news/articles/1609/20/news119.html&#34;&gt;「Adobe CS6」は「macOS Sierra」で必要システム構成外に　Java 6サポート終了で&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;（http://www.gizmodo.jp/2016/09/mac-os-sierra-released.html&#34;&gt;OS X…ではなく「macOS Sierra」が正式リリース。MacにSiriがやってきた！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://applech2.com/archives/macos-10-12-sierra-upgrade-check.html&#34;&gt;macOS Sierraへアップグレードする前の注意点まとめ。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;アップデートする僕のmacbookのマシンスペック&#34;&gt;アップデートする僕のMacBookのマシンスペック&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;MacBook Pro （Retina 13-inch、 Early2015）&lt;/li&gt;
&lt;li&gt;OS X El Capitan／v10.11.6&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ちなみに&lt;a href=&#34;https://dotstud.io/blog/setup-new-mac-app/&#34;&gt;先日の記事&lt;/a&gt;で新しく買ったMacです。&lt;/p&gt;

&lt;h2 id=&#34;手順&#34;&gt;手順&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/02_image.png&#34; alt=&#34;&#34; /&gt;
&lt;a href=&#34;https://itunes.apple.com/jp/app/macos-sierra/id1127487414?mt=12&#34;&gt;App Store&lt;/a&gt;からSierraのインストーラを落とします。&lt;/p&gt;

&lt;p&gt;インストーラだけで4.78GBもあるので、ダウンロードには少し時間がかかると思います。&lt;/p&gt;

&lt;h3 id=&#34;インストール&#34;&gt;インストール&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/03_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;DLが終わるとアプリケーションフォルダにインストーラがあるので動させます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/04_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;インストーラの手順に従って以下を進めましょう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;続ける&lt;/strong&gt; を選択&lt;/li&gt;
&lt;li&gt;ソフトウェア使用許諾の表示になるので &lt;strong&gt;同意する&lt;/strong&gt; を選択&lt;/li&gt;
&lt;li&gt;ソフトウェア使用許諾のポップアップが出たら更に &lt;strong&gt;同意する&lt;/strong&gt; を選択&lt;/li&gt;
&lt;li&gt;インストール先のディスク選択画面が出るので &lt;strong&gt;インストール&lt;/strong&gt; を選択&lt;/li&gt;
&lt;li&gt;パスワードを求められるのでMacの &lt;strong&gt;パスワードを入力&lt;/strong&gt; し &lt;strong&gt;ヘルパーを追加&lt;/strong&gt; を選択&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここまで終わるとインストールの準備が開始されます。
&lt;img src=&#34;https://dotstud.io/img/blog/022/05_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;再起動を求められるので再起動しましょう。起動してるアプリケーションはすべて閉じます。編集中のファイルはちゃんと保存しておきましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/06_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;再起動するとMacの起動時にこのような画面になりインストールが進みます。この画面はMac起動前なのでここだけスマホ撮影です（笑）
&lt;img src=&#34;https://dotstud.io/img/blog/022/07_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ここも時間がかかるので、ご飯でも食べに行くのがちょうどいいかもしれません。インストールが完了すると起動します。&lt;/p&gt;

&lt;h3 id=&#34;sierraの初期設定&#34;&gt;Sierraの初期設定&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/08_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;起動するとMacの初期設定っぽいウィザードになります。AppleIDでサインインします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ソフトウェア使用許諾／プライバシーポリシー／利用規約の表示になるので &lt;strong&gt;同意する&lt;/strong&gt; を選択&lt;/li&gt;
&lt;li&gt;ポップアップが出たら更に &lt;strong&gt;同意する&lt;/strong&gt; を選択&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;アカウント設定がされます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/09_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;iCloundキーチェーンの設定ですが、使っている人は設定しても良いと思います。僕はスキップしました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/10_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;次にSierraの新機能のiCloud Drive（MacのファイルをiCloudに保存する／Apple版のGoogle DriveやDropBoxみたいなもの）の設定です。この設定は後からでもできますが、僕はチェックをいれました。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;書類フォルダ&lt;/strong&gt; と &lt;strong&gt;デスクトップ&lt;/strong&gt; 内のファイルが自動的にアップロードされるので、書類やデスクトップが汚い人はアレなファイルがアップされちゃうかもしれないので気をつけましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/11_image.png&#34; alt=&#34;&#34; /&gt;
次にSiriの設定です。これもSierraからの新機能です。iOSだけでしか使えなかったSiriですが、Macでも使えるようになります。目玉機能なのでオンにしておきます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/12_image.png&#34; alt=&#34;&#34; /&gt;
これで無事に起動しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/13_image.png&#34; alt=&#34;&#34; /&gt;
&lt;strong&gt;このMacについて&lt;/strong&gt; からスペック確認をするとmacOS Sierraの表記になっていますね。&lt;/p&gt;

&lt;h2 id=&#34;新機能を試してみる&#34;&gt;新機能を試してみる&lt;/h2&gt;

&lt;p&gt;新機能の全ては&lt;a href=&#34;http://applech2.com/archives/20160614-macos-10-12-sierra-new-features.html&#34;&gt;macOS 10.12 Sierraの新機能まとめ。&lt;/a&gt;などをチェックしてみてください。&lt;/p&gt;

&lt;p&gt;僕が実際に使ってみたかったものや手元で試せるものを紹介します。&lt;/p&gt;

&lt;h3 id=&#34;複数ウィンドウをまとめてくる-タブ&#34;&gt;複数ウィンドウをまとめてくる「タブ」&lt;/h3&gt;

&lt;p&gt;アプリケーションを複数開いても、タブでひとつのウィンドウにまとめてくれる機能です。Keynoteでよくスライドを複数開くので、個人的には今回のアップデートで一番便利さを感じています。&lt;/p&gt;

&lt;p&gt;サードパーティ製のアプリケーションでも可能みたいですが、まだ対応してるアプリは少なそうです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/14.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Keynoteでは &lt;strong&gt;ウィンドウ-&amp;gt;すべてのウィンドウを結合&lt;/strong&gt; で結合できます。他のアプリでも同じような表示になると思います。&lt;/p&gt;

&lt;p&gt;タブ機能と言っていますが、どちらかというと &lt;strong&gt;一つのウィンドウにまとめてくれる機能&lt;/strong&gt; という感じです。&lt;/p&gt;

&lt;h3 id=&#34;siri-がmacでも使えるようになった&#34;&gt;「Siri」がMacでも使えるようになった&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/15.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;iOSでしか使えなかった音声アシスタント機能の「Siri」をMacでも使えるようになりました。&lt;/p&gt;

&lt;p&gt;アイコンクリックか &lt;strong&gt;Command+スペース&lt;/strong&gt; で起動できます。&lt;/p&gt;

&lt;h3 id=&#34;macのストレージを自動で最適化してくれる-optimized-storage&#34;&gt;Macのストレージを自動で最適化してくれる「Optimized Storage」&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/16_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ストレージの空きがなくなってくると、iCloudにファイルを逃がしてストレージを最適化してくれます。まだ僕のMacは買ったばかりなので恩恵は受けていないですが期待できます。&lt;/p&gt;

&lt;p&gt;ちなみに、新機能の「Optimized Storage」（後述）を使うにはiCloud設定が必要です。iCloud設定から &lt;strong&gt;Macストレージを最適化&lt;/strong&gt; をチェックしましょう。&lt;/p&gt;

&lt;h3 id=&#34;画像や動画を切り離せる-ピクチャ-イン-ピクチャ-pinp&#34;&gt;画像や動画を切り離せる「ピクチャ・イン・ピクチャ （PinP）」&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/17.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;YouTubeやiTunesで見ている動画や画像などを&lt;code&gt;切り離せる&lt;/code&gt;機能です。ちなみに、ブラウザだとSafariしか使えないようです。早くChromeにも欲しいですね……。&lt;/p&gt;

&lt;p&gt;Youtube動画の上などで右クリックを2回（コンテキストメニューをダブルクリック）すると &lt;strong&gt;ピクチャ・イン・ピクチャにする&lt;/strong&gt; という項目があるので、それを選択しましょう。&lt;/p&gt;

&lt;h4 id=&#34;ちなみにchromeエクステンションがありました&#34;&gt;ちなみにChromeエクステンションがありました。&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/18.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/picture-in-picture-viewer/efaagmolahogmekmnmkigonhfcdiemnl/related&#34;&gt;Picture in Picture Viewer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chromeのメニューバーにアイコンが追加されるので、そのアイコンをYoutubeなどを開いてるときに押すと切り離せます。ちなみに、初回だけ&lt;code&gt;chrome://flags/#enable-panels&lt;/code&gt;というフラグからパネルを有効にする必要があります。&lt;/p&gt;

&lt;h2 id=&#34;気になる不具合など&#34;&gt;気になる不具合など&lt;/h2&gt;

&lt;h3 id=&#34;karabinerが使えない問題&#34;&gt;karabinerが使えない問題&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/19_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://dotstud.io/blog/setup-new-mac-app/&#34;&gt;先日の記事&lt;/a&gt;でも紹介した&lt;a href=&#34;https://pqrs.org/osx/karabiner/index.html.ja&#34;&gt;Karabiner&lt;/a&gt;が、執筆した時点（2016年9月21日）だと対応していませんでした。&lt;/p&gt;

&lt;p&gt;US配列キーボードで英数&amp;lt;-&amp;gt;かなのモード変換を、JIS配列のようにボタンひとつでやりたいという僕みたいな人には必須ツールだったので残念です。&lt;/p&gt;

&lt;p&gt;……と思いきや&lt;a href=&#34;https://ei-kana.appspot.com/&#34;&gt;⌘英かな&lt;/a&gt;というアプリで代替できたので、こちらをインストールすると &lt;strong&gt;US配列の英数&amp;lt;-&amp;gt;かなのモード変換問題&lt;/strong&gt; は解決します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/20_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;インストールはリンク先を参照して下さい。&lt;/p&gt;

&lt;h3 id=&#34;macos-sierraにしたらgitコマンドが動かなくなった&#34;&gt;macOS Sierraにしたらgitコマンドが動かなくなった……&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/022/21_image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これにハマる人はけっこういる気がします（笑）&lt;/p&gt;

&lt;p&gt;こちらのQiitaの記事「&lt;a href=&#34;http://qiita.com/n0bisuke/items/0ad33fa466c3de5ac763&#34;&gt;macOS SierraにしたらGitコマンドが動かなくなった&lt;/a&gt;」にまとめましたが最初焦りますね。&lt;/p&gt;

&lt;h2 id=&#34;まとめと雑感&#34;&gt;まとめと雑感&lt;/h2&gt;

&lt;p&gt;今のところ、Sierraにしてから不具合は特に起きてないです。性能が上がったという実感も無いので、現時点（2016年9月21日）ではまだ必要がなければアップデートしなくても良いかもしれません。&lt;/p&gt;

&lt;p&gt;ちなみにSierraにアップデートしたと同時にKeynoteがv7にアップデートしたんですけど、&lt;strong&gt;リアルタイム共同編集機能&lt;/strong&gt; というものが付いてて、こちらの方が気になっています（笑）&lt;/p&gt;

&lt;p&gt;僕は問題ありませんでしたが、ハードウェア的な問題などでデータが消えてしまうとかもあるかもしれないので、アップデートする方はくれぐれもお気をつけて！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>僕がMacを買い換えてすぐにいれるツール&amp;すぐにする初期設定【2016年9月版】</title>
      <link>https://dotstud.io/blog/setup-new-mac-app/</link>
      <pubDate>Fri, 16 Sep 2016 10:00:01 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/setup-new-mac-app/</guid>
      
      <description>

&lt;p&gt;こんにちは！　dotstudio代表の&lt;a href=&#34;https://twitter.com/n0bisuke&#34;&gt;のびすけ&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;最近Macを新しくしたんですけど、最初にインストールしたアプリケーションや設定した項目を自分用にメモしたので公開します。&lt;/p&gt;

&lt;p&gt;「Time Machineでバックアップとれよ！」みたいな話はあると思うんですけど、僕は基本的にパソコンを買い換えるタイミングで、使ってないアプリなどを断捨離したい性格なのでご理解ください。&lt;/p&gt;

&lt;p&gt;僕は職種的には &lt;strong&gt;Webエンジニア / テクニカルライター / エバンジェリスト&lt;/strong&gt; あたりです。Web開発しつつ、記事執筆しつつみたいなスタイルの人は共感してくれるかも。&lt;/p&gt;

&lt;h2 id=&#34;ことわり&#34;&gt;ことわり&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;スペックは Mac Book Pro 13 インチ / Retina / US配列 / OSX 10.11 El Capitan となっています。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Macを買って初日にいれたアプリケーションと設定のみを紹介しています。2日目以降にインストールするアプリは、多分自分にとって優先順位が低いので今回は省略です。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自分用メモに近いのであしからず。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;アプリケーション&#34;&gt;アプリケーション&lt;/h2&gt;

&lt;h3 id=&#34;google-chrome&#34;&gt;Google Chrome&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/01_chrome.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&#34;https://www.google.co.jp/chrome/browser/desktop/index.html&#34;&gt;https://www.google.co.jp/chrome/browser/desktop/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;言わずと知れたGoogle製のブラウザです。
MacのデフォルトブラウザはSafariなので、SafariからGoogle Chromeをダウンロードします。&lt;/p&gt;

&lt;p&gt;さらばSafari。&lt;/p&gt;

&lt;h3 id=&#34;gyazo-gyazo-gif&#34;&gt;Gyazo &amp;amp; Gyazo GIF&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/02_gyazo.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;https://gyazo.com/&#34;&gt;https://gyazo.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;スクリーンショット撮影をしてくれるアプリケーションです。撮影したスクリーンショットをすぐさまサーバーにアップロードしてくれてURLを発行してくれます。&lt;/p&gt;

&lt;p&gt;Gyazo GIFという画面録画をしてGIF画像にしてくれるアプリケーションも同時に使えるのですがこちらもよく使います。この記事も、Gyazoでキャプチャを撮りながら作っています。&lt;/p&gt;

&lt;h3 id=&#34;kobito&#34;&gt;Kobito&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/03_kobito.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;http://kobito.qiita.com/&#34;&gt;http://kobito.qiita.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Qiitaユーザーなら誰しもが使ってると思われる&lt;a href=&#34;http://qiita.com/&#34;&gt;Qiita&lt;/a&gt;連携の &lt;strong&gt;マークダウンエディタ&lt;/strong&gt; です。だいたいGyazoでスクリーンショットを撮影しつつ、発行された画像リンクをマークダウンで読み込んで記事を書く、というスタイルで作業してます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/04_kobito.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;そしてそのままQiitaの限定公開にアップロードすれば、レビューまでのスピードがかなり速くなるので &lt;strong&gt;Gyazo+Kobito+Qiitaの組み合わせはけっこうオススメ&lt;/strong&gt; です。&lt;/p&gt;

&lt;h4 id=&#34;kobitoのデータ移行&#34;&gt;Kobitoのデータ移行&lt;/h4&gt;

&lt;p&gt;KobitoでPC内に保存されてる下書き記事などを新しく買ったMacに移行する方法も合わせて紹介します。&lt;a href=&#34;http://qiita.com/nekoallergie/items/1cdc943252bd3cd90c37&#34;&gt;こちらのリンクを参考に（Kobitoのデータを新しい環境に手動で移行する）&lt;/a&gt;、古いMac側で以下のパスを開きます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~/Library/Containers/com.qiita.Kobito/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/05_kobito.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Data&lt;/code&gt;と&lt;code&gt;Container.plist&lt;/code&gt;をコピーして、USBメモリ経由で新規Macの同じディレクトリに放り込み、Kobitoを再起動すれば、下書きなどのデータも全て引き継がれます。&lt;/p&gt;

&lt;h3 id=&#34;google-drive&#34;&gt;Google Drive&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/06_drive.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;https://www.google.com/intl/ja_jp/drive/download/&#34;&gt;https://www.google.com/intl/ja_jp/drive/download/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;無料で使えるオンラインストレージです。チームメンバーでのファイル共有に使ってます。
ちょっと前までDropBox派だったのですが、会社を立ち上げるにあたりGoogle Apps for Workを登録してから、Googleアカウントでまとめられるものはまとめようって思ってます。&lt;/p&gt;

&lt;p&gt;「ツールって意外とお金がかかる」ことを起業してから知って、使うようになりました……。&lt;/p&gt;

&lt;h3 id=&#34;franz&#34;&gt;Franz&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/07_franz.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;http://meetfranz.com/&#34;&gt;http://meetfranz.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;デザイナーの&lt;a href=&#34;https://dotstud.io/members/chachmaru&#34;&gt;ちゃちゃまる&lt;/a&gt;が教えてくれたアプリです。複数のチャットツールを一元管理できます。これがめちゃ便利で、上記のようなよく使うツールはもちろんですが、海外では話題ですが国内ではマイナーなツールにも対応してます。&lt;/p&gt;

&lt;p&gt;個人的には、SlackのMacアプリケーションが複数チームになってくるとかなり管理しにくい+動作が重いという難点があったのですが、Franzにすることで一気に解決しました。&lt;strong&gt;Slackアプリはインストールしなくなりました（笑）&lt;/strong&gt;　Franzがなかった生活には戻れないって思うくらいかなり捗ります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/08_franz.png&#34; alt=&#34;&#34; /&gt;
ちなみにこれが僕が使ってるFranz画面です。&lt;/p&gt;

&lt;h2 id=&#34;macの環境設定&#34;&gt;Macの環境設定&lt;/h2&gt;

&lt;p&gt;ここからはMacの環境設定です。
僕が不便に思っている点を解消する設定をしています。&lt;/p&gt;

&lt;h3 id=&#34;キーリピートを最速に&#34;&gt;キーリピートを最速に&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/09_key.png&#34; alt=&#34;&#34; /&gt;
キーリピートとは、&lt;strong&gt;同じキーを押し続けて同じ文字をタイプしたときの速さ&lt;/strong&gt; です。簡単に言うと「キーボード入力の速さ」ですね。個人的に感じていることですが、この設定はエンジニアやライターは必須な設定なのではないかと思っています。キーリピート速度が遅いと、カーソル移動がしんどいですからね……（苦笑）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;システム環境設定&lt;/code&gt; -&amp;gt; &lt;code&gt;キーボード&lt;/code&gt;から&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;キーのリピート&lt;/code&gt;を速い&lt;/li&gt;
&lt;li&gt;&lt;code&gt;リピート入力認識までの時間&lt;/code&gt;を短い&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で設定ができます。&lt;/p&gt;

&lt;h3 id=&#34;usキーボードのかな変換時のキーマッピングを変える&#34;&gt;USキーボードのかな変換時のキーマッピングを変える&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/10_key.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Macのキーボード配列の変更方法です。&lt;/p&gt;

&lt;p&gt;JIS配列だと、日本語&amp;lt;-&amp;gt;英語の変換はスペース隣の「かな」キーと「英数」キーでできます。ところがUS配列だとこのキーがなく、「command+スペース」で切り替えます。JIS配列をもともと使っていてUSに途中から切り替えた人は、この操作が面倒臭くなる人が多いのではないでしょうか。&lt;/p&gt;

&lt;p&gt;そこで、US配列でもJIS配列と同じように使うために「キーマッピング」へ変更します。&lt;a href=&#34;https://pqrs.org/osx/karabiner/index.html.ja&#34;&gt;Karabiner&lt;/a&gt;をインストールして、「左右のコマンドキー（⌘）を「英数／かな」の設定を「コマンドキーの動作を優先モード」にすればOKです。&lt;/p&gt;

&lt;p&gt;参考リンク: &lt;a href=&#34;http://heyhojournal.com/us-keyboard/&#34;&gt;MacのUSキーボードで日本語⇔英語切替を簡単に行う為の設定&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;caps-lockキーとcontrolキーの入れ替え&#34;&gt;Caps LockキーとControlキーの入れ替え&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/11_key.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これもMacのキーボード配列を変更する方法です。&lt;/p&gt;

&lt;p&gt;JIS配列だと、Controlキーが左手の小指のあたりに来ます。この位置はすごく使い易いのですが、US配列ではJIS配列でいうCaps Lockという、ほぼ使わないキーが来てしまいます……（苦笑）&lt;/p&gt;

&lt;p&gt;キーマッピングは、&lt;code&gt;システム環境設定&lt;/code&gt; -&amp;gt; &lt;code&gt;キーボード&lt;/code&gt;から右下の&lt;code&gt;修飾キー&lt;/code&gt;ボタンを選択することで変更できます。&lt;/p&gt;

&lt;p&gt;参考リンク: &lt;a href=&#34;http://inforati.jp/apple/mac-tips-techniques/system-hints/how-to-convert-the-control-key-and-the-caps-lock-key-in-macos.html&#34;&gt;US仕様のキーボードのMacでControlキーとCaps Lockキーを入れ替える方法&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;ライブ変換を無効に&#34;&gt;ライブ変換を無効に&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/12_live.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;MacにはEl Capitanになってから、文字を自動で変換してくれる「ライブ変換」機能が追加されたのですが、個人的には邪魔な気がしたので変えます。これは完全に趣味というか慣れなんだと思います。&lt;/p&gt;

&lt;p&gt;メニューバー右上の文字入力方式切り替えの項目からチェックを外せばライブ変換が無効になります。&lt;/p&gt;

&lt;h3 id=&#34;コンピュータ名を変える&#34;&gt;コンピュータ名を変える&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/13_pcname.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↑こちらのスクショで分かるとおり、「sugawararyousuke-no-MacBook-Pro」という、謎のマシン名になっているので変えます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/14_pcname.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;環境設定 &amp;gt; 共有 &amp;gt; コンピュータ名&lt;/code&gt; にそのまま入力すればOKです。なんとなくですが、「CentOSで動いてるんだぞ」って感じの名前をつけています。&lt;/p&gt;

&lt;h3 id=&#34;ディスプレイ設定を変更&#34;&gt;ディスプレイ設定を変更&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/15_display.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Retinaだとこの辺の設定も必須ですよね。作業領域確保です。&lt;/p&gt;

&lt;h2 id=&#34;開発環境&#34;&gt;開発環境&lt;/h2&gt;

&lt;h3 id=&#34;iterm2&#34;&gt;iTerm2&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/16_iterm2.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;https://www.iterm2.com/downloads.html&#34;&gt;https://www.iterm2.com/downloads.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;つぎは開発ツールの「iTerm2」です。
まずはデフォルトのターミナルより高機能なiTerm2に変更します。&lt;/p&gt;

&lt;p&gt;いろいろな機能がありますが、Command+Dで画面分割できるところが地味にお気に入りです。&lt;/p&gt;

&lt;h3 id=&#34;git&#34;&gt;Git&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/17_git.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Gitは実は最初からインストールされてないんですよね。長くMac使ってると忘れがちです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git
xcode-select: note: no developer tools were found at &#39;/Applications/Xcode.app&#39;, requesting install. Choose an option in the dialog to download the command line developer tools.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;gitコマンドを実行しようとすると、ウィンドウが表示されるのでインストールしましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/18_git.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;インストールが完了するとgitコマンドが使えるようになります。&lt;/p&gt;

&lt;h3 id=&#34;visual-studio-code&#34;&gt;Visual Studio Code&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/19_code.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;https://www.visualstudio.com/ja-jp/products/code-vs.aspx&#34;&gt;https://www.visualstudio.com/ja-jp/products/code-vs.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;だいたいのエディタは、プラグインをいれると似たような性能になりますが、Visual Studio Codeは初期設定でかなり優秀です。最近メインで使っています。&lt;/p&gt;

&lt;p&gt;ただ、Sublime TextやAtomを使ってた時代もありましたし、時代が変わればAtom優勢になるときもあると思います。タイミングによって使い分けたいです。&lt;/p&gt;

&lt;h4 id=&#34;コマンドラインから実行できるようにする&#34;&gt;コマンドラインから実行できるようにする&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/20_code.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;コマンドラインから実行するには、command+shift+pでコマンドパレッドを開いてcodeと打ち、PATH内に「codeコマンドをインストール項目」と表示されるのでそれを実行しましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;n0bisuke-centos% code -h
Visual Studio Code v1.3.1

Usage: code [arguments] [paths...]

Options:
  -d, --diff
      Open a diff editor. Requires to pass two file paths as arguments.
  --disable-extensions
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じで&lt;code&gt;codeコマンド&lt;/code&gt;が使えるようになります。&lt;/p&gt;

&lt;h2 id=&#34;oh-my-zsh&#34;&gt;oh-my-zsh&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/21_ohmyzsh.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;http://ohmyz.sh/&#34;&gt;http://ohmyz.sh/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ざっくりいうとターミナル（zsh）が便利になるツールです。
zshの設定を追加したり拡張しやすくしてくれます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;まずはログインシェルをzshを設定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考リンク: &lt;a href=&#34;http://mollifier.hatenablog.com/entry/2013/02/22/025415&#34;&gt;初めて Mac で zsh を使う人のためのチュートリアル&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;僕の場合oh-my-zshが使いたいだけなのですがzshにしておきます。この設定を間違えると最悪ログインできなくなってしまうので注意しましょう。一旦参考リンクのやり方を確認してから以下を実行するのをお勧めします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chsh -s /bin/zsh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでログインシェルがzshになりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;oh-my-zshのインストール&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sh -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでインストールされます。
テーマ変更とかもできるんですけど僕はデフォルトテーマのままでつかっちゃってます。&lt;/p&gt;

&lt;p&gt;オススメテーマあったら教えてください。&lt;/p&gt;

&lt;h2 id=&#34;homebrew&#34;&gt;homebrew&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/22_brew.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;http://brew.sh/&#34;&gt;http://brew.sh/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Macで使う主に開発ツールのインストールを管理してくれるパッケージ管理ツールです。&lt;code&gt;brew install&lt;/code&gt;はよく使うので、初日にいれておきます。以下でインストールできます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;確認で以下を実行します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エラーが出ずにヘルプが表示されればokです。&lt;/p&gt;

&lt;h3 id=&#34;node-js環境整備&#34;&gt;Node.js環境整備&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/23_node.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;この辺は僕がNode.jsユーザーということもあるので優先度があがります。&lt;/p&gt;

&lt;h4 id=&#34;nodebrewのインストール&#34;&gt;nodebrewのインストール&lt;/h4&gt;

&lt;p&gt;URL: &lt;a href=&#34;https://github.com/hokaccha/nodebrew&#34;&gt;https://github.com/hokaccha/nodebrew&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;nodebrewは先ほどのhomebrewとは別物です。Node.jsのバージョン管理をしてくれるバージョンマネジメントツールです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/creationix/nvm&#34;&gt;NVM&lt;/a&gt;や&lt;a href=&#34;https://github.com/tj/n&#34;&gt;N&lt;/a&gt;などもありますが最近はnodebrewを使っています。&lt;/p&gt;

&lt;p&gt;インストール&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;curl -L git.io/nodebrew | perl - setup
echo &amp;quot;export PATH=$HOME/.nodebrew/current/bin:$PATH&amp;quot; &amp;gt;&amp;gt; .zshrc
source .zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでnodebrewコマンドが使える様になります。&lt;/p&gt;

&lt;h4 id=&#34;node-jsのインストール&#34;&gt;Node.jsのインストール&lt;/h4&gt;

&lt;p&gt;通常は以下でインストールできるのですが&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nodebrew install-binary 6.5.0
nodebrew use 6.5.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考リンクを見て高速にいれてみました&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MAKE_OPTS=&amp;quot;-j 2&amp;quot; nodebrew install-binary v6.5.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;確かに速い……!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;node -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でバージョンが表示されれば無事にインストール完了です。&lt;/p&gt;

&lt;p&gt;参考リンク: &lt;a href=&#34;http://qiita.com/yn-misaki/items/e92a47c662ea6d1236c1&#34;&gt;Nodebrewを使ってNode.jsを超高速にインストールする方法&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;sshfs-fuse-for-osx&#34;&gt;SSHFS / FUSE for OSX&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/24_fuse.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;SSH接続でリモートファイルをローカルにあるかのように編集できます。&lt;/p&gt;

&lt;p&gt;ローカルマシンのFinderから操作したり、Visual Studio Codeなどのエディタでも編集できるのでサーバー側でVimを使うのが苦手な僕みたいなタイプにはオススメです。RaspberryPiでの開発のときにもラズパイ上のファイルをローカルファイルのように扱えるので重宝します。&lt;/p&gt;

&lt;p&gt;参考リンク: &lt;a href=&#34;http://qiita.com/ysk24ok/items/bb148530a55a4e55d99b&#34;&gt;Macでsshfsを使ってローカルからリモートのファイルを触る&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hugo&#34;&gt;Hugo&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/25_hugo.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;https://gohugo.io/&#34;&gt;https://gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最近人気上昇中の静的サイトジェネレーターです。一昔前はJekyllが主流でしたが記事数が多くなるとビルド速度が遅くなるというところもあり人気が伸び悩んでました。&lt;/p&gt;

&lt;p&gt;Golang製のHugoは記事が増えても爆速ビルドなので最近ユーザーが増えてるイメージです。実はdotstudioのブログはHugoでできているので開発環境として必須です。インストールはbrew経由で一発ですね。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hugo系ナレッジもそのうち発信すると思います！&lt;/p&gt;

&lt;h3 id=&#34;arduino-ide&#34;&gt;Arduino IDE&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/26_arduino.png&#34; alt=&#34;&#34; /&gt;
URL: &lt;a href=&#34;https://www.arduino.cc/&#34;&gt;https://www.arduino.cc/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Arduino開発に必須のツールです。デバイスのデバッグなどでもよく使うので、dotstudioの事業の性質上必須です（笑）&lt;/p&gt;

&lt;h2 id=&#34;終わりに-よたばなし&#34;&gt;終わりに＆よたばなし&lt;/h2&gt;

&lt;p&gt;ということで紹介しました。自分の中で重要度の高いアプリケーションがまとまった気がします。誰かの役に立てば幸いです :)　&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/019/27_mac.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;関係ないけど今回Mac買うときに、ものすごく「MacBook12インチ」か「MacBook Pro 13インチ」かを迷ってましたが、表参道のApple Storeで鼻ピアスの女性店員に勧められてMac Book Pro 13インチに落ち着きました。&lt;strong&gt;「Mac Book Pro の方が買って後悔はしないですよ」&lt;/strong&gt; と言われたのが決め手ですね。&lt;/p&gt;

&lt;p&gt;確かに後悔はない……はず。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Chromeでcommand&#43;Qを間違えて押してしまうときの対処法（macOS限定）</title>
      <link>https://dotstud.io/blog/chrome-stop-quit-error/</link>
      <pubDate>Tue, 13 Sep 2016 18:00:00 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/chrome-stop-quit-error/</guid>
      
      <description>

&lt;p&gt;こんにちは、ちゃちゃまるです。毎日欠かさずNETFLIXを見ながら英語の勉強をしています（正当化）。画面に2つGoogle Chromeのウィンドウを配置し、左側でNETFLIXやYouTube鑑賞しつつ、右側でブラウジングするのが常です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/014/01_screenshot.png&#34; alt=&#34;alt&#34; /&gt;
ブラウジングが終わったらタブを閉じるのですが、僕は80%ぐらいの確率で &lt;code&gt;command + W&lt;/code&gt;（タブを閉じる）と間違えて&lt;code&gt;command + Q&lt;/code&gt;（アプリを終了する）を押して &lt;strong&gt;うっかりと動画のタブも閉じてしまいます&lt;/strong&gt;。せっかく見ていた動画も一瞬で消えてしまいます……。&lt;/p&gt;

&lt;p&gt;この問題をどうにかできないかとプラグインなどを調べていたら、まさかのGoogle Chrome標準機能で「Warn Before Quitting」（アプリを終了する前に警告する）というものがありました。これはかなり強いので紹介します。&lt;/p&gt;

&lt;h2 id=&#34;chromeの標準機能-warn-before-quitting&#34;&gt;Chromeの標準機能「Warn Before Quitting」&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/014/02_menu.png&#34; alt=&#34;alt&#34; /&gt;
さっそく「Warn Before Quitting」（アプリを終了する前に警告する）の設定方法を紹介しますが、この機能はデフォルトでオフになっています。メニューバーの「Chrome」からオンにしましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/014/03_quit.gif&#34; alt=&#34;alt&#34; /&gt;
この状態で&lt;code&gt;command + Q&lt;/code&gt;を押すと「Hold ⌘Q to Quit」というダイアログが出ます。アプリを終了するには&lt;code&gt;command + Q&lt;/code&gt;をホールドするだけでOKです。&lt;/p&gt;

&lt;p&gt;これでうっかり全閉じを防げるので、動画が途中で中断されて「ああっ！」って夜な夜な叫ぶこともなくなりますね！&lt;/p&gt;

&lt;h2 id=&#34;それでも終了してしまう方は-command-shift-t&#34;&gt;それでも終了してしまう方は「command + shift + T」&lt;/h2&gt;

&lt;p&gt;ここまでしてもまだ間違えて終了してしまい、タブを全て失ってしまった方へ。Chromeを再起動後、&lt;code&gt;command + shift + T&lt;/code&gt;を押すと前回のタブ全てを復活させることができます。ご安心ください。&lt;/p&gt;

&lt;p&gt;それではまた！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>