<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>obniz on dotstudio（ドットスタジオ）</title><link>https://dotstud.io/series/obniz/</link><description>Recent content in obniz on dotstudio（ドットスタジオ）</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>© 2018 dotstudio inc.</copyright><lastBuildDate>Wed, 01 Aug 2018 10:32:26 +0900</lastBuildDate><atom:link href="/series/obniz/" rel="self" type="application/rss+xml"/><item><title>お腹がなる前にobniz!電子工作初心者がおペコ伝達デバイスをつくってみた</title><link>https://dotstud.io/blog/obniz-tell-be-hungry/</link><pubDate>Wed, 01 Aug 2018 10:32:26 +0900</pubDate><guid>https://dotstud.io/blog/obniz-tell-be-hungry/</guid><description>&lt;p>こんにちは、&lt;a href="https://dotstud.io/members/kiki/">きき&lt;/a>です。&lt;/p>
&lt;p>遅めの育ち盛りなのか、お腹がすくのがとても早い今日この頃。お昼が近づいてくると、お腹がぐ〜ぐ〜なってしまうことが多々あります。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
本当に恥ずかしいんですよね、だって女の子だもん。とはいえ、生理現象なので誰もぐ〜ぐ〜を止めることはできません。&lt;/p>
&lt;p>ならば仕方ない、言われる前に言っちゃえ！お腹が鳴る前に「私、お腹が空きましたよ」ということを伝える「&lt;strong>おペコ伝達デバイス&lt;/strong>」を作っちゃいましょう！&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->※おペコ…お腹がペコペコの意。&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="obniz">obnizでおペコ伝達デバイスを作る&lt;/h2>
&lt;h3 id="iotobniz">IoT開発ボード「obniz」って？&lt;/h3>
&lt;p>今回は、JavaScriptで初心者も簡単に開発できる「&lt;strong>&lt;a href="https://obniz.io/">obniz&lt;/a>（おぶないず）&lt;/strong>」を使っておペコ伝達デバイスを作ります！&lt;/p>
&lt;p>obnizは、&lt;strong>Wi-Fiに繋げるだけでどこからでも操作することができるIoT開発ボード&lt;/strong>
です。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Wi-Fi以外のセットアップ不要&lt;/strong>でオンライン上ですぐに開発することができ、&lt;strong>JavaScriptやブロックプログラミング&lt;/strong>で開発できるためプログラミング初心者でも気軽に使い始めることができます。&lt;/p>
&lt;p>また&lt;strong>すべてのI/Oが電圧の切り替えやUART変換に対応&lt;/strong>、&lt;strong>モータドライバ搭載&lt;/strong>で、難しいGPIOを意識することなくハードウェアを利用できます。&lt;/p>
&lt;p>&lt;strong>サーバレス機能を用いた他サービスとの連携&lt;/strong>や、&lt;strong>obnizクラウドによるAPI操作機能&lt;/strong>もあり、あると便利な&lt;strong>Bluetooth（BLE）&lt;strong>や&lt;/strong>OLEDディスプレイ&lt;/strong>も搭載です。&lt;/p>
&lt;p>紹介したい機能が多すぎて太字だらけになっちゃいました。もう&lt;!-- raw HTML omitted -->&lt;strong>欲しい機能全部盛り&lt;/strong>&lt;!-- raw HTML omitted -->って感じですね！&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;a href="https://dotstud.io/blog/obniz-hello-world-iot/">前回の記事&lt;/a>では、obnizデビュー！ということで、セットアップ方法やブロックプログラミングでLチカを試してみました。&lt;/p>
&lt;p>今回はJavaScriptでコードを書いて、Lチカやサーボモーターを動かしてみたいと思います。&lt;/p>
&lt;h3 id="heading">おペコを伝える方法&lt;/h3>
&lt;p>おペコの伝達は以下の2パターンで試してみたいと思います。&lt;/p>
&lt;ol>
&lt;li>めっちゃ光ってobnizのディスプレイにメッセージを表示させる&lt;/li>
&lt;li>Twitterで「#お腹すいたなぁ」とツイートすると旗を振って鈴を鳴らす&lt;/li>
&lt;/ol>
&lt;p>それではお腹がなってしまう前に作らねば〜！&lt;/p>
&lt;h3 id="heading-1">今回使用する電子部品たち&lt;/h3>
&lt;ul>
&lt;li>ジャンパワイヤ ×3&lt;/li>
&lt;li>サーボモーター ×1&lt;/li>
&lt;li>内部抵抗が付いているLED （赤 ×1、紫 ×1）&lt;/li>
&lt;li>旗用の画用紙や鈴など&lt;/li>
&lt;/ul>
&lt;p>LEDは、obniz公式サイトに「&lt;strong>内部抵抗があるものを使用してください&lt;/strong>」との旨が記載されているので、要注意です。&lt;/p>
&lt;h2 id="-obniz">おペコ伝達①: めっちゃ光ってobnizのディスプレイにメッセージが表示される&lt;/h2>
&lt;p>専用の&lt;a href="http://obniz.io/program">オンラインエディタ&lt;/a>を開き、以下のコードを書きました。&lt;/p>
&lt;pre>&lt;code>&amp;lt;!-- HTML Example --&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt;
&amp;lt;script src=&amp;quot;https://obniz.io/js/jquery-3.2.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;https://unpkg.com/obniz@latest/obniz.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div id=&amp;quot;obniz-debug&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;
var obniz = new Obniz(&amp;quot;XXXX-XXXX&amp;quot;); // 固有のobniz ID
obniz.onconnect = function(){
obniz.display.clear();
obniz.display.print(&amp;quot;ちゃんとくさん&amp;quot;);
},4000;
setInterval(function(){
obniz.display.print(&amp;quot;あなたの脳内に&amp;quot;);
}, 6000);
setInterval(function(){
obniz.display.print(&amp;quot;呼びかけています&amp;quot;);
}, 7000);
setInterval(function(){
obniz.display.print(&amp;quot;お腹が空きました&amp;quot;);
}, 8000);
setInterval(function () {
var led1 = obniz.wired(&amp;quot;LED&amp;quot;, {anode:4, cathode:5});
var led2 = obniz.wired(&amp;quot;LED&amp;quot;, {anode:6, cathode:7});
led1.on();
led2.off();
},1000);
setInterval(function () {
var led1 = obniz.wired(&amp;quot;LED&amp;quot;, {anode:4, cathode:5});
var led2 = obniz.wired(&amp;quot;LED&amp;quot;, {anode:6, cathode:7});
led1.off()
led2.on();
},2000);
&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;strong>保存＆開く&lt;/strong>ボタンを押すと……&lt;/p>
&lt;p>&lt;img src="https://dotstud.io/img/blog/190/2.gif" alt="">&lt;/p>
&lt;p>赤と紫のLEDの眩しいことよ……！&lt;/p>
&lt;p>内部抵抗のないLEDを使ってしまうと流れる電流の大きさに耐えられず、LEDが壊れてしまい危険な状態に。obnizでは、自動的に停止して警告音を鳴らしてくれる「&lt;strong>過電流保護機能&lt;/strong>」が起動します。間違えてしまってもなんとかしてくれるので、初心者に優しいですね。&lt;/p>
&lt;p>（公式サイトをちゃんと読まずに内部抵抗のないLEDを使用し、画面上に現れる多数の「&lt;strong>warning&lt;/strong>」と、若干の焦げた匂いに内心ビビりまくったことは内緒ですよ……）&lt;/p>
&lt;h2 id="-twitter">おペコ伝達②: Twitterで「#お腹すいたなぁ」とツイートすると旗を振って鈴を鳴らす&lt;/h2>
&lt;p>次は、&lt;a href="https://obniz.io/explore/1">公式サイトの作品一覧ページ&lt;/a>を参考にして、&lt;strong>目で見てわかるだけでなく、音でも空腹を伝えられるようにします。&lt;/strong>&lt;/p>
&lt;p>手順は以下の通りです。&lt;/p>
&lt;ol>
&lt;li>Twitter API Keyを取得する&lt;/li>
&lt;li>Node.jsでサーバモーターを動かす&lt;/li>
&lt;li>いい感じの旗を作る&lt;/li>
&lt;/ol>
&lt;h3 id="twitter-api-key">Twitter API Keyを取得する&lt;/h3>
&lt;p>私ははじめての取得だったので手順を載せますが、&lt;strong>そんなんもう知っとるわ&lt;/strong>という方は読み飛ばしちゃってください。&lt;/p>
&lt;p>ちなみに、Twitterの設定であらかじめ電話番号の登録をする必要があります。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;a href="https://apps.twitter.com/">Twitter Application Management&lt;/a>を開き、右上の「&lt;strong>Create New App&lt;/strong>」ボタンを押します。&lt;/p>
&lt;p>なんで3個も作ってるのかという理由は後ほど説明します。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;ol>
&lt;li>必須の3箇所に記入&lt;/li>
&lt;li>&lt;strong>Developer Agreement&lt;/strong>のチェックボックスを押す&lt;/li>
&lt;li>&lt;strong>Create your Twitter application&lt;/strong>を押す&lt;/li>
&lt;/ol>
&lt;p>これでアプリケーションの作成ができました。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>Your Access Token&lt;/strong>は、&lt;strong>Create my access token&lt;/strong>を押すと発行されます。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>すんなりと取得することができましたね。&lt;/p>
&lt;h3 id="nodejs">Node.jsでサーバモーターを動かす&lt;/h3>
&lt;p>参考にしたコードをみると、記入する部分が３箇所あることがわかります。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>①数字8桁のobniz固有ID
②取得した4種類のAPI Key
③反応してほしい言葉&lt;/p>
&lt;p>をそれぞれ入力します。&lt;/p>
&lt;p>Node.jsでサーバーを立ち上げ、コードを書き込みましょう。&lt;/p>
&lt;p>実際のコードはこちらです。&lt;/p>
&lt;pre>&lt;code>// Nodejs
var Obniz = require('obniz');
var Twitter = require('twitter');
var obniz = new Obniz(&amp;quot;0000-0000&amp;quot;);
var servo;
obniz.onconnect = function(){
servo = obniz.wired(&amp;quot;ServoMotor&amp;quot;, {signal:0,vcc:1, gnd:2});
servo.angle(10);
}
var client = new Twitter({
consumer_key: 'ConsumerKey',
consumer_secret: 'Secret',
access_token_key: 'TokenKey',
access_token_secret: 'TokenSeacret'
});
var stream = client.stream('statuses/filter', {track: '#お腹すいたなぁ'});
stream.on('data', function(event) {
if (event) {
var count = 0;
var angles = [75,45,75,45,75,45,75]
var timer = setInterval(function(){
count++;
servo.angle(angles[count]);
if (count &amp;gt;= 6){
clearInterval(timer);
}
}, 500);
}
});
&lt;/code>&lt;/pre>&lt;p>③は「&lt;strong>#お腹すいたなぁ&lt;/strong>」にしました。「お腹すいた」「ご飯食べたい」ではなく、「すいたなぁ」と語尾を弱くすることで「&lt;strong>すみません、私もうお腹空きすぎて力が入らんのです……&lt;/strong>」といった申し訳なさと弱々しい感情の表現にこだわりました。&lt;/p>
&lt;p>サーボモーターの配線は、以下の通りに繋いでください。
・茶色：GND→2
・赤：電源［＋］→1
・オレンジ：制御信号→0&lt;/p>
&lt;p>文字を変えてみたり、角度を調節してみたり……を繰り返しすぎると、Twitterから「&lt;strong>あなた短時間で何回も起動しすぎよ&lt;/strong>」というエラーが表示されます。エラーが解除されるまで15分ほど待たなければいけないので、待たなくていいように3つのTwitter API Keyを取得して交互に使用しました。&lt;/p>
&lt;p>起動するとこんな感じです。
&lt;img src="https://dotstud.io/img/blog/190/9.gif" alt="">&lt;/p>
&lt;p>はじめてサーボモーター動かせたよ〜！楽しいよ〜！&lt;/p>
&lt;h3 id="heading-2">いい感じの旗を作る&lt;/h3>
&lt;p>久しぶりのプチ図画工作、付箋をチョキチョキ。&lt;/p>
&lt;p>小学４年生で所属していた「図工クラブ」での経験が発揮された瞬間です。旗は2パターン作ってみました。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>不器用な私史上、かなりいい方です。&lt;/p>
&lt;p>&lt;img src="https://dotstud.io/img/blog/190/11.gif" alt="">
事後報告バージョン&lt;/p>
&lt;p>&lt;img src="https://dotstud.io/img/blog/190/12.gif" alt="">
事前報告バージョン&lt;/p>
&lt;p>なんだか旗の振り方が少し不器用ですが、作り手に似たということにしてこのまま進みます。&lt;/p>
&lt;h2 id="heading-3">お腹が鳴りそうになってきた&lt;/h2>
&lt;p>それではobnizをこっそりちゃんとくさんのデスクに仕込みます。&lt;/p>
&lt;h3 id="led">①LEDライトとディスプレイ表示で視覚に訴えるスタイル&lt;/h3>
&lt;p>&lt;img src="https://dotstud.io/img/blog/190/13.gif" alt="">&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h3 id="heading-4">②旗と鈴の音で視覚のみならず聴覚にも訴えるスタイル&lt;/h3>
&lt;p>鈴はピンクのお守りについている鈴しかありませんでした。予想以上にキュートな仕上がりです。&lt;/p>
&lt;p>&lt;img src="https://dotstud.io/img/blog/190/14.gif" alt="">&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>思ったより激しめに旗が動く&lt;/strong>ので、こちらの方が空腹感はより伝わると思います。微かな驚きとともにおペコを伝えることができました。&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="heading-5">おわりに&lt;/h2>
&lt;p>いかがでしたでしょうか？&lt;/p>
&lt;p>obnizを使えば、&lt;strong>お腹がぐ〜ぐ〜なって恥ずかしい思いをすることもないし、お昼のタイミングを早めることもできます&lt;/strong>。&lt;/p>
&lt;p>みなさんも会社の上司のデスクや、学校の気になるあの子の机に仕込みまくり、日々のおペコ問題を解消していきましょう！&lt;/p>
&lt;p>ではでは、私はランチタイムに入ることにします〜！&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item><item><title>JavaScriptで動くIoT開発ボード「obniz」って？使い方を説明！</title><link>https://dotstud.io/blog/obniz-hello-world-iot/</link><pubDate>Wed, 25 Jul 2018 10:00:24 +0900</pubDate><guid>https://dotstud.io/blog/obniz-hello-world-iot/</guid><description>&lt;p>こんにちは、テクニカルエディターの&lt;a href="https://dotstud.io/members/kiki">きき&lt;/a>です。&lt;/p>
&lt;p>突然ですが、「&lt;strong>IoTってなんだか難しそう。でも、気になる。&lt;/strong>」という方へ。IoT体験、やってみたいですよね？ネットを通してモーターを動かしたり、LEDをチカチカさせたりしてみたいですよね？ね？&lt;/p>
&lt;p>&lt;strong>そんなあなたに読んでほしい！&lt;/strong>&lt;/p>
&lt;p>初心者でも簡単にIoTプログラミングができるぞ、と噂の開発ボード「&lt;strong>obniz&lt;/strong>」をババンと紹介します！&lt;/p>
&lt;h2 id="obniz">obnizとは？&lt;/h2>
&lt;p>「&lt;a href="https://obniz.io/">&lt;strong>obniz&lt;/strong>（オブナイズ）&lt;/a>」は、&lt;strong>Wi-Fiに繋げるだけでどこからでも操作することができるIoT開発ボード&lt;/strong>です。&lt;/p>
&lt;p>&lt;img src="https://qiita-image-store.s3.amazonaws.com/0/263775/0e90dfcd-4c30-0ab2-b4e2-307f6d3877ca.png" alt="スクリーンショット 2018-07-11 14.44.18.png">&lt;/p>
&lt;p>2018年5月18日からCambrianRoboticsが開発・販売しているボードで、価格は**5,980円（税込）**です。&lt;/p>
&lt;p>クラウドファンディングサイト&lt;a href="https://www.kickstarter.com/projects/cambrianrobotics/obniz-api-managed-io?ref=card">&lt;strong>kickstarter&lt;/strong>&lt;/a>では100万円以上の資金を集め、販売後には売り切れ続出と話題になっていましたね！&lt;/p>
&lt;p>日本だけでなく海外にも販売経路を伸ばし、&lt;strong>海外MakerFaire出展&lt;/strong>や&lt;strong>ハンズオン開催&lt;/strong>など取り組んでいるようです。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://amzn.to/2KnvxXV">Amazon購入リンク&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="heading">ざっくり特徴紹介&lt;/h3>
&lt;p>obnizの特徴・機能は多岐にわたるのですが、ざっくりと下記が挙げられます。&lt;/p>
&lt;ul>
&lt;li>オンラインエディタの利用で環境構築なし&lt;/li>
&lt;li>&lt;strong>JavaScript&lt;/strong>や&lt;strong>ブロックプログラミング&lt;/strong>で開発可能&lt;/li>
&lt;li>obnizに繋いだモーターやセンサーなどを&lt;strong>ブラウザから制御可能&lt;/strong>&lt;/li>
&lt;li>&lt;strong>HTMLでのUI連携や、Node.jsで他サービスと回路の連携&lt;/strong>が可能&lt;/li>
&lt;li>全てのピンでUARTのアサイン可能&lt;/li>
&lt;li>全てのピンで1A・ドライバ搭載（&lt;strong>モータを直挿し可能&lt;/strong>）&lt;/li>
&lt;li>電流が大きくなると自動的に停止して警告音を鳴らしてくれる「&lt;strong>過電流保護機能&lt;/strong>」搭載&lt;/li>
&lt;li>&lt;strong>OLEDディスプレイ&lt;/strong>、&lt;strong>Wi-Fi機能&lt;/strong>、&lt;strong>BLE機能&lt;/strong>搭載&lt;/li>
&lt;li>&lt;strong>obnizクラウド&lt;/strong>でAPIから制御可能&lt;/li>
&lt;li>&lt;strong>サーバレス&lt;/strong>でwebhook連携も簡単&lt;/li>
&lt;/ul>
&lt;p>いかに多機能かわかっていただけたでしょうか……！初心者が使いやすいだけでなく、高性能でもあるようです。&lt;/p>
&lt;p>ざっと公式サイトを読んだだけでも良いことだらけなobniz、早速使ってみましょう〜！&lt;/p>
&lt;h2 id="obniz-1">obnizを触ってみよう&lt;/h2>
&lt;h3 id="heading-1">開封の儀&lt;/h3>
&lt;p>しゃちょーののびすけさんに「&lt;strong>obnizを貸してください&lt;/strong>」と伝えたら、「&lt;strong>攻めるね〜！！&lt;/strong>」と茶化されたので、なんとなく緊張してしまいますね。&lt;/p>
&lt;p>パッケージはこのような感じです。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>差し色のブルーが可愛いいいい！&lt;/p>
&lt;p>&lt;a href="https://dotstud.io/blog/toy-drone-tello-using/">前回の記事&lt;/a>では、トイドローン「Tello」で終始遊び倒す内容だったので、きき史上初めての開発ボード。初めてのおつかいならぬ、&lt;strong>初めてのかいふう&lt;/strong>です。&lt;/p>
&lt;p>ジャジャン！！&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>obnize本体サイズは&lt;strong>74.5×36.3mm&lt;/strong>なので、私の想像に比べるとなんだか小さかったです。&lt;/p>
&lt;h3 id="wi-fi">Wi-Fi設定&lt;/h3>
&lt;p>まずはじめに、ケーブルとobnizをつなぎます。&lt;/p>
&lt;p>待って！なんか可愛い子出てきた〜！これは何かの動物なのでしょうか？妖精か何かなのでしょうか？&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>「&lt;strong>Switch this!&lt;/strong>」と言われるがままに左上のボタンを押します。&lt;/p>
&lt;p>押すとWi-Fiの設定が始まるので、ディスプレイ上で選択して繋げます。左上のボタンは左右のフリックと押し込みで選択・決定ができるようになっているんですね。&lt;/p>
&lt;h3 id="heading-2">オンラインエディタを開く&lt;/h3>
&lt;p>Wi-Fi設定が終わると、QRコードと8桁の番号が表示されます。この番号がobniz idという識別番号になっているようです。（&lt;strong>どこからでも操作できちゃう&lt;/strong>ので、公開しない方が良さそうですね！）&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>QRコードをスマートフォンで読みこむとオンラインエディタが開き、このような画面が出てきます。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>ここにobnizのディスプレイで表示されている8桁のobniz idを入力します。&lt;/p>
&lt;p>obnizはクラウド上のAPIを利用して操作できるので、ソフトウェアやアプリをインストールする必要はありません。&lt;/p>
&lt;p>すごく簡単ですよね？これで準備はばっちりです！&lt;/p>
&lt;h2 id="obniz-2">obnizのプログラミングをしてみよう&lt;/h2>
&lt;h3 id="hello-world">始めてすぐさまHello World&lt;/h3>
&lt;p>オンラインエディタには、すでに以下のようなコードが書かれています。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;code>obniz.display.print(&amp;quot;Hello World!&amp;quot;)&lt;/code>とあるように、obnizのディスプレイ上に「Hell World」を表示するコードですね。&lt;/p>
&lt;p>&lt;strong>&lt;code>&amp;quot;OBNIZ_ID_HERE&amp;quot;&lt;/code>&lt;/strong>のところにも、obniz idを入力しましょう。&lt;/p>
&lt;p>右上の保存＆開くボタンを押すと……&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>obnizのディスプレイ上でも「&lt;strong>Hello World&lt;/strong>」が表示されました〜！&lt;/p>
&lt;p>私、何もしていないのにHello Worldされている……！&lt;/p>
&lt;h3 id="l">ブロックプログラミングでLチカデビュー&lt;/h3>
&lt;p>obnizを動かすことができた感動と「私何もしていないぞ」感の間で葛藤しているので、その次に簡単な&lt;strong>ブロックプログラミング&lt;/strong>をしてみます。&lt;/p>
&lt;p>ホームページの色合いがふんわりとしていてデザインが可愛らしいので、初心者女子大生もビビることなく進めることができるのもオススメポイントです。&lt;/p>
&lt;p>公式サイトから、&lt;a href="https://obniz.io/makecode/">ブロックプログラミング専用エディタ&lt;/a>を開きます。&lt;/p>
&lt;p>はじめに、&lt;strong>My Project&lt;/strong>を選択します。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>お久しぶりです、と言わんばかりに再度こちらの画面が表示されるので、obniz idを入力します。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>入力すると、ブロックプログラミングの操作画面に変わります。&lt;/p>
&lt;p>こりゃまた可愛すぎるのでは……！？&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>こちらもobnizのディスプレイ上に「Hell World」を表示するコードです。簡単に文字を表示させたり、LEDを光らせたり、モーターを動かすこともできます。メニューバーがたくさんあるのでいろんなことを試せますね。&lt;/p>
&lt;p>この時点で「IoTは何から始めればいいのか分からない……」と泣き言を呟いていたあの頃の私が嘘のようにハイテンションです。胸熱なまま、Lチカに挑みます。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>表示する文字を増やすことも、LEDの秒数も簡単に設定できます。&lt;/p>
&lt;p>そして完成したのがこちら！&lt;/p>
&lt;p>&lt;a href="https://gyazo.com/5c7e715003a9594450230da781555281">&lt;img src="https://i.gyazo.com/5c7e715003a9594450230da781555281.gif" alt="Image from Gyazo">&lt;/a>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->※公式サイトにあるように、抵抗内蔵LEDを使用してください。&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>なんということでしょう。こんなにもすぐにLチカデビューできるなんて！&lt;/p>
&lt;h2 id="heading-3">まとめ&lt;/h2>
&lt;p>この記事を読んでいる方はお気づきだと思うのですが、&lt;strong>難しいことは何一つしていません&lt;/strong>。そうであるのにもかかわらず、このわくわく感。IoT体験は、&lt;strong>楽しいことだらけ&lt;/strong>です。&lt;/p>
&lt;p>今回はブロックプログラミングを行いましたが、次回はJavaScriptでサーボモータも使ってみたいと思います。&lt;/p>
&lt;p>ホームページには実際の遊び方の説明や作品紹介ページが充実しているので、気軽に始めることができます。初心者の方もそうでない人も、obnizで様々な使い方を試してみてくださいね！&lt;/p></description></item></channel></rss>