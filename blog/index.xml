<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on dotstudio（ドットスタジオ）</title>
    <link>https://dotstud.io/blog/</link>
    <description>Recent content in Blogs on dotstudio（ドットスタジオ）</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2016 dotstudio inc.</copyright>
    <lastBuildDate>Thu, 28 Sep 2017 14:45:35 +0900</lastBuildDate>
    <atom:link href="/blog/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>#linedevday 2017レポート！ Clova連携で期待のGateboxの技術話を聞いてみたよ</title>
      <link>https://dotstud.io/blog/linedevday-report-2017-gatebox/</link>
      <pubDate>Thu, 28 Sep 2017 14:45:35 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/linedevday-report-2017-gatebox/</guid>
      
      <description>

&lt;p&gt;こんにちは、のびすけです。&lt;/p&gt;

&lt;p&gt;今日は&lt;a href=&#34;http://linedevday.linecorp.com/jp/2017/&#34;&gt;LINE DEVELOPER DAY 2017&lt;/a&gt;にお邪魔しています。&lt;/p&gt;

&lt;p&gt;Gateboxの話を聞いていましたが、&lt;strong&gt;Gateboxの技術にNode.jsが採用されていたことが驚きです。&lt;/strong&gt;って感じの話を書きます。&lt;/p&gt;

&lt;p&gt;(速報のりなので、誤字脱字あったらごめんなさい）&lt;/p&gt;

&lt;h2 id=&#34;line-developer-day-2017&#34;&gt;LINE DEVELOPER DAY 2017&lt;/h2&gt;

&lt;p&gt;LINEが開催している開発者向けのカンファレンスイベントです。&lt;/p&gt;

&lt;p&gt;LINEや周辺サービスの裏側の技術や今後の展開についての発表があるイベントです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3つの会場でパラレルでトークが展開されていきます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/1-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;個人的には、今回は&lt;a href=&#34;https://clova.ai&#34;&gt;Clova&lt;/a&gt;やBotの話などを期待しています。（会場で、執筆してるので現在進行形）&lt;/p&gt;

&lt;h2 id=&#34;セッション-gateboxのこれまでとこれから&#34;&gt;セッション「Gateboxのこれまでとこれから」&lt;/h2&gt;

&lt;p&gt;ランチ後の最初のセッションです。&lt;/p&gt;

&lt;p&gt;Gateboxの紹介と今後についてを紹介するセッションでした。ちなみに、当日の発表資料は&lt;a href=&#34;https://www.slideshare.net/linecorp/gatebox-how-we-got-here-and-where-were-going&#34;&gt;こちら&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gatebox.ai/&#34;&gt;Gatebox&lt;/a&gt;は好きなキャラクターと一緒に暮らせる世界初のバーチャルホームロボットです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/2-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;写真の通り、2次元のキャラクターがパーソナルアシスタントをしてくれるロボットです。
ロックマンエグゼのPETのイメージですね（分かる人いるかな&amp;hellip;）&lt;/p&gt;

&lt;p&gt;iOSのSiriにビジュアルが付いたものをイメージすると良いかもしれません。&lt;/p&gt;

&lt;p&gt;CF映画を彷彿させますね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/2-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Gateboxは2017年3月に&lt;a href=&#34;http://japanese.engadget.com/2017/03/02/line-gatebox-ai/&#34;&gt;LINEと資本提携&lt;/a&gt;をしてClovaとの連携が期待されています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;発表はGatebox代表の武地さん。&lt;/p&gt;

&lt;p&gt;「AIやスマートスピーカーが話題になってきているけど人間が話しかけたくなるインターフェイスになっていない」、「実際に話しかけたくなるものを作りたい」という想いで
&lt;strong&gt;人間と同じようにキャラクターと生活できる世界&lt;/strong&gt;を目指してGateboxを開発しているそうです。&lt;/p&gt;

&lt;h2 id=&#34;gateboxとclova&#34;&gt;GateboxとClova&lt;/h2&gt;

&lt;p&gt;世の中のスマートスピーカーはクラウド上のAIなどが処理を行って言葉を返すけれど、Gateboxは性質上、ハードウェア側がリッチである必要があります。&lt;/p&gt;

&lt;p&gt;Gatebox側では見た目のリッチさ、キャラクターの動きなどユーザーと触れる部分の見た目、振る舞いに注力しているのが他のスピーカーデバイスなどとの大きな違いです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;逆にLINEのClovaはクラウド側やAIの仕組みに注力しているので、お互いの得意分野を生かしてより人間味のある仕組みを検討していくとのことです。&lt;/p&gt;

&lt;p&gt;確かに現状のそういったデバイスはどうにも機械的なものが多いので、インターフェイスが自分好みのキャラクターになれば、&lt;strong&gt;話しかけたくなるAI&lt;/strong&gt;ができますね。&lt;/p&gt;

&lt;h2 id=&#34;gateboxの技術話が初公開&#34;&gt;Gateboxの技術話が初公開&lt;/h2&gt;

&lt;p&gt;今回、話を聞けてよかったなぁと特に思ったのがここです。&lt;/p&gt;

&lt;p&gt;ここからは久森さんに交代です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/5-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gateboxの技術的な話を対外的にするのは今回が初めて&lt;/strong&gt;だそうです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/5-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;大きく分けるとこれが構成要素になるようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;プロジェクション&lt;/li&gt;
&lt;li&gt;音声発話&lt;/li&gt;
&lt;li&gt;センシング（人感センサやカメラ、マイクなど）&lt;/li&gt;
&lt;li&gt;ネットワーク（Wi-Fi、Bluetooth）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ハードウェア的な部分では中身の基盤部分も紹介してくれました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/5-3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;また、内部ではLinuxが動いていて、そこに色々なソフトウェアが動いています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/5-4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unity: キャラクターのアクションなど&lt;/li&gt;
&lt;li&gt;Node.js: 音声認識、センサーとのやりとり、司令塔的なポジション&lt;/li&gt;
&lt;li&gt;C++: 顔認識のライブラリなどとの通信&lt;/li&gt;
&lt;li&gt;SQLite: 顔を覚えたり、発話を記憶させたり&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、クラウド側で連動しているサービスの紹介です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/5-5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;クラウド側でもNode.jsを中心にAPIを呼び出しています。
フルスクラッチで作るよりも、PaaSやBaaS系のサービスに乗せることでサービスの本質的な機能に集中して開発を進めているらしく、スタートアップのお手本のような開発だなぁと思いました。&lt;/p&gt;

&lt;p&gt;例えば、メールを送る部分はSendGridで、それをAzureなどのPaaSから呼び出したりしているそうです。&lt;/p&gt;

&lt;h3 id=&#34;node-jsをメインで採用している理由&#34;&gt;Node.jsをメインで採用している理由&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;個人的にはC++などではなく中心にNode.jsが利用されていることが驚きでした。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;僕はNode.js大好きなんですけど、実際のハードウェアプロダクトの中でNode.jsが動いているという例をあまり聞いたことがなかったので、パフォーマンス面や安定稼働とかの側面に不安は無いのかなど気になりすぎました。。。笑&lt;/p&gt;

&lt;p&gt;気になったのでセッション後のAsk the Speakerのコーナーで聞きましたが、開発スタート時にNode.jsを使えるエンジニアが多く、開発スピードを優先して選んだそうです。&lt;/p&gt;

&lt;p&gt;確かに内部のソフトウェアではNode.jsからシリアルの値を呼び出して、サーバー側でもNode.jsを動かしてと開発効率はバツグンにいいですし、チームの規模感や文化を優先する選択はさすがだと思いました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/5-6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;現状は339台作っているそうですが、今後量産体制に入っていくときのアーキテクチャ検討が課題だそうです。&lt;/p&gt;

&lt;p&gt;サーバー側のアクセス数も増えていき、ユーザーの予期せぬ使い方なども増えていくため、安定稼働やスケールの仕組みを考える必要がありそうですね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/128/6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;けっこう込み入った話も気軽に答えてくれてGateboxの皆さんの暖かさを感じました。&lt;/p&gt;

&lt;p&gt;ありがとうございました！&lt;/p&gt;

&lt;h2 id=&#34;最後に&#34;&gt;最後に&lt;/h2&gt;

&lt;p&gt;ClovaもGateboxはすごく未来を感じさせてくれるプロダクトなので、それらの組み合わせは本当に期待ですね。&lt;/p&gt;

&lt;p&gt;APIやSDKが提供され始めたらぜひ使ってみたいです。&lt;/p&gt;

&lt;p&gt;まだLINE DEVELOPER DAYは続いてますが面白いセッションが多いので、ツイートを　#linedevdayのハッシュタグで振り返ると面白いですよ。&lt;/p&gt;

&lt;p&gt;それでは、現場からは以上です :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【報告】青山学院大学で4日間集中IoT講習を行いました</title>
      <link>https://dotstud.io/blog/aogaku-iot-summer-report/</link>
      <pubDate>Tue, 26 Sep 2017 19:31:51 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/aogaku-iot-summer-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、ちゃちゃまるです。
&lt;a href=&#34;https://dotstud.io/blog/aogaku-iot-course-report/&#34;&gt;前回の体験講習会&lt;/a&gt;に引き続き、青山学院大学でIoT講習会を行ったので、その様子をお伝えしたいと思います！&lt;/p&gt;

&lt;h2 id=&#34;テーマは-宅配便の不在通知を自分のlineに送る&#34;&gt;テーマは「宅配便の不在通知を自分のLINEに送る」&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.aim.aoyama.ac.jp/info/lect/7141/&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/124/title.png&#34; alt=&#34;title.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IoT講習会は3時間 x 4日間で実施しました。「IoT」「電子工作」「プログラミング」の基礎知識を固めながら「宅配便の不在通知を自分のLINEに送る」仕組みを作るのが目標です。&lt;/p&gt;

&lt;p&gt;まずは座学で「IoT」の定義や概要を学んでアイデアを実現する方法を探り、その後は実際にセンサを使ったりLINE通知を送るプログラムを作ったりしながら実装を学んでいきます。&lt;/p&gt;

&lt;h2 id=&#34;1日目-基礎知識を身につける&#34;&gt;1日目：基礎知識を身につける&lt;/h2&gt;

&lt;p&gt;講座の序章として、まずは座学で基礎を学習していきます。
&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/124/iot.png&#34; alt=&#34;iot.png&#34; /&gt;
世界各国の事例 - 画像は「ゴミの量を計測して収集を最適化する街」の例。
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;IoTの定義や概要、世界各国のIoT事例を紹介し、IoTへの理解を深めます。電子工作、プログラミング、開発環境の構築についても学び、1日目はNode.jsの環境を作成して実行するところまでトライしました。&lt;/p&gt;

&lt;h2 id=&#34;2日目-電子工作にトライ&#34;&gt;2日目：電子工作にトライ&lt;/h2&gt;

&lt;p&gt;続いて2日目からは、「不在通知を受け取ったことの取得」と「LINE通知」の実装に必要な仕組みを実際に作りながら学んでいきます。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/124/overview.png&#34; alt=&#34;overview.png&#34; /&gt;
実装の構成を説明
&lt;/center&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;音のデータを取得する&lt;/li&gt;
&lt;li&gt;取得したデータをWi-Fi通信でサーバに送る&lt;/li&gt;
&lt;li&gt;サーバにデータが送られたらLINEで通知する&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といったように、機能ごとに分けてトライしていきます。&lt;/p&gt;

&lt;h3 id=&#34;使用したのはwionodeとarduino-uno&#34;&gt;使用したのはWioNodeとArduino UNO&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/124/device2.png&#34; alt=&#34;device2.png&#34; /&gt;
今回使用したデバイスの一部
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;今回は「Arduino UNO」という入門向きのデバイスに、「Grove」というコネクタの拡張シールドを取り付け実装してみます。Wi-Fi接続には、こちらもGroveで配線できるWioNodeを利用。難しい配線やプログラミングを行わずとも自作IoTデバイスを作ることができます。&lt;/p&gt;

&lt;p&gt;Arduino UNOを使った簡単なプログラムから始め、ステップバイステップで学んでいきます。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/124/device.png&#34; alt=&#34;device.png&#34; /&gt;
Arduino UNOでLチカ（初歩的なプログラム）を試している様子
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;今回は上記の入門向きなデバイスやセンサ、パーツ類をセットにしたキットを用意しました。
&lt;img src=&#34;https://dotstud.io/img/blog/124/kit.png&#34; alt=&#34;kit.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arduino UNO&lt;/strong&gt;・・・専用ソフトウェアを使い、簡単にプログラムを書き込むことができるマイコンボード&lt;br /&gt;
&lt;strong&gt;Grove&lt;/strong&gt;・・・Seeed社が作ったセンサ等を繋げるコネクタ規格。様々なセンサとの配線部分を規格化することで難しい配線が不要に&lt;br /&gt;
&lt;strong&gt;Groveベースシールド&lt;/strong&gt;・・・Arduino UNOに取り付けることで、Groveコネクタを使えるようにする基盤&lt;br /&gt;
&lt;strong&gt;WioNode&lt;/strong&gt;・・・専用スマホアプリのみで設定ができるGrove対応マイコンボード&lt;/p&gt;

&lt;h2 id=&#34;3日目-デバイスを使ってiotを体感する&#34;&gt;3日目：デバイスを使ってIoTを体感する&lt;/h2&gt;

&lt;p&gt;3日目は実際にデバイスを使って人の動きや音を感知するセンサのデータを取得し、LINEやブラウザで確認してIoTを肌で体験してもらいました。&lt;/p&gt;

&lt;p&gt;Arduinoへのプログラムの書き込みやNode.jsを使ったサーバ構築に少し苦戦する学生もいましたが、徐々に慣れ参加者全員がデバイスの使い方とプログラミングの基本をマスターすることができました。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/124/jinkan.png&#34; alt=&#34;jinkan.png&#34; /&gt;
手元の照度センサが光を検知するとブラウザ上のLEDが光るプログラムを試している様子
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/124/teach2.png&#34; alt=&#34;teach2.png&#34; /&gt;
講師をつとめたちゃちゃまると参加してくれた学生さん。一様に真剣に取り組んでくれました。
&lt;/center&gt;&lt;/p&gt;

&lt;h3 id=&#34;柔軟なアイデアが飛び出した-不在通知を取得する方法&#34;&gt;柔軟なアイデアが飛び出した「不在通知を取得する方法」&lt;/h3&gt;

&lt;p&gt;基本を学んだあとはグループに分かれ、どうやったら「不在通知を受け取ったこと」がわかるかアイデアを出し合いました。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/124/idea.png&#34; alt=&#34;idea.png&#34; /&gt;
考えたアイデアを発表して共有
&lt;/center&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ポストが開けられた時の光の変化を取得する&lt;/li&gt;
&lt;li&gt;不在の場合は2回インターホンを押してもらう&lt;/li&gt;
&lt;li&gt;配達のトラックの音を機械学習で判定する&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;など、独創的なアイデアがたくさん飛び出しました。&lt;/p&gt;

&lt;p&gt;一緒に参加していただいていた根本先生、槌屋先生から「夜で照度の違いがない場合はどうするか」「車じゃなかった場合はどうか」などのフィードバックをいただきましたが、&lt;strong&gt;自分で出したアイデアだからこそIoTの課題が身近に見えてくる&lt;/strong&gt;ように感じました！&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/124/award.png&#34; alt=&#34;award.png&#34; /&gt;
優秀チームに先生方から授賞式！
&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;4日目-iotの課題や精度を考える&#34;&gt;4日目：IoTの課題や精度を考える&lt;/h2&gt;

&lt;p&gt;全ての機能の実装とデプロイが完了したあとは、発展として「不在通知を受け取ったこと」を取得する際の精度について考えてみました。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/124/data.png&#34; alt=&#34;data.png&#34; /&gt;
音センサを使った場合の閾値について
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;IoTデバイスは、昼・夜、静かな場所・うるさい場所など様々な環境で使われることが想定されます。今回は環境に順応できる相対的なデータを利用した実装方法を学びました。&lt;/p&gt;

&lt;p&gt;追加課題として出したArduinoの発展的なプログラムを解いてきてくれた学生さんもいて、今後につながる学習ができたのではないかと思います。&lt;/p&gt;

&lt;h2 id=&#34;文系でもiot&#34;&gt;文系でもIoT！？&lt;/h2&gt;

&lt;p&gt;参加してくれた学生さんのほとんどが文系で、今回の講習会で初めてプログラミングをしたという方もちらほら。
&lt;img src=&#34;https://dotstud.io/img/blog/124/teach.png&#34; alt=&#34;teach.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ArduinoやGroveなどの登場で、もはや専門知識ゼロでもIoTの仕組みを作ることができてしまう時代です。&lt;/p&gt;

&lt;h2 id=&#34;まとめと感想&#34;&gt;まとめと感想&lt;/h2&gt;

&lt;p&gt;四日間を通して、ほぼ全ての工程でスムーズに講習会を行うことができ、最後には無事参加してくれた全員がカリキュラムを完了することができました。&lt;/p&gt;

&lt;p&gt;想定していたペースよりかなり早く進めることができ、学生さんたちの知識の吸収力・応用力に僕たちも驚きました！
&lt;img src=&#34;https://dotstud.io/img/blog/124/all.png&#34; alt=&#34;all.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;弊社dotstudioでは、このような形で大学や企業でのIoT研修を行っております。ご興味のある方は是非弊社までお問い合わせください。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Node.jsとNefry BTで監視システムを作ろう！ for Pepper #iotlt</title>
      <link>https://dotstud.io/blog/nefrybt-pepper-monitoring-system/</link>
      <pubDate>Thu, 21 Sep 2017 18:40:38 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/nefrybt-pepper-monitoring-system/</guid>
      
      <description>

&lt;p&gt;こんにちは、のびすけです。&lt;/p&gt;

&lt;p&gt;IoTLT vol31で話をしたNefry BT（ESP32系ボード）を使ってネットワークカメラを作ってみたいと思います。&lt;/p&gt;

&lt;p&gt;発表資料もご参照ください。&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;a4d673e00b57428ebe22543efda38f6f&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://speakerdeck.com/n0bisuke/pepperlian-xi-falsejian-shi-sisutemu-number-iotlt&#34;&gt;Pepper連携の監視システム? #iotlt by n0bisuke&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://dotstudio.connpass.com/event/61189/&#34;&gt;Nefry BTのハンズオン&lt;/a&gt;も開催しますので合わせてご覧ください。&lt;/p&gt;

&lt;h2 id=&#34;やりたいこと&#34;&gt;やりたいこと&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Pepperを監視したい。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;謎ですが、Pepperを監視したいです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://iotlt.connpass.com/event/65379/&#34;&gt;IoTLT vol31&lt;/a&gt;で話をした内容ですが、Pepperが動いてくれないので、Pepperがいつ動き出しても大丈夫なように&lt;strong&gt;Pepperを見守り&lt;/strong&gt;します。&lt;/p&gt;

&lt;p&gt;巷では「Pepperが見守り」だったり、「Pepperが防犯」みたいな先進的な取り組みがありますが、僕は&lt;strong&gt;あえてPepperを見守ります。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;完成イメージ&#34;&gt;完成イメージ&lt;/h2&gt;

&lt;p&gt;こんな感じで見守ります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/c3fa7c7bb7dbdd5bba505e7a3de3b54b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;そして、外からでもブラウザでPepperを見守るストリーミングサービスっぽいものを作ります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/09e912583e26710a13f0d49f4a866b55.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;使うもの&#34;&gt;使うもの&lt;/h2&gt;

&lt;p&gt;デバイスはNefry BTとGroveカメラの二つです。
（ちょっとジャンパワイヤ使います。）&lt;/p&gt;

&lt;h3 id=&#34;nefry-bt&#34;&gt;Nefry BT&lt;/h3&gt;

&lt;p&gt;ESP32ベースのArduino互換開発ボードです。
&lt;a href=&#34;http://sengoku.co.jp/mod/sgk_cart/detail.php?code=EEHD-55W8&#34;&gt;千石電商さん&lt;/a&gt;でも購入できます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/d43d9926b0e5293b1045890bdd7fbc6c.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;grove-シリアルカメラキット&#34;&gt;Grove シリアルカメラキット&lt;/h3&gt;

&lt;p&gt;Grove対応のカメラです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.switch-science.com/catalog/1626/&#34;&gt;スイッチサイエンスさん&lt;/a&gt;などで購入できます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/99ad24d2ffcfd62c8407d7db7fb753c5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;構成イメージ&#34;&gt;構成イメージ&lt;/h2&gt;

&lt;p&gt;カメラで撮影した画像をNefry BT経由でサーバーにアップロードします。
アップロードされた画像はNode.jsで立てたサーバーで受け取り、WebSocket(Socket.io)でブラウザに配信します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/bfdd4f3e37898144268c2edd086320dc.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;作り方&#34;&gt;作り方&lt;/h2&gt;

&lt;p&gt;3つに分けて紹介します。&lt;/p&gt;

&lt;p&gt;デバイス（Nefry BT）で撮影した画像をサーバーに送りサーバーからブラウザに配信します。&lt;/p&gt;

&lt;p&gt;データの流れ的に&lt;code&gt;デバイス -&amp;gt; サーバー -&amp;gt; ブラウザ&lt;/code&gt;という流れです。&lt;/p&gt;

&lt;p&gt;全体のコードは&lt;a href=&#34;https://github.com/dotstudio/nefrybt_camera_server&#34;&gt;こちらのGitHubリポジトリ&lt;/a&gt;にあります。&lt;/p&gt;

&lt;h3 id=&#34;デバイス側-arduino&#34;&gt;デバイス側 - Arduino&lt;/h3&gt;

&lt;p&gt;デバイス側は&lt;a href=&#34;http://wiki.seeed.cc/Grove-Serial_Camera_Kit/&#34;&gt;Grove - Serial Camera Kitの公式Wiki&lt;/a&gt;にあるサンプルコードをもとに作っています。&lt;/p&gt;

&lt;p&gt;dotstudioの&lt;a href=&#34;https://dotstud.io/members/ukkz/&#34;&gt;ものづくりアーティストうこ&lt;/a&gt;さんがメインで作ってくれました。&lt;/p&gt;

&lt;p&gt;少し長いので&lt;a href=&#34;https://github.com/dotstudio/nefrybt_camera_server/blob/master/nefry/nefrybt_grove_camera/nefrybt_grove_camera.ino&#34;&gt;GitHubのリポジトリ&lt;/a&gt;を参照しましょう。&lt;/p&gt;

&lt;p&gt;このプログラムをNefry BTに書き込みましょう。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;host&lt;/code&gt;の箇所に画像アップロード先のサーバーを指定します。&lt;/p&gt;

&lt;h4 id=&#34;配線&#34;&gt;配線&lt;/h4&gt;

&lt;p&gt;配線はD3,D4に繋ぎます。&lt;/p&gt;

&lt;p&gt;プログラム的には&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#define SEREAL_RX 19 //Nefry BT D3
#define SEREAL_TX 18 //Nefry BT D4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;の部分が該当します。NefryBTの&lt;a href=&#34;https://drive.google.com/file/d/0B_mvDQF8yaQRLVprUHl4WTFLWVE/view&#34;&gt;仕様書&lt;/a&gt;を見ると分かりますが、ESP32のGPIO 19番がNefryBTのD3にあたり、18番がD4になります。&lt;/p&gt;

&lt;h3 id=&#34;サーバー側-node-js&#34;&gt;サーバー側 - Node.js&lt;/h3&gt;

&lt;p&gt;Node.jsで画像を受信するサーバーを作ります。&lt;/p&gt;

&lt;p&gt;無難にSocket.ioとexpressを使います。 Node.jsのバージョンは8.4です。
7系以前だと動かない可能性があります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm i --save socket.io express
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;//server.js
&#39;use strict&#39;;

const fs = require(&#39;fs&#39;);
const app = require(&#39;express&#39;)();
const http = require(&#39;http&#39;).Server(app);
const io = require(&#39;socket.io&#39;)(http);
const express = require(&#39;express&#39;);
const PORT = process.env.PORT || 3000;
app.use(express.static(__dirname));

const {promisify} = require(&#39;util&#39;);
const writeFileAsync = promisify(fs.writeFile);

io.on(&#39;connection&#39;, (socket) =&amp;gt; console.log(&#39;a user connected&#39;)); //socket.ioのコネクション

app.get(&#39;/&#39;, (req, res) =&amp;gt; res.sendFile(&#39;./index.thml&#39;));
app.post(&#39;/&#39;, (req, res) =&amp;gt; {
    let buffers = [];
    let cur = 0;
    const len = parseInt(req.headers[&#39;content-length&#39;], 10);

    req.on(&#39;data&#39;, (chunk) =&amp;gt; {
        buffers.push(chunk);
        cur += chunk.length;
        console.log(`Downloading...${(100.0 * cur / len).toFixed(2)}%`);
    });

    req.on(&#39;end&#39;, async () =&amp;gt; {
        console.log(`\n[done] Image upload`);
        req.rawBody = Buffer.concat(buffers);
        const base64image = req.rawBody.toString(&#39;base64&#39;); //base64変換
        await writeFileAsync(&#39;./img.jpeg&#39;, req.rawBody, &#39;utf-8&#39;)
        console.log(`[done] Image Save`);
        io.sockets.emit(&#39;new image&#39;,base64image); //画像送信
    });
    
});
 
http.listen(PORT, () =&amp;gt; console.log(`listening on *:${PORT}`));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通常Expressを使う際に&lt;a href=&#34;https://github.com/expressjs/body-parser&#34;&gt;body-parser&lt;/a&gt;をよく使いますが、今回はあえて使わずに、&lt;code&gt;dataイベント&lt;/code&gt;で&lt;code&gt;chunk&lt;/code&gt;を拾って画像アップロードのプログレス表示を実装しています。&lt;/p&gt;

&lt;p&gt;Nefry BTも含めてこういったマイコンボードはスマートフォンやPCに比べるとCPUパワーが弱いため、画像アップロードに時間がかかることがあります。&lt;/p&gt;

&lt;p&gt;サーバー側でどれくらいのデータ送信が完了しているのかの進捗が分かると安心して開発できます。
画像を受信したら&lt;code&gt;toString(&#39;base64&#39;)&lt;/code&gt;でBase64の文字列に変換をしています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;io.sockets.emit()&lt;/code&gt;の箇所では変換した文字列をSocket.io経由でブラウザに配信しています。&lt;/p&gt;

&lt;h3 id=&#34;ブラウザ側-javascript&#34;&gt;ブラウザ側 - JavaScript&lt;/h3&gt;

&lt;p&gt;ブラウザ側では、文字列で送られた画像データを受け取り、Canvasに流し込みます。
HTML側では&lt;code&gt;id=&amp;quot;myCanvas&amp;quot;&lt;/code&gt;のcanvasを作り、&lt;code&gt;socket.io&lt;/code&gt;の読み込みと以下で作る&lt;code&gt;app.js&lt;/code&gt;の読み込みをします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot; /&amp;gt;
    &amp;lt;title&amp;gt;Nefry BT Camera&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body style=&amp;quot;background-color:#D0D0D0;&amp;quot;&amp;gt;
    &amp;lt;canvas id=&amp;quot;myCanvas&amp;quot; width=&amp;quot;640&amp;quot; height=&amp;quot;480&amp;quot; style=&amp;quot;background-color:#FFFFFF;&amp;quot;&amp;gt;&amp;lt;/canvas&amp;gt;
    &amp;lt;script src=&amp;quot;/socket.io/socket.io.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;/public/app.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;draw()&lt;/code&gt;では、canvasに&lt;code&gt;drawImage()&lt;/code&gt;で画像を描画します。
Base64の場合はsrcが画像パスではなく&lt;code&gt;data:image/jpeg;base64,~~~~~&lt;/code&gt;という指定方法です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// /public/app.js
&#39;use strict&#39;;

const socket = io();

const draw = (imageData = &#39;&#39;) =&amp;gt; {
    const canvas = document.getElementById(&#39;myCanvas&#39;);
    const ctx = canvas.getContext(&#39;2d&#39;);
    const img = new Image();
    img.src = `data:image/jpeg;base64,${imageData}`; //基本base64の文字列
    if(imageData === &#39;init&#39;) img.src = `./img.jpeg`; //初期実行時のみサーバーのimg.jpegを取得
    img.onload = () =&amp;gt; {
        canvas.width = img.width;
        canvas.height = img.height;
        ctx.drawImage(img, 0, 0, 640, 480);
    }
    console.log(`update ${new Date()}`);
}

socket.on(&#39;new image&#39;, draw); //画像更新時
draw(&#39;init&#39;); //初期実行
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;socket.on(&#39;new image&#39;, draw)&lt;/code&gt;でサーバーからデータが送られてくるたびに&lt;code&gt;draw()&lt;/code&gt;を実行します。&lt;/p&gt;

&lt;h2 id=&#34;使ってみた感想&#34;&gt;使ってみた感想&lt;/h2&gt;

&lt;p&gt;1週間ほど動かしていますが、問題なくずっと稼働写真を送り続けてくれるので意外と&lt;strong&gt;ラズパイなどで作るシステムより安定しているかも&lt;/strong&gt;しれません。&lt;/p&gt;

&lt;p&gt;あと、発表のオチだったのですが、Pepperの調子が悪く被写体が動かないので成功してるのか分かりにくいです苦笑&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/b2fb0a60f31c12e61e99b51d442dd563.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;Nefry BTとNode.jsを使ってネットワークカメラを作ることができました。&lt;/p&gt;

&lt;p&gt;GroveのカメラとNefry V2を使って過去に&lt;a href=&#34;https://am-our.com/love/110/13945/&#34;&gt;【大島薫×IoT】浮気男を社会的に制裁するマシーンを作ってみた&lt;/a&gt;こともありましたが、ネットワークカメラを作りたい需要はそこそこあると思うので、その際の参考になれば幸いです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【報告】セゾン情報システムズでIoT研修として体験会を行いました</title>
      <link>https://dotstud.io/blog/saison-iot-course-report/</link>
      <pubDate>Fri, 15 Sep 2017 14:52:26 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/saison-iot-course-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、ちゃちゃまるです。先日、セゾン情報システムズさんにてIoT体験会を開かせていただきました。&lt;/p&gt;

&lt;p&gt;当日の概要や雰囲気をレポートします！
&lt;img src=&#34;https://dotstud.io/img/blog/121/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;要望に沿ったカリキュラムを作成&#34;&gt;要望に沿ったカリキュラムを作成&lt;/h2&gt;

&lt;p&gt;今回のIoT体験会開催を進めてくださったのは、IoTLTでも良くお話をしてくださる松岡さん！事前に伺った「&lt;strong&gt;IoTの楽しさを社内に広めて、新しいことに挑むモチベーションを高めたい&lt;/strong&gt;」という要望に沿ってカリキュラムを作成しました。&lt;/p&gt;

&lt;p&gt;まずは兎にも角にも楽しんでもらうということで、マイコンボードとセンサーを使って色々な仕組みを作っていく体験会にしました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/121/2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;二時間のお手軽カリキュラム&#34;&gt;二時間のお手軽カリキュラム&lt;/h2&gt;

&lt;p&gt;最初30分は座学で、IoTの事例の紹介やWeb技術の話などをしました。&lt;/p&gt;

&lt;p&gt;その後は実際にマイコンボードとセンサーやLEDなどを使い、配線とプログラミングを実践しました。今回はとりあえずIoTに向け第一歩を、ということだったので、インターネットには繋げず電子工作のみのハンズオンとなっています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/121/3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;使用したのは-gravity&#34;&gt;使用したのは「Gravity」&lt;/h2&gt;

&lt;p&gt;今回使用したのはDFRobot社製の「Gravityシリーズ」。Gravityとはマイコンボードとセンサー等を繋ぐコネクタ規格で、これにより難しい配線知識無しで電子工作を行うことができます。
&lt;img src=&#34;https://dotstud.io/img/blog/121/gravity.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;電子工作やプログラミングが初めての方もいましたが、サポートをしつつ順調に進めることができました。
&lt;img src=&#34;https://dotstud.io/img/blog/121/4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;二時間と短い時間ではありましたが、全員が記事の最後まで到達することができました。余裕がある人向けに用意した追加課題もクリアした方もちらほら。楽しかったという声をたくさんいただけたので、何らかのモチベーションに繋がっていれば幸いです。&lt;/p&gt;

&lt;p&gt;弊社ではこのような研修を企業や大学に向けて行っています。ご興味のある方は、ぜひお問い合わせください！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>流通科学大学にて高校生向けIoT講習会を実施しました！</title>
      <link>https://dotstud.io/blog/ryuka-iot-handson-report/</link>
      <pubDate>Wed, 13 Sep 2017 14:55:22 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/ryuka-iot-handson-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、のびすけです。&lt;/p&gt;

&lt;p&gt;dotstudioではここ最近大学生や高校生向けにIoT講習会を実施していますが、&lt;strong&gt;今回は初の神戸&lt;/strong&gt;での開催でした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/668dd83eb46c3ed82dcf47c8a6d2a98d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;既に掲載されているレポートもあるのでご参照下さい！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.umds.ac.jp/news/2017/0824_01.html&#34;&gt;【高大連携事業】上田ゼミ　「LINE×IoT」をテーマにワークショップを実施&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/mayumiueda.lab/posts/3471027566252228&#34;&gt;上田ゼミレポート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;流通科学大学&#34;&gt;流通科学大学&lt;/h2&gt;

&lt;p&gt;兵庫県神戸市西区に本部を置く私立大学です。大学の略称は流科大、流通科学、RYUKA、UMDSなどがあるようです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/1ef21a086ccf64a78ee0b40f5ed18015.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ダイエーグループ創始者が設立した大学で、学内にはダイエーホークス（現ソフトバンクホークス）の王貞治さんのユニホームが飾ってあったのが印象的でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.umds.ac.jp/&#34;&gt;流通科学大学公式HP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E6%B5%81%E9%80%9A%E7%A7%91%E5%AD%A6%E5%A4%A7%E5%AD%A6&#34;&gt;流通科学大学Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;高大連携の一環として高校生向けに講習を実施&#34;&gt;高大連携の一環として高校生向けに講習を実施&lt;/h2&gt;

&lt;p&gt;大学ではオープンキャンパスなどを実施して、高校生向けに大学の紹介をしたりしますが、似たような文脈で流通科学大学では大学での取り組みを高校生向けに体験させる高大連携という取り組みを行なっています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/327c8954b0e6050860f8bd09764fcf64.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;この日、流通科学大学に来たのは&lt;a href=&#34;http://www.hyogo-c.ed.jp/~hikami-hs/&#34;&gt;兵庫県立氷上高等学校&lt;/a&gt;の学生さんたちです。&lt;/p&gt;

&lt;p&gt;今回は僕が大学時代から大変お世話になっている&lt;a href=&#34;https://www.facebook.com/mayumiueda.lab/&#34;&gt;上田先生&lt;/a&gt;にお声がけ頂き、開催することができました。&lt;/p&gt;

&lt;h2 id=&#34;wionode-line-bot&#34;&gt;WioNode + LINE BOT&lt;/h2&gt;

&lt;p&gt;内容は&lt;a href=&#34;http://www.aim.aoyama.ac.jp/info/lect/6889/?cat=18&#34;&gt;青山学院大学で実施した内容&lt;/a&gt;と同様でWioNodeとLINE BOTを使ったワークショップです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/fca6cefaa997d7f97515d2efcfbf02e9.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;始めて触る機器たちに高校生たちは戸惑いながらも、上田先生やゼミの学生さん（大学生）がサポートしてくれてスムーズに進めることができました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/ba47706bb7a75016572f0902ee699ccf.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;前半のIoT概論的な座学は学生さんの反応が薄くて戸惑いましたが、ハンズオンに入ってからはすごく反応がよく、LINEでセンサーの測定結果が届くと高校生から「凄い！面白い！」といった声が上がりました。&lt;/p&gt;

&lt;p&gt;やはりLINEをやっている人は100%で、FacebookやTwitterと比べて若年層の普及率が圧倒的でした。高校生や大学生向けにはしばらくはLINEが使えるなと再認識です。&lt;/p&gt;

&lt;h2 id=&#34;アイディアワークショップ&#34;&gt;アイディアワークショップ&lt;/h2&gt;

&lt;p&gt;最後に今回体験した内容をもとにアイディアワークショップ。&lt;/p&gt;

&lt;p&gt;今回のテーマは上田先生から提示して頂いた &lt;strong&gt;「お年寄りを助ける」&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;3人人組みでディスカッションしてお年寄りの課題をIoTでどう解決できるかを考えます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/80f77bc1abd75471d0c7ab798a36f77d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;最後に全チームから発表してもらい、表彰までを行いました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.gyazo.com/d87d47fa6d6f00f1365e45d2c0315a05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;色々なアイディアが出たのですが、個人的には枕にセンサーを仕込んで寝相などで健康管理や見守りを行う&lt;strong&gt;IoT枕&lt;/strong&gt;が好きでした。&lt;/p&gt;

&lt;p&gt;他の機会でもこういったワークショップはやるのですが、アンケートを取るとアイディアワークショップが特に楽しいという意見が多く、&lt;strong&gt;ハンズオンで手を動かすだけよりも自分たちで考える時間を取る&lt;/strong&gt;ことも重要だなと思っています。&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/sugawara.ryousuke/posts/1645855885449406&#34;&gt;こんな感じ&lt;/a&gt;で高校生向けに講習会を実施してきました。&lt;/p&gt;

&lt;p&gt;普段は関東圏でしか活動できてないので西側での活動ももっと増やしていきたいですね。&lt;/p&gt;

&lt;p&gt;dotstudioでは教育機関や企業向けのIoT研修、講習などを実施していますので、気になる方がいたら是非お問い合わせください！&lt;/p&gt;

&lt;p&gt;こちらも合わせて見ていただけると幸いです。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://dotstud.io/blog/aogaku-iot-course-report/&#34;&gt;【報告】青山学院大学でIoT体験講習会を開催しました。&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;それでは！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【検証】光るまつげ！？クラブで目立つこと間違いなしのLEDまつげを試してみた</title>
      <link>https://dotstud.io/blog/led-eyelash-gadget-report/</link>
      <pubDate>Mon, 11 Sep 2017 20:00:37 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/led-eyelash-gadget-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、バックエンドエンジニアのちゃんとくです。突然ですが、&lt;strong&gt;もっと光りたいなって思いませんか？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;私は思います。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;なぜなら、ギャル電先輩が「&lt;strong&gt;とりま光っとけばモテる&lt;/strong&gt;」って言ってたから。&lt;/p&gt;

&lt;p&gt;そんな折に秋葉原のとあるお店でうってつけなものを見つけました。
&lt;img src=&#34;https://dotstud.io/img/blog/126/box1.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;&lt;font size=&#34;4&#34;&gt;その名も「LEDまつげ（ピンク）」！！！&lt;/font&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;かなり斬新！パッと見た感じ、&lt;strong&gt;どういう仕組みになっているのか全然わかりません&lt;/strong&gt;！&lt;/p&gt;

&lt;p&gt;もし&lt;strong&gt;イメージ通りオシャレにまつげを光らせる&lt;/strong&gt;ことができれば、クラブでモテること間違いなしです！&lt;/p&gt;

&lt;p&gt;実際に使えるかどうか、普段からつけまつげを愛用しているちゃんとくがレポートしてみたいと思います！&lt;/p&gt;

&lt;h2 id=&#34;開封の儀&#34;&gt;開封の儀&lt;/h2&gt;

&lt;p&gt;さっそく中身を確認していきましょう！&lt;/p&gt;

&lt;p&gt;箱を開けると、電池BOXと一体になったLEDテープとクリップが入っています。
&lt;img src=&#34;https://dotstud.io/img/blog/126/box2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;電池BOX内にはリチウム電池が二つ。気合いで交換できそう。
&lt;img src=&#34;https://dotstud.io/img/blog/126/box6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;LED部分。&lt;font size=&#34;3&#34;&gt;&lt;strong&gt;なんか思ってたんと違う。&lt;/strong&gt;&lt;/font&gt;パッケージのようなまつげ感はゼロです。
&lt;img src=&#34;https://dotstud.io/img/blog/126/box3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;このままマブタに貼り付けるわけにはいかないので、手持ちのつけまつげと合体させてみました。
&lt;img src=&#34;https://dotstud.io/img/blog/126/box4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;とりあえず光らせてみる。
&lt;img src=&#34;https://dotstud.io/img/blog/126/box5.png&#34; alt=&#34;&#34; /&gt;
&lt;strong&gt;おお、イメージに近づいた！&lt;/strong&gt; これでまぶたにくっつけられそうです！&lt;/p&gt;

&lt;h2 id=&#34;装着してみる&#34;&gt;装着してみる&lt;/h2&gt;

&lt;p&gt;いよいよ装着！普通のつけまつげを着けるときのように、一通り化粧しておきましょう。&lt;/p&gt;

&lt;p&gt;クリップで電池BOXを髪の毛に止めます。うまくやれば隠せそう。
&lt;img src=&#34;https://dotstud.io/img/blog/126/face2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;通常のつけまつげのようにキワの部分にのりづけして付けていきます。
&lt;img src=&#34;https://dotstud.io/img/blog/126/face3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;おりゃっ！
&lt;img src=&#34;https://dotstud.io/img/blog/126/face4.png&#34; alt=&#34;&#34; /&gt;
&lt;strong&gt;LEDテープが固い&lt;/strong&gt;ので、形が決まっていてちょっとつけづらい……。しっかり乾くまで長めに抑えました。&lt;/p&gt;

&lt;p&gt;両方装着。明るいところだとテープがめっちゃ目立つけど、暗いところだと割といい感じ。
&lt;img src=&#34;https://dotstud.io/img/blog/126/face5.png&#34; alt=&#34;&#34; /&gt;
うまくまつげを上向きにできればあんまり違和感はありません。&lt;/p&gt;

&lt;p&gt;いよいよ、光らせてみます！！&lt;/p&gt;

&lt;h2 id=&#34;ピカらせてみる&#34;&gt;ピカらせてみる&lt;/h2&gt;

&lt;p&gt;スイッチオン！！
&lt;img src=&#34;https://dotstud.io/img/blog/126/led1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;font size=&#34;6&#34;&gt;えっ……怖っ…………&lt;/font&gt;&lt;/center&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;ドアップで見ると得も言われぬ感じですが、ほどほどに離れて見ればまあまあ大丈夫です。
&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/126/led2.png&#34; alt=&#34;&#34; /&gt;
あまりのシュールさに思わず笑みがこぼれる
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;電池BOXのスイッチで光り方を切り替えられます。（手動で切り替えています）
&lt;img src=&#34;https://i.gyazo.com/287b53d0c718f2f867321827303cd2e5.gif&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;&lt;font size=&#34;4&#34;&gt;ロ○ットレストランみたいだ！！！&lt;/font&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;実際に試してみた感想は以下のような感じです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;つけているときの違和感はあんまりない&lt;/li&gt;
&lt;li&gt;ちょっと眩しいかな？くらいだけど目のチカチカが尾を引く&lt;/li&gt;
&lt;li&gt;まつげののりが残る感は2倍増し&lt;/li&gt;
&lt;li&gt;（LED的な意味で）かなり盛れる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;検証のために30分ぐらいつけていましたが、特に違和感なく装着していることができました。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;目立つことは間違いなしなので気になる方はぜひ試してみてください！！！&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【報告】子供も大人も楽しめる！モノづくりの祭典「Maker Faire Tokyo2017」に出展してきました！</title>
      <link>https://dotstud.io/blog/maker-fair-tokyo-2017/</link>
      <pubDate>Mon, 11 Sep 2017 14:51:21 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/maker-fair-tokyo-2017/</guid>
      
      <description>

&lt;p&gt;こんにちは！バックエンドエンジニアのちゃんとくです。8月5日・6日に実施された&lt;strong&gt;モノづくりの祭典・Maker Faire Tokyo 2017&lt;/strong&gt;にdostudioで出展してきました！&lt;/p&gt;

&lt;p&gt;会場の雰囲気も交えつつ、当日の様子をレポートしたいと思います！&lt;/p&gt;

&lt;h2 id=&#34;maker-faire-tokyoとは&#34;&gt;Maker Faire Tokyoとは&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/120/mft1.png&#34; alt=&#34;&#34; /&gt;
雑誌「Make」を発端に、世界の190ヶ所以上で開催されているDIYイベント「Maker Faire」の東京版です！&lt;/p&gt;

&lt;p&gt;「モノづくり」のイベントとしてクラフト、工作から最新のガジェットまで550組もの出展者が2日間に渡って出展します。&lt;/p&gt;

&lt;p&gt;世界最大の電脳都市・&lt;a href=&#34;https://dotstud.io/blog/maker-faire-shenzhen-report/&#34;&gt;&lt;strong&gt;深センのMaker Faireの様子&lt;/strong&gt;&lt;/a&gt;や&lt;a href=&#34;https://dotstud.io/blog/uko-exhibited-at-mft2016/&#34;&gt;&lt;strong&gt;Maker Faire Tokyo 2016に出展した様子&lt;/strong&gt;&lt;/a&gt;も合わせてご覧ください！&lt;/p&gt;

&lt;h2 id=&#34;dotstudioとしてブースを出展&#34;&gt;dotstudioとしてブースを出展！&lt;/h2&gt;

&lt;p&gt;今年のMaker Faire Tokyoは、dotstudioとして初出展しました！&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/120/dotstudio_booth.png&#34; alt=&#34;&#34; /&gt;
dotstudioブースの様子。お陰さまで大盛況でした。
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;当日はdotstudioで開発しているAndroid開発者向けボード「&lt;a href=&#34;https://dotstud.io/shop/android-iot-board-waffle/&#34;&gt;&lt;strong&gt;Waffle&lt;/strong&gt;&lt;/a&gt;」やESP8266の乗ったWi-fiボード「&lt;a href=&#34;https://dotstud.io/shop/nefry-connect-internet/&#34;&gt;&lt;strong&gt;Nefry v2.0&lt;/strong&gt;&lt;/a&gt;」を展示・販売。&lt;/p&gt;

&lt;p&gt;さらに、かねてより開発中だったESP32ボード「&lt;a href=&#34;https://dotstud.io/shop/nefry-bt-single/&#34;&gt;&lt;strong&gt;Nefry BT&lt;/strong&gt;&lt;/a&gt;」の先行販売を行いました！&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/120/dotstudio_booth2.png&#34; alt=&#34;&#34; /&gt;
ブースではNefryシリーズ、Waffle、Wio Nodeなどを販売。
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;現在はWaffle・Nefryともにdotstudioのショップや千石電商さん、ツクモさん等で購入できますが、買ってくれる方の生の声を聞けるのはとても嬉しいですね。&lt;/p&gt;

&lt;p&gt;dotstudioで制作した「&lt;a href=&#34;https://dotstud.io/blog/gyaruden-hadeike-display-cap/&#34;&gt;IoT派手イケディスプレーキャップ&lt;/a&gt;」も展示し、ギャル電マオが登場するサプライズもありました！
&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/120/mft_cap.png&#34; alt=&#34;&#34; /&gt;
Maker Faire TokyoバージョンのIoT派手イケディスプレーキャップ。
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/120/mao_uko.png&#34; alt=&#34;&#34; /&gt;
ギャル電マオ×ギャル男uko
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;お声がけしてくださったみなさま、本当にありがとうございました！！&lt;/p&gt;

&lt;h2 id=&#34;変なモノからガチなモノまで今年も盛りだくさんだった&#34;&gt;変なモノからガチなモノまで今年も盛りだくさんだった&lt;/h2&gt;

&lt;p&gt;会場はとにかくたくさんのアイデアで溢れていて、どのブースも個性的な展示が盛りだくさんでした！&lt;/p&gt;

&lt;p&gt;実際に手を動かしてつくれるブースや、かわいい工作グッズを購入できるブースもあります。
&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/120/girls_booth.png&#34; alt=&#34;&#34; /&gt;
ちょっと未来なドレッサー（乙女電芸部）や、LEDを使ったアクセサリー、デコジャンパなど
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;子供が遊んで楽しめるおもちゃやプログラミングを学べるプロダクトも販売されていました。
&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/120/kids_booth.png&#34; alt=&#34;&#34; /&gt;
壁を走るライントレースロボ、楽しくプログラミングを学べるPETS、ストローを使った工作
&lt;/centr&gt;&lt;/p&gt;

&lt;p&gt;お祭りらしく、ブースを飛び越えた展示？も盛りだくさん。
&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/120/others.png&#34; alt=&#34;&#34; /&gt;
会場を飛び回るツル、リズムロボ？、ロボットに連れられた人？？
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;まだまだ紹介しきれませんが、たくさんの素敵な展示が行われていました！実際に体験できるブースも多く、大人も子供も新しい発見を楽しめること間違いなしです！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;2日間のイベントを通して、たくさんのアイデアや愛に溢れたプロダクトに出会うことができました。モノづくりをする側にとっても、作ったモノをたくさんの人に発表できる場があるのは素晴らしいことですね。&lt;/p&gt;

&lt;p&gt;最新技術に触れたい人、体験してみたい人、とにかく変なモノを見てみたい人、ぜひ来年のMaker Faire Tokyoも参加してみてください！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>日本上陸！littleBits cloudBitモジュールでIFTTT連携してみた！</title>
      <link>https://dotstud.io/blog/littlebits-cloudbit-ifttt-blink/</link>
      <pubDate>Tue, 22 Aug 2017 19:43:42 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/littlebits-cloudbit-ifttt-blink/</guid>
      
      <description>

&lt;p&gt;littleBits cloudBitモジュールの技適が通りまして、ついに日本でも使えることになったということで、早速littleBits cloudBitモジュールを購入してIFTTTと連携してみました。
&lt;img src=&#34;https://dotstud.io/img/blog/119/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;littlebits-cloudbitモジュールとは&#34;&gt;littleBits cloudBitモジュールとは&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/2.png&#34; alt=&#34;&#34; /&gt;
littleBits cloudBitモジュールは、磁石でつなげて簡単に電子工作ができる知育ブロックlittleBitsのモジュールのひとつ、littleBits Cloudが橋渡しとなってインターネットとやり取りできるモジュールです。&lt;/p&gt;

&lt;p&gt;詳しくはこちら → &lt;a href=&#34;https://littlebits.cc/cloudstart&#34;&gt;Getting Started with your CloudBit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/3.png&#34; alt=&#34;&#34; /&gt;
橋渡しとなるlittleBits Cloudは、スマートフォンやPCからWEBアクセスできる CLOUD CONTROL APP や、LITTLEBITS APIによってREST APIでさらに深いところまで操作できるプログラミングできるLITTLEBITS APIといった入り口があります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/4.png&#34; alt=&#34;&#34; /&gt;
今回ご紹介するのは、もうひとつ。ノンプログラミングでインターネットのいろいろなことに接続できる&lt;a href=&#34;https://ifttt.com/login&#34;&gt;IFTTT&lt;/a&gt;とlittleBitsの連携についてお伝えします。&lt;/p&gt;

&lt;p&gt;たとえば、littleBitsモジュールでボタンを押すとメールが送られたり、SNSでいいねが押されるとlittleBitsのLEDが反応するようなIoTの仕組みをさっと作ることができます。&lt;/p&gt;

&lt;h2 id=&#34;今回の仕組み&#34;&gt;今回の仕組み&lt;/h2&gt;

&lt;p&gt;今回の仕組みはGitHubでissueが上がるとBARGRAPH LEDが点灯する仕組みです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/5.png&#34; alt=&#34;&#34; /&gt;
ですが、ただBARGRAPH LEDが光るだけだと見落としてしまうので、100円ショップで買った光で動くソーラーゆらゆら（がいこつ）にLEDを照らして動かしてよりわかりやすくします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/6.png&#34; alt=&#34;&#34; /&gt;
このような仕組みです。&lt;/p&gt;

&lt;h2 id=&#34;準備&#34;&gt;準備&lt;/h2&gt;

&lt;h3 id=&#34;littlebitsの準備&#34;&gt;littleBitsの準備&lt;/h3&gt;

&lt;p&gt;セットアップについてはすでに行われているものとします。&lt;a href=&#34;http://www.1ft-seabass.jp/memo/2017/08/09/cloudbit-setup-step-memo/&#34;&gt;cloudBitモジュールのセットアップについてのメモ&lt;/a&gt;についてもご参考下さい。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/7.png&#34; alt=&#34;&#34; /&gt;
CLOUDBITパッケージに入っているものはcloudBitモジュール関連だけなので、別途写真のようにlittleBitから入力させるボタンモジュールや、出力を反応させるBARGRAPHモジュールは別途揃えておきましょう。また今回はソーラーゆらゆら（がいこつ）へうまくつなげるためにWIREモジュールも用意しておきます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CLOUDBITパッケージにあるもの

&lt;ul&gt;
&lt;li&gt;USB power adapter ケーブル&lt;/li&gt;
&lt;li&gt;USB POWER モジュール&lt;/li&gt;
&lt;li&gt;cloudBitモジュール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;別途必要なもの

&lt;ul&gt;
&lt;li&gt;ボタンモジュール&lt;/li&gt;
&lt;li&gt;BARGRAPHモジュール&lt;/li&gt;
&lt;li&gt;WIREモジュール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/8.png&#34; alt=&#34;&#34; /&gt;
ソーラーゆらゆらを準備します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/9.png&#34; alt=&#34;&#34; /&gt;
コンセントをつないだアダプターからUSBケーブルを差し込みます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/10.png&#34; alt=&#34;&#34; /&gt;
USB POWERモジュールにUSBケーブルをつなぎます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/11.png&#34; alt=&#34;&#34; /&gt;
USB POWERモジュール→ボタンモジュール→cloudBitモジュールまでつないで、接続されるまで待ちます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/12.png&#34; alt=&#34;&#34; /&gt;
つづいて、cloudBitモジュールの先にWIREモジュールとBARGRAPH LEDモジュールをつなぎます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/13.png&#34; alt=&#34;&#34; /&gt;
ソーラーゆらゆら（がいこつ）のソーラーパネル部分にガッとBARGRAPH LEDモジュールを当てます。マスキングテープで補強します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/14.png&#34; alt=&#34;&#34; /&gt;
これで準備完了です。&lt;/p&gt;

&lt;h3 id=&#34;cloud-control-appの準備&#34;&gt;CLOUD CONTROL APPの準備&lt;/h3&gt;

&lt;p&gt;cloudBitを管理している CLOUD CONTROL APP ページにログインしておきます。
&lt;img src=&#34;https://dotstud.io/img/blog/119/15.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/16.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/17.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;iftttの準備&#34;&gt;IFTTTの準備&lt;/h3&gt;

&lt;p&gt;IFTTTもlittleBitsとの関連付けを行うのでログインしておきます。
&lt;img src=&#34;https://dotstud.io/img/blog/119/18.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;こちらで準備完了です。&lt;/p&gt;

&lt;h2 id=&#34;littlebits-cloudbitモジュールとiftttの関連付け&#34;&gt;littleBits CloudBitモジュールとIFTTTの関連付け&lt;/h2&gt;

&lt;p&gt;さきほどログインしたCLOUD CONTROL APP ページでlittleBits CloudBitモジュールとIFTTTの関連付けを行います。
&lt;img src=&#34;https://dotstud.io/img/blog/119/19.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;下部のメニューでAUTOMATEを押します。
&lt;img src=&#34;https://dotstud.io/img/blog/119/20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;AUTOMATEページに遷移するとIFTTTとのアクティベートを促されるので GO TO IFTTT.COM ボタンを押します。
&lt;img src=&#34;https://dotstud.io/img/blog/119/21.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;IFTTTのlittleBitsチャンネルに遷移するので、CONNECTを押します。
&lt;img src=&#34;https://dotstud.io/img/blog/119/22.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;すでにIFTTTとCLOUD CONTROL APPがログインしてあるので、アクティベート確認ページに遷移します。AUTHORIZEボタンを押して認証します。
&lt;img src=&#34;https://dotstud.io/img/blog/119/23.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ログインが完了します。これで、IFTTTでlittleBitsと連携することができます。&lt;/p&gt;

&lt;h2 id=&#34;githubサービスのiftttでの認証をする&#34;&gt;GitHubサービスのIFTTTでの認証をする&lt;/h2&gt;

&lt;p&gt;GitHubでもIFTTTで使えるようにしておきましょう。上部のSearchからgithubを検索します。
&lt;img src=&#34;https://dotstud.io/img/blog/119/24.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Servicesに出てきたGitHubをクリックします。
&lt;img src=&#34;https://dotstud.io/img/blog/119/25.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;GitHubのページに移動するのでConnectボタンを押します。
&lt;img src=&#34;https://dotstud.io/img/blog/119/26.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;GitHubのAuthrize IFTTTページに移動します。
&lt;img src=&#34;https://dotstud.io/img/blog/119/27.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Authrize IFTTTCHannelsボタンを押して認証を済ませておきます。&lt;/p&gt;

&lt;h2 id=&#34;littlebitsのifttt連携の設定&#34;&gt;littleBitsのIFTTT連携の設定&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/28.png&#34; alt=&#34;&#34; /&gt;
右上にある自分のプロフィールメニューからNew Appletを選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/29.png&#34; alt=&#34;&#34; /&gt;
New Appletをつくる画面に行きます。thisボタンをクリックします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/30.png&#34; alt=&#34;&#34; /&gt;
Choose a serviceではgitと検索しGitHubをクリックします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/31.png&#34; alt=&#34;&#34; /&gt;
今回は自分にissueが来たときに動作するようにしたいので、Any new issueをクリックします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/32.png&#34; alt=&#34;&#34; /&gt;
つづいて動作のきっかけ this が作れたので、なにが起こるかの that を設定するため that ボタンを押します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/33.png&#34; alt=&#34;&#34; /&gt;
Choose action service画面になるので、littleBitsと検索し、littleBitsアクションをクリックします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/34.png&#34; alt=&#34;&#34; /&gt;
Choose action画面になるので、Set Output Levelをクリックします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/35.png&#34; alt=&#34;&#34; /&gt;
Complete action fields画面になるので以下のように設定します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Which cloudBit?

&lt;ul&gt;
&lt;li&gt;動かしたいcloudBit&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Level

&lt;ul&gt;
&lt;li&gt;100&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Duration

&lt;ul&gt;
&lt;li&gt;20 seconds&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/36.png&#34; alt=&#34;&#34; /&gt;
設定が終わったら、下の方のCreate Actionボタンを押します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/37.png&#34; alt=&#34;&#34; /&gt;
Review and finish画面に来るので、設定を確認します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/38.png&#34; alt=&#34;&#34; /&gt;
問題なければ、下の方のFinishボタンを押します。&lt;/p&gt;

&lt;p&gt;これで設定は完了です。&lt;/p&gt;

&lt;h2 id=&#34;動かしてみる&#34;&gt;動かしてみる&lt;/h2&gt;

&lt;p&gt;早速試しにissueをGitHubで作ってみましょう。
&lt;img src=&#34;https://dotstud.io/img/blog/119/39.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;今回は適当に作ってみます。
&lt;img src=&#34;https://dotstud.io/img/blog/119/40.png&#34; alt=&#34;&#34; /&gt;
issues発行します。&lt;/p&gt;

&lt;p&gt;多少タイムラグがあるので5～10秒ほど待ってみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/119/demo.gif&#34; alt=&#34;&#34; /&gt;
無事動きました！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;ということで、技適が通り日本上陸となった、littleBits cloudBitモジュールのIFTTT連携をお伝えしました。&lt;/p&gt;

&lt;p&gt;今回はIoTでも実装に手間がかかるインターネット上の反応をlittleBitsに降ろす仕組みを軸にお伝えしましたがIFTTTとlittleBits Cloudの連携は手軽に作れますね。IoTにおけるいろいろな技術要素が裏側でしっかり作られています。&lt;/p&gt;

&lt;p&gt;もちろん、IFTTTと連携するとAmazon Dash Buttonのような、ボタンを押すとツイートがされるようなlittleBitsからインターネットを動かす仕組みについても実現可能です。&lt;/p&gt;

&lt;p&gt;littleBitsの持つブロックを組み合わせて電子工作ができる手軽さに加えて、IFTTTが組み合わさることでインターネットもあたかもブロックのように扱えてるlittleBits cloudBitモジュール、ぜひ試してみてください！&lt;/p&gt;

&lt;p&gt;※今回の図表の一部では&lt;a href=&#34;http://icooon-mono.com/&#34;&gt;アイコン素材ダウンロードサイト「icooon-mono」&lt;/a&gt;さんの画像を利用いたしました。ありがとうございます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【報告】電通アドギアでIoT講座を実施しました！</title>
      <link>https://dotstud.io/blog/dentsu-iot-course-report/</link>
      <pubDate>Mon, 07 Aug 2017 18:04:43 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/dentsu-iot-course-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、ちゃちゃまるです。&lt;/p&gt;

&lt;p&gt;先日、株式会社電通アドギアで、弊社のIoT講座プログラムを実施させていただきました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/118/dentsu.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;研修の目的と概要&#34;&gt;研修の目的と概要&lt;/h2&gt;

&lt;p&gt;「IoTの事例や裏側の仕組みを理解し、提案に厚みを持たせる」を目的とし、プロデューサー・ディレクターの方計5名に実施しました。&lt;/p&gt;

&lt;p&gt;カリキュラムは以下の通りです。&lt;/p&gt;

&lt;h3 id=&#34;section-1-iot概論&#34;&gt;Section 1: IoT概論&lt;/h3&gt;

&lt;p&gt;「IoT」の言葉の定義、一般的なIoTシステムの構成&lt;/p&gt;

&lt;h3 id=&#34;section-2-webのこれまでとこれから&#34;&gt;Section 2: Webのこれまでとこれから&lt;/h3&gt;

&lt;p&gt;これまでのWeb技術の流れと、WoTやPhysicalWebに見るこれからの方向性など&lt;/p&gt;

&lt;h3 id=&#34;section-3-iot技術を使用したプロモーション事例の紹介&#34;&gt;Section 3: IoT技術を使用したプロモーション事例の紹介&lt;/h3&gt;

&lt;p&gt;特定の分野での日本国内外プロモーション事例（カンヌライオンズの例など）をリストアップし、裏側の仕組みと使われている技術、工数見積など&lt;/p&gt;

&lt;h3 id=&#34;section-4-wionodeで取得した値をline-botに飛ばす&#34;&gt;Section 4: WioNodeで取得した値をLINE botに飛ばす&lt;/h3&gt;

&lt;p&gt;プログラミング無しででインターネットにセンシングしたデータを上げることができるマイコンボード「WioNode」を使って、室内の温湿度をLINEで受け取る仕組みを作るワークショップ&lt;/p&gt;

&lt;h3 id=&#34;section-5-スピードアイディアソンで思考方法を鍛える&#34;&gt;Section 5: スピードアイディアソンで思考方法を鍛える&lt;/h3&gt;

&lt;p&gt;紹介した事例等を元に、どんなデータを取得できるか、そのデータはどのように活用できるか、を考える短時間アイディアソン&lt;/p&gt;

&lt;h2 id=&#34;まとめと感想&#34;&gt;まとめと感想&lt;/h2&gt;

&lt;p&gt;最終セクションのアイディアソンで出てきたアイディアの中には、スポーツ観戦の盛り上がりをタオルを回している観客の数で測定したり、外観や体型などから推定所得を予想したりと、通常思いつきにくい案がたくさん出てきてとても楽しかったです。&lt;/p&gt;

&lt;p&gt;アンケート結果も全体的に満足度が高く、IoTについて考える良いきっかけになったのではないかなと思います。&lt;/p&gt;

&lt;p&gt;dotstudioではこのような形で企業や学校での研修、講習会を行なっています。 気になった方がいましたらぜひお問い合わせください。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;https://dotstud.io/service/&#34;&gt;&lt;strong&gt;企業向けIoT研修のご案内&lt;/strong&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>夏のデブサミ！のびすけがコミュニティ運営について発表してきました。</title>
      <link>https://dotstud.io/blog/devsumi-summer-2017-report/</link>
      <pubDate>Thu, 03 Aug 2017 11:06:01 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/devsumi-summer-2017-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、バックエンドエンジニアのちゃんとく（&lt;a href=&#34;https://twitter.com/tokutoku393/&#34;&gt;@tokutoku393&lt;/a&gt;）です。&lt;/p&gt;

&lt;p&gt;7月28日に開催された「&lt;a href=&#34;http://event.shoeisha.jp/devsumi/20170728/&#34;&gt;Developers Summit 2017 Summer&lt;/a&gt;」に、dotstudio代表のびすけが登壇してきました！当日のセッションや会場の様子をレポートします！&lt;/p&gt;

&lt;h2 id=&#34;夏のデブサミ-今回のテーマは-エンジニアコミュニティ&#34;&gt;夏のデブサミ！今回のテーマは「エンジニアコミュニティ」&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;http://event.shoeisha.jp/devsumi/20170728/&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/116/01_devsumi_summer.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;http://event.shoeisha.jp/devsumi/20170728/&#34;&gt;&lt;strong&gt;夏サミ 2017 公式サイト&lt;/strong&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;今回のデブサミのテーマは、ITエンジニアの中で色濃い文化である「コミュニティ」。さまざまな切り口でのセッションを通して、コミュニティの事例やこれからが話し合われました。&lt;/p&gt;

&lt;p&gt;各セッションについてレポートしたいところですが、今回はのびすけの登壇したリレーセッション「&lt;a href=&#34;http://event.shoeisha.jp/devsumi/20170728/session/1427/&#34;&gt;&lt;strong&gt;コミュニティを長く続ける秘訣&lt;/strong&gt;&lt;/a&gt;」についてまとめてみます！&lt;/p&gt;

&lt;p&gt;10年以上続く企業主催の勉強会「&lt;strong&gt;BPStudy&lt;/strong&gt;」、毎月200人規模が集まる「&lt;strong&gt;IoTLT&lt;/strong&gt;」、年間600以上のイベントが開催される「&lt;strong&gt;コワーキングスペースCo-Edo&lt;/strong&gt;」について3名によるセッションです！&lt;/p&gt;

&lt;h2 id=&#34;企業主催の勉強会を10年続けたノウハウダイ公開-佐藤-治夫氏-ビープラウド&#34;&gt;企業主催の勉強会を10年続けたノウハウダイ公開 / 佐藤 治夫氏 - ビープラウド&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/116/02_bp1.png&#34; alt=&#34;&#34; /&gt;
株式会社ビープラウド代表の佐藤さんから！ビープラウドが運営する勉強会支援プラットフォーム「&lt;a href=&#34;https://connpass.com/dashboard/&#34;&gt;&lt;strong&gt;connpass&lt;/strong&gt;&lt;/a&gt;」は、一度は使ったことのあるエンジニアの方が多いですよね。&lt;/p&gt;

&lt;p&gt;そんなビープラウドの主催する&lt;a href=&#34;https://bpstudy.connpass.com/&#34;&gt;&lt;strong&gt;BPStudy&lt;/strong&gt;&lt;/a&gt;は継続して&lt;strong&gt;早10年&lt;/strong&gt;！累計登壇者はなんと&lt;strong&gt;320名&lt;/strong&gt;にものぼるそうです。知見の累積がすごい……！&lt;/p&gt;

&lt;p&gt;企業主催という特性から、入社希望者や仕事相手とのクッション役としても機能しているそう。よく知らない人と面談や商談をするより、ラフな場で話したことがある方がずっとスムーズですもんね。&lt;/p&gt;

&lt;p&gt;ただ長く続ける上で、やはり毎回の企画や集客、ドタキャンなどには悩まされるそうです。&lt;/p&gt;

&lt;h3 id=&#34;継続してきてわかったイベント開催のノウハウ&#34;&gt;継続してきてわかったイベント開催のノウハウ&lt;/h3&gt;

&lt;p&gt;一時期集客がやや落ち込んだときは、&lt;strong&gt;SNSシェア時にテーマがわかるようにタイトルをつける&lt;/strong&gt;ことで興味を引かせたり、&lt;strong&gt;扱うテーマの概要をページに記載する&lt;/strong&gt;ことでわかりやすさを改善したところ、毎回の参加者が増える結果につながったそうです！
&lt;img src=&#34;https://dotstud.io/img/blog/116/03_bp2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;イベントに関する知見の深さは長く続けているからこそですね。&lt;/p&gt;

&lt;p&gt;ちなみに私は「&lt;strong&gt;雨の日はまじでドタキャン率が高い&lt;/strong&gt;」という知見を持っています（泣）&lt;/p&gt;

&lt;h3 id=&#34;なぜ勉強会で発表するのか&#34;&gt;なぜ勉強会で発表するのか？&lt;/h3&gt;

&lt;p&gt;10年間勉強会を開催し続け、ご自身でも発表される佐藤さんは発表することの効果を次のように説明しています。
&lt;center&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/116/bp3.png&#34; alt=&#34;&#34; /&gt;
（発表資料より抜粋）
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;人に説明しようとまとめたりフィードバックをもらったりすることで、知識はどんどん研鑽されます。さらに発表することで、自信を持てたりキャリアアップしたりと&lt;strong&gt;人生が変わる結果&lt;/strong&gt;につながることも。&lt;/p&gt;

&lt;p&gt;BPStudyはスキルアップの場として、個人がさらに輝けるコミュニティを目指していくそうです！&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/bVmrldC8hfqKJX&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/ssuserafaef6/bpstudy-78337351&#34; title=&#34;企業主催勉強会BPStudy〜個人が輝くコミュニティを目指して&#34; target=&#34;\_blank&#34;&gt;企業主催勉強会BPStudy〜個人が輝くコミュニティを目指して&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a target=&#34;\_blank&#34; href=&#34;https://www.slideshare.net/ssuserafaef6&#34;&gt;Haruo Sato&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;個人主催でも4000人が集まった-iotltグロースの秘訣を探る-のびすけ-dotstudio&#34;&gt;個人主催でも4000人が集まった、IoTLTグロースの秘訣を探る / のびすけ - dotstudio&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/116/04_iotlt1.png&#34; alt=&#34;&#34; /&gt;
のびすけは毎月開催している「&lt;a href=&#34;https://iotlt.connpass.com/&#34;&gt;&lt;strong&gt;IoT縛りの勉強会！IoTLT&lt;/strong&gt;&lt;/a&gt;」の成長の秘訣について発表しました。&lt;/p&gt;

&lt;p&gt;IoTLTは、dotstudio設立前からのびすけが個人でリレーションズ土屋氏と共催しているイベントです。
&lt;center style=&#34;margin-top:-20px&#34;&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/103/01_iotlt.png&#34; alt=&#34;&#34; /&gt;
（IoTLT vol.18 Amazon開催時の様子）
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;参加者登録にはconnpassを使用しており、先述の佐藤氏には「&lt;a href=&#34;https://www.slideshare.net/ssuserafaef6/connpasssummit2017&#34;&gt;&lt;strong&gt;connpass運営が選ぶこのコミュニティがすごい&lt;/strong&gt;&lt;/a&gt;」でコミュニティメンバー数と開催数の多さから「&lt;strong&gt;高橋名人級&lt;/strong&gt;」認定をしていただきました！&lt;/p&gt;

&lt;h3 id=&#34;並外れた集客パワーの秘密&#34;&gt;並外れた集客パワーの秘密？&lt;/h3&gt;

&lt;p&gt;今では毎月200〜300名の応募が集まるIoTLTですが、どうやって参加人数が伸びてきたのでしょうか？&lt;/p&gt;

&lt;p&gt;実は、始めの方から100人前後集客しており、やはり&lt;strong&gt;「IoT」というワードへの注目度の高さ&lt;/strong&gt;が理由の一つとしてあるようです。（「IoT 勉強会」で検索するとトップにヒットするとのこと。）&lt;/p&gt;

&lt;p&gt;これも&lt;strong&gt;わかりやすいタイトルをつける&lt;/strong&gt;ということの効果かもしれませんね。&lt;/p&gt;

&lt;p&gt;さらに、企業などのスペースをお借りして「&lt;strong&gt;毎回違う場所で開催していること&lt;/strong&gt;」も秘訣かも、とのこと。
&lt;img src=&#34;https://dotstud.io/img/blog/116/05_iotlt2.png&#34; alt=&#34;&#34; /&gt;
「その企業に興味を持っている人」がきてくれたり、参加しやすい雰囲気を感じてくれたりするのかもしれません。&lt;/p&gt;

&lt;p&gt;ただ毎度200〜300人が入る開場を探すのはかなり困難だそうなので、大きな会場をご提供くださる企業様よろしくお願い致します（笑）&lt;/p&gt;

&lt;h3 id=&#34;イベントを長く続けるために&#34;&gt;イベントを長く続けるために&lt;/h3&gt;

&lt;p&gt;毎月イベントを開催し続けるには、かなり体力やモチベーションが必要です。
&lt;img src=&#34;https://dotstud.io/img/blog/116/06_iotlt3.png&#34; alt=&#34;&#34; /&gt;
無料イベントとして「&lt;strong&gt;参加者をお客さん扱いしない&lt;/strong&gt;」ことで気負わず緩く続けているそう。そもそも勉強会なので当然ですよね。会場の現状復帰や片付けもみんなでやります。&lt;/p&gt;

&lt;p&gt;そして一番大事なのは……&lt;strong&gt;自分自身が楽しむこと&lt;/strong&gt;！！頑張って集めよう、続けようと苦しくなる時も、「やりたいからやる」という気持ちを忘れずにいきたいものです。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;6ece5910ed5d45108bd81d8164657396&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;コワーキングスペースでたくさんの勉強会を支えてみて-田中-弘治-コワーキングスペース茅場町-co-edo&#34;&gt;コワーキングスペースでたくさんの勉強会を支えてみて / 田中 弘治 - コワーキングスペース茅場町 Co-Edo&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/116/07_coed1.png&#34; alt=&#34;&#34; /&gt;
東京は茅場町のコワーキングスペース「Co-Edo」から代表の田中さん！イベントスペースとしてコミュニティと関わりを持つなかで、いろいろと気づきがあったことをお話してくれました。&lt;/p&gt;

&lt;p&gt;イベント開催に会場探しの苦労はつきものですが、Co-Edoでは10〜50名までフレキシブルに対応でき、勉強会後の懇親会開催もOKだそうです！&lt;/p&gt;

&lt;h3 id=&#34;勉強会したいんですが-でいろいろわかる&#34;&gt;「勉強会したいんですが……」でいろいろわかる&lt;/h3&gt;

&lt;p&gt;イベントスペースの運営者として主催者と関わる中で、相談されるあるあるからどう勉強会を企画すべきかというお話をしてくれました。&lt;/p&gt;

&lt;p&gt;まず「勉強会をしたい」という相談を受けたときに、&lt;strong&gt;概要がふわふわと要領を得ない状態&lt;/strong&gt;だとなかなかうまく進まないそうです。「勉強会を開催すること」が目的になってしまっているのかもしれません。&lt;/p&gt;

&lt;p&gt;また佐藤さんのお話でもあったようにイベントタイトルも出来るだけわかりやすいものがよいそうです。&lt;/p&gt;

&lt;h3 id=&#34;イベントページでいろいろわかる&#34;&gt;イベントページでいろいろわかる&lt;/h3&gt;

&lt;p&gt;募集フェーズでのイベントページでも、進行に差が出てくるそうです。レベル感や言語など対象者がわかるようになっていると、参加者としても応募しやすくイベント自体も進めやすいそう。参加者とのミスマッチが多いと、継続が難しくなってくるそうです。&lt;/p&gt;

&lt;p&gt;またタイムスケジュールを載せることも重要だそうです。&lt;strong&gt;参加者ができるだけ想像できる情報を載せておく&lt;/strong&gt;のが大事かもしれませんね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/116/08_coedo2.png&#34; alt=&#34;&#34; /&gt;
Co-Edoはイベント主催者の声に応え、元々1フロアだったところを3フロアまで増床したそうです。もちろん家賃も３倍……！&lt;/p&gt;

&lt;p&gt;たくさんのコミュニティが動き、新しい価値が生み出されることを期待されているそうです！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;企業主催、個人主催、イベントスペース運営者とさまざまな切り口からのお話を聞くことができました。登壇者の皆さんそれぞれイベント主催や運営を自分自身が楽しんでいる様子だったのが印象的でした！&lt;/p&gt;

&lt;p&gt;息切れしないように&lt;strong&gt;参加者を巻き込み&lt;/strong&gt;、新しく来る人には&lt;strong&gt;想像しやすく参加しやすいコミュニティ&lt;/strong&gt;でいられると自然と長く続いていくのかなと感じます。&lt;/p&gt;

&lt;p&gt;参加者としては&lt;strong&gt;当然イベントが開催されるもの&lt;/strong&gt;と思わず協力的に楽しく参加していけるといいなと思います！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>フォトダイオードでリモコンの信号を検出してみよう</title>
      <link>https://dotstud.io/blog/photodiode-remote-controll-signal/</link>
      <pubDate>Wed, 02 Aug 2017 16:42:19 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/photodiode-remote-controll-signal/</guid>
      
      <description>

&lt;p&gt;こんにちは、ものづくり担当のうこ（&lt;a href=&#34;https://twitter.com/harmoniko/&#34;&gt;@harmoniko&lt;/a&gt;）です。&lt;/p&gt;

&lt;p&gt;今回は、フォトダイオードというパーツを使ってリモコンの信号を読み取る方法を紹介します！&lt;/p&gt;

&lt;h2 id=&#34;フォトダイオードとは&#34;&gt;フォトダイオードとは？&lt;/h2&gt;

&lt;p&gt;半導体素子のひとつで、照射される光の強さによって流れる電流の強さが変化します。太陽光パネルと仕組みはほとんど同じで、光によって電流を発生しますが、非常に小さいため電源としては使用されません。&lt;/p&gt;

&lt;p&gt;一口にフォトダイオードと言っても様々な種類があります。（参考：&lt;a href=&#34;http://jp.rs-online.com/web/c/displays-optoelectronics/optocouplers-photodetectors-photointerrupters/photodiodes/&#34;&gt;RSコンポーネンツ&lt;/a&gt;。多種の取り扱いがあります。） 光を検出するセンサとしてはほかにCdSなどがありますが、応答の速さ・感度・信号強度特性・対応する波長などに優位性があり、リモコンの受光器などとして産業用途に幅広く利用されています。&lt;/p&gt;

&lt;p&gt;今回はそんなリモコンの受光器を作り、信号の中身をみてみましょう。&lt;/p&gt;

&lt;h2 id=&#34;リモコンの仕組み&#34;&gt;リモコンの仕組み&lt;/h2&gt;

&lt;p&gt;リモコンは、赤外線LEDを高速で点滅させて家電などに信号を送っています。信号の中身は、国内ではNECが開発した方式が主流で、次いで家電製品協会の方式、ソニーなどの独自方式があります。今回は、最も普及しているNEC方式を用いたリモコン信号検出システムを作ってみます。&lt;/p&gt;

&lt;p&gt;このフォーマットを採用している主なメーカーとして、NEC・東芝・日立などがあります。これらのメーカーのリモコンなどをお持ちでしたら、ぜひ作ってみてください。&lt;/p&gt;

&lt;p&gt;【参考】&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.asahi-net.or.jp/~gt3n-tnk/IR_TX1.html&#34;&gt;赤外線リモコンのフォーマット&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;作ってみよう&#34;&gt;作ってみよう&lt;/h2&gt;

&lt;h3 id=&#34;準備するもの&#34;&gt;準備するもの&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/117/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Arduino Due × 1&lt;/li&gt;
&lt;li&gt;ブレッドボード × 1&lt;/li&gt;
&lt;li&gt;抵抗1kΩ × 1&lt;/li&gt;
&lt;li&gt;フォトダイオード S5971 × 1&lt;/li&gt;
&lt;li&gt;ジャンパワイヤ × 4&lt;/li&gt;
&lt;li&gt;黒画用紙(3cm×6cmぐらい)&lt;/li&gt;
&lt;li&gt;USBマイクロBケーブル&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;作り方&#34;&gt;作り方&lt;/h3&gt;

&lt;h4 id=&#34;フォトダイオードに黒画用紙を巻く&#34;&gt;フォトダイオードに黒画用紙を巻く&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/117/2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/117/3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;フォトダイオードには、細長く切った黒画用紙を巻き寿司のように巻きつけてテープで固定します。こうすることでフォトダイオードを常に暗い状態にし、光の誤検出を防ぎます。&lt;/p&gt;

&lt;h4 id=&#34;配線&#34;&gt;配線&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/117/4.png&#34; alt=&#34;&#34; /&gt;
まずはじめに、ブレッドボード上に抵抗器とフォトダイオードを、上の写真のように配置します。フォトダイオードは向きに注意してください。
&lt;img src=&#34;https://dotstud.io/img/blog/117/5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;次に、4つのジャンパワイヤを使って、ブレッドボードとArduino Dueを接続します。
&lt;img src=&#34;https://dotstud.io/img/blog/117/6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;接続が終わったら、このような感じになっています。
&lt;img src=&#34;https://dotstud.io/img/blog/117/7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;最後に、USBのマイクロBケーブルでArduino Dueとパソコンを接続して完了です。USBは、Arduino Due側は、黒いコネクタに近い方のUSBポート「Programming Port」に接続してください。&lt;/p&gt;

&lt;h3 id=&#34;arduino-dueボード対応化&#34;&gt;Arduino Dueボード対応化&lt;/h3&gt;

&lt;p&gt;Arduino IDEでプログラムを作成し書き込んでいきます。Arduino IDEのインストールが済んでいない方は、&lt;a href=&#34;https://www.arduino.cc/en/Main/Software&#34;&gt;公式サイト&lt;/a&gt;からダウンロードして進めてください。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/117/8.png&#34; alt=&#34;&#34; /&gt;
Arduino IDEのメニューから、
Tools -&amp;gt; Boards:&amp;ldquo;&amp;hellip;&amp;rdquo; -&amp;gt; Board Manager&amp;hellip;
を選択すると、小さい画面が表示されます。検索窓に「due」と打ち込むと、ひとつだけヒットするパッケージがありますので、最新版をインストールしてください。&lt;/p&gt;

&lt;p&gt;次に、
Tools -&amp;gt; Boards&amp;rdquo;&amp;hellip;&amp;rdquo;
で、&amp;rdquo;Arduino Due (Programming Port)&amp;ldquo;を選択しておきます。&lt;/p&gt;

&lt;h3 id=&#34;ソースコードを書き込む&#34;&gt;ソースコードを書き込む&lt;/h3&gt;

&lt;p&gt;以下のソースコードをコピーし、スケッチにコピーしてください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const int thresholdH = 30;     // フォトダイオードの閾値(Off-&amp;gt;On)
const int thresholdL = 20;     // フォトダイオードの閾値(On-&amp;gt;Off)
const int input = A0;          // フォトダイオードの入力ピン
int signalCnt = -1;            // 信号カウンタ
int level = 0;                 // フォトダイオードのanalogRead値
unsigned long offSpan;         // 信号L値持続時間(計測用)
unsigned long offTime;         // 信号Off時間(計測用)
unsigned long startTime;       // 時間計算用
unsigned long signals = 0;     // 信号保存(カスタム16bit+データ8bit+反転データ8bit)
bool now = false;              // フォトダイオード状態遷移フラグ1
bool prev = false;             // フォトダイオード状態遷移フラグ2
bool detected = false;         // リーダコード検出フラグ




// フォトダイオードからアナログ値を読んで論理値に変換
bool photoRead() {
  level = analogRead(input);
  if (level &amp;gt; thresholdH) return true;
  if (level &amp;lt; thresholdL) return false;
}


// リーダコード認識
bool leaderDetect() {
  // 積分
  unsigned long integral0 = 0;
  unsigned long integral1 = 0;
  startTime = micros();
  // 9msループ(0.1msおまけ)
  while (micros() &amp;lt; (startTime+9100)) {
    if (photoRead()) integral1++;
    else integral0++;
  }
  /*
    副搬送波38kHz変調のデューティ比は1:2である
    また信号で0を表す場合はPPM方式によりHとLがそれぞれ0.56ms(1:1)であるため
    リーダコード以外の部分でフォトダイオードで得られるOnとOffの時間比は
    Onが1に対してOffが6である
    リーダコード部分は常にHであるのでOnが1に対してOffが3である
    よってOnとOffの差がおおむね4倍以下であればリーダコードを判定することができる
  */
  if (integral1 &amp;gt; ((integral0)/4)) return true;
  else return false;
}


void setup() {
  // シリアルポートを開く
  Serial.begin(115200);
  // アナログ入力の細かさを12bit(4096段階)に設定
  analogReadResolution(12);
}


void loop() {
  // ダイオードの状態確認ループ
  while(now == prev) {
    now = photoRead();
    // 一度検出できたらループを極力回さずにディレイさせたい
    // 副搬送波のL値を誤検出しないようにするため
    if (now) {
      if (!detected) {
        // Off-&amp;gt;On遷移かつリーダコード未検出
        if (leaderDetect()) {
          Serial.println(&amp;quot;------- LEADER -------&amp;quot;);
          detected = true;
          signalCnt = -1;
        }
      }
    }
  }

  // 以下は状態変化した瞬間だけ実行される
  //
  if (detected) {
    if (now) {
      // Off-&amp;gt;On遷移かつリーダコード検出済
      offSpan = micros() - offTime;
      // 最初のリーダコードの直後のL値
      if (signalCnt &amp;lt; 0) {
        // リピートの検出(3ms未満)
        if (offSpan &amp;lt; 3000) {
          Serial.println(&amp;quot;------- REPEAT -------&amp;quot;);
          Serial.println(&amp;quot;&amp;quot;);
          signals = 0;
          signalCnt = -1;
          detected = false;
        } else {
          signalCnt++;
        }
      } else {
        // off時間が1000msより多いか少ないか
        if (offSpan &amp;lt; 1000) {
          // 1判定
          signals += 1&amp;lt;&amp;lt;(31-signalCnt);
        } else {
          // 0判定
        }
        signalCnt++;
      }
      // 570msも待てば必ずLになり次のコード先頭までHにならないので誤検出しない
      delayMicroseconds(570);
    } else {
      // On-&amp;gt;Off遷移かつリーダコード検出済
      offTime = micros();
    }
  }
  // 反転
  prev = now;

  // 最後まで読めたら表示する
  if (signalCnt &amp;gt;= 31) {
    // カスタムコード16bit
    int custom = (int)(signals&amp;gt;&amp;gt;16);
    Serial.print(&amp;quot;Custom code: &amp;quot;); Serial.println(custom,HEX);
    Serial.print(&amp;quot;    &amp;quot;); Serial.println(custom,BIN);
    // データコード8bit
    byte data1 = (byte)((signals&amp;gt;&amp;gt;8)&amp;amp;B11111111);
    Serial.println(&amp;quot;Data code:&amp;quot;);
    Serial.print(&amp;quot;    &amp;quot;); Serial.print(data1,BIN); Serial.print(&amp;quot; = &amp;quot;); Serial.println(data1,HEX);
    // データコード(反転)8bit
    byte data2 = (byte)(signals&amp;amp;B11111111);
    Serial.print(&amp;quot;    &amp;quot;); Serial.print(data2,BIN); Serial.print(&amp;quot; = &amp;quot;); Serial.println(data2,HEX);
    // データ検証
    byte vf = data1^data2;
    Serial.println(&amp;quot;Data verify: &amp;quot;);
    Serial.print(&amp;quot;    &amp;quot;); Serial.print(data1,HEX); Serial.print(&amp;quot; xor &amp;quot;); Serial.print(data2,HEX); Serial.print(&amp;quot; = &amp;quot;); Serial.println(vf,HEX);
    if (vf == 0xFF) Serial.println(&amp;quot;     [ VERIFIED ]&amp;quot;);
    else Serial.println(&amp;quot;     [ ERROR ]&amp;quot;);
    // おわり
    Serial.println(&amp;quot;------- ------ -------&amp;quot;);
    Serial.println(&amp;quot;&amp;quot;);
    signals = 0;
    signalCnt = -1;
    detected = false;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;試してみよう&#34;&gt;試してみよう&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/117/9.png&#34; alt=&#34;&#34; /&gt;
アップロードが完了したら、Tools -&amp;gt; Serial Monitor からシリアルモニタを表示させ、通信速度を「115200bps」に変更します。その状態のまま、リモコンをフォトダイオードに近づけてボタンを押すと……&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/117/10.png&#34; alt=&#34;&#34; /&gt;
いくつか値が表示されましたね！
点線で囲まれたブロックが信号の1セットで、中身には「Custom code」「Data code」「Data verify」が入っています。
「Custom code」は製品固有のコードで、同じリモコンだと基本的に固定の値です。&lt;/p&gt;

&lt;p&gt;色々ボタンを押していると、「Data code」が変化するようすがわかります。「Data verify」は、信号に含まれている2つのデータを照合して、信号が壊れていないかを確認するためのものです。
&lt;img src=&#34;https://dotstud.io/img/blog/117/11.png&#34; alt=&#34;&#34; /&gt;
自宅の扇風機のリモコンで試してみたところ、確かにボタンで値が変わっていることがわかりました。&lt;/p&gt;

&lt;h2 id=&#34;応用編&#34;&gt;応用編&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/117/12.png&#34; alt=&#34;&#34; /&gt;
Arduino IDEには「シリアルプロッタ」という、グラフを描画できる機能が備わっています。それを利用して、リモコンの信号波形を描画してみるとこんな感じになりました。規則的な波形をところどころに確認することができます。&lt;/p&gt;

&lt;p&gt;また、今回使用したマイコンボード「Arduino Due」は、USB接続の外付けマウス・外付けキーボードとして簡単に動作させることができるライブラリが備わっています。例えば、今回のプログラムにこの機能を取り入れて少し書き換えるだけで、普段使っているTVリモコンでパソコンの動画プレイヤーを制御、なんてこともすぐにできちゃいます。&lt;/p&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;いかがでしたでしょうか？
フォトダイオードはいろんな種類がありますが、Arduinoのようなマイコンボードを使えば意外と簡単に光センサを作ることができます。この機会にぜひ作ってみては。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Node.js製の静的サイトジェネレータ「Hexo」で無料ブログ開発 vol.2</title>
      <link>https://dotstud.io/blog/hexo-static-site-vol2/</link>
      <pubDate>Tue, 25 Jul 2017 13:19:25 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/hexo-static-site-vol2/</guid>
      
      <description>

&lt;p&gt;こんにちは、エンジニアのちゃんとくです。ひょんなことから&lt;a href=&#34;https://nodejs.connpass.com/&#34;&gt;&lt;strong&gt;Node女学園&lt;/strong&gt;&lt;/a&gt;というNode.jsを学ぶ女性のためのコミュニティを立ち上げました。&lt;/p&gt;

&lt;p&gt;このシリーズではNode女学園のブログを作りながら、&lt;strong&gt;Node.js製の静的サイトジェネレータ「Hexo」&lt;/strong&gt;の使い方を紹介していきます！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://dotstud.io/blog/hexo-static-site-vol1&#34;&gt;&lt;strong&gt;前回&lt;/strong&gt;&lt;/a&gt;は環境構築とデプロイまでやってみました。
&lt;img src=&#34;https://dotstud.io/img/blog/107/pre_art.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;
&lt;a href=&#34;https://dotstud.io/blog/hexo-static-site-vol1&#34;&gt;&lt;strong&gt;Node.js製の静的サイトジェネレータ「Hexo」で無料ブログ開発 vol.1&lt;/strong&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;今回はテーマを当ててブログデザインをカスタマイズしてみます。&lt;/p&gt;

&lt;h2 id=&#34;テーマの探し方&#34;&gt;テーマの探し方&lt;/h2&gt;

&lt;p&gt;Hexoでは既存のテーマを使うことで簡単にデザインを適用できます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://hexo.io/themes/&#34;&gt;Hexoの公式サイト&lt;/a&gt;では130以上のテーマが紹介されています。
&lt;img src=&#34;https://dotstud.io/img/blog/107/themes.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;また&lt;a href=&#34;https://github.com&#34;&gt;github&lt;/a&gt;で&lt;code&gt;hexo-theme&lt;/code&gt;を検索するとユーザが制作したテーマを探すことができます。
&lt;img src=&#34;https://dotstud.io/img/blog/107/search.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;LICENSEに注意しつつ、好きなテーマを探しましょう。&lt;/p&gt;

&lt;p&gt;今回Node女学園のブログは「ロゴに合わせてオレンジ系統」「ポップな感じ」にしたかったので、こちらの&lt;strong&gt;pacman&lt;/strong&gt;のテーマを使うことにしました。
&lt;img src=&#34;https://dotstud.io/img/blog/107/demo.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/A-limon/pacman&#34;&gt;github - A-limon/pacman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://a-limon.github.io/pacman/&#34;&gt;demoページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;テーマをダウンロード&#34;&gt;テーマをダウンロード&lt;/h2&gt;

&lt;p&gt;まずはテーマをダウンロードします。cloneして取ってきましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/A-limon/pacman.git themes/pacman
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git URLとディレクトリ名は適宜自分のダウンロードしたいテーマのものに置き換えてください。（大体のテーマはREADMEに記載があるはずです。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/107/clone_theme.png&#34; alt=&#34;&#34; /&gt;
cloneして&lt;code&gt;/themes&lt;/code&gt;の下に&lt;code&gt;/pacman&lt;/code&gt;ディレクトリができました。デフォルトの&lt;code&gt;/landscape&lt;/code&gt;は使わないので消してしまいます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;_config.yml&lt;/code&gt;ファイルの&lt;code&gt;theme:&lt;/code&gt;をダウンロードしたテーマ名に書き換えます。
&lt;img src=&#34;https://dotstud.io/img/blog/107/chose_theme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;この状態でローカルサーバを起動してみましょう。
&lt;img src=&#34;https://dotstud.io/img/blog/107/pacman.png&#34; alt=&#34;&#34; /&gt;
pacmanのテーマが適用されました！&lt;/p&gt;

&lt;h2 id=&#34;カスタマイズ&#34;&gt;カスタマイズ&lt;/h2&gt;

&lt;p&gt;デフォルトでは言語が違っていたり不要なリンクがあったりするので、自分の好みに編集していきます。&lt;/p&gt;

&lt;p&gt;今回はカスタマイズの一例としてpacmanに沿って紹介します。テーマによって方法が異なる場合があるので、各READMEを見つつこの以下は参考程度に見てください。&lt;/p&gt;

&lt;h3 id=&#34;author情報を設定&#34;&gt;Author情報を設定&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;themes/pacman/_config.yml&lt;/code&gt;を編集していきます。先ほどまでの&lt;code&gt;_config.yml&lt;/code&gt;とは違うファイルなので混同しないようにしてください。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;author:&lt;/code&gt;の部分を変更します。
&lt;img src=&#34;https://dotstud.io/img/blog/107/author_before.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;intro_line&lt;/code&gt;はフッタに表示されるメッセージです。適宜SNSのアカウントを記載して不要な項目は消去します。&lt;/p&gt;

&lt;p&gt;以下のように設定しました。
&lt;img src=&#34;https://dotstud.io/img/blog/107/author_after.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;続いて&lt;code&gt;author_img&lt;/code&gt;を編集します。
&lt;img src=&#34;https://dotstud.io/img/blog/107/author_img.png&#34; alt=&#34;&#34; /&gt;
画像データをURLで指定する場合は&lt;code&gt;dataURI: true&lt;/code&gt;にして&lt;code&gt;author_img_data:&lt;/code&gt;のあとにURLを記述します。&lt;/p&gt;

&lt;p&gt;ローカルに画像を置く場合は&lt;code&gt;dataURI: false&lt;/code&gt;のまま&lt;code&gt;author_img:&lt;/code&gt;のあとにコメントに習ってPATHを記載しましょう。&lt;/p&gt;

&lt;p&gt;変更を確認してみます。
&lt;img src=&#34;https://dotstud.io/img/blog/107/footer.png&#34; alt=&#34;&#34; /&gt;
フッターに画像、メッセージ、SNSが表示されました！&lt;/p&gt;

&lt;h3 id=&#34;言語を設定&#34;&gt;言語を設定&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;/themes/pacman/languages&lt;/code&gt;以下で、&lt;code&gt;default.yml&lt;/code&gt;を残して他の言語ファイルを消去します。
&lt;img src=&#34;https://dotstud.io/img/blog/107/lang.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;確認してみます。
&lt;img src=&#34;https://dotstud.io/img/blog/107/en.png&#34; alt=&#34;&#34; /&gt;
&lt;code&gt;default.yml&lt;/code&gt;の内容が適用されました。日本語などにしたい場合は&lt;code&gt;default.yml&lt;/code&gt;の中を編集しましょう。&lt;/p&gt;

&lt;h3 id=&#34;サイドバーを編集&#34;&gt;サイドバーを編集&lt;/h3&gt;

&lt;p&gt;続いてサイドバーを変更します。
&lt;img src=&#34;https://dotstud.io/img/blog/107/del_rss_be.png&#34; alt=&#34;&#34; /&gt;
今回RSSは不要なので消してみます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/themes/pacman/layout/_widget&lt;/code&gt;の下の&lt;code&gt;rss.ejs&lt;/code&gt;を消去します。
&lt;img src=&#34;https://dotstud.io/img/blog/107/del_rss1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;themes/pacman/_config.yml&lt;/code&gt;の&lt;code&gt;widget:&lt;/code&gt;からrssを消去します。
&lt;img src=&#34;https://dotstud.io/img/blog/107/del_rss2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;RSSの表示が消えました。
&lt;img src=&#34;https://dotstud.io/img/blog/107/del_rss_af.png&#34; alt=&#34;&#34; /&gt;
続いてタグの記事数を表す数字も消してみます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/themes/pacman/layout/_widget/tag.ejs&lt;/code&gt;で数字を記述している部分を消去します。
&lt;img src=&#34;https://dotstud.io/img/blog/107/del_tag.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;記事数を表す数字が消えました。
&lt;img src=&#34;https://dotstud.io/img/blog/107/del_tag_af.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;記事の表示を編集&#34;&gt;記事の表示を編集&lt;/h3&gt;

&lt;p&gt;記事をクリックして各記事ページもカスタマイズしましょう。&lt;/p&gt;

&lt;p&gt;まず記事内に表示されている目次（Contents）を消してみます。
&lt;img src=&#34;https://dotstud.io/img/blog/107/del_content_be.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/themes/pacman/layout/_partial/post/article.ejs&lt;/code&gt;を編集します。
&lt;img src=&#34;https://dotstud.io/img/blog/107/del_content.png&#34; alt=&#34;&#34; /&gt;
&lt;code&gt;contents&lt;/code&gt;を表示させている部分を消去します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/107/del_contents.png&#34; alt=&#34;&#34; /&gt;
目次が消えました。&lt;/p&gt;

&lt;h3 id=&#34;記事のフッタを編集&#34;&gt;記事のフッタを編集&lt;/h3&gt;

&lt;p&gt;記事のフッタにはあまり馴染みのないSNSのシェアリンクがあるので変更します。
&lt;img src=&#34;https://dotstud.io/img/blog/107/art_footer_before.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/themes/pacman/layout/_partial/after_footer.ejs&lt;/code&gt;の90行目あたりを見てみます。
&lt;img src=&#34;https://dotstud.io/img/blog/107/del_share.png&#34; alt=&#34;&#34; /&gt;
リンクを追加している部分があるので不要なものを消します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/107/del_share_af.png&#34; alt=&#34;&#34; /&gt;
FacebookとTwitterのみ残しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/107/art_footer_after.png&#34; alt=&#34;&#34; /&gt;
ブログ側もFacebookとTwitterのみになっています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hexo deploy -g&lt;/code&gt;でデプロイしましょう！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;カスタマイズを加えて自分のブログらしさを出すことができました！
&lt;img src=&#34;https://dotstud.io/img/blog/107/done.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;テーマによって編集箇所が変わりますが、&lt;strong&gt;基本はHTMLとJavaScriptで構成されている&lt;/strong&gt;のでREADMEを読みつつ焦らず直していきましょう。&lt;/p&gt;

&lt;p&gt;次回はルーティングをやってみたいと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ライブで大活躍！音に反応して光るサバゲーマスク！</title>
      <link>https://dotstud.io/blog/gyaruden-mao-led-mask/</link>
      <pubDate>Fri, 21 Jul 2017 18:09:27 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/gyaruden-mao-led-mask/</guid>
      
      <description>

&lt;p&gt;どうも！dotstudio広報兼テクニカルライターのマオです。&lt;strong&gt;ギャルによるギャルのためのテクノロジーを提案していく電子工作ユニット、ギャル電&lt;/strong&gt;で活動をしてます！&lt;/p&gt;

&lt;p&gt;この記事では、LEDを音センサーに反応させる電子工作を紹介していきたいと思いまぁす！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/114/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;今回は音センサーを使うとのことで、ライブやフェスなどにつけていくと鬼盛れの&lt;strong&gt;”音に反応するパンクロックなマスク”&lt;/strong&gt;を作りました！&lt;/p&gt;

&lt;p&gt;では早速作り方を紹介していきたいと思います。&lt;/p&gt;

&lt;h3 id=&#34;準備するもの&#34;&gt;準備するもの&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;電子部品類&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.switch-science.com/catalog/1399/&#34;&gt;フルカラーシリアルLEDテープ(1m)通称NeoPixel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.switch-science.com/catalog/1680/&#34;&gt;エレクトレットマイクアンプモジュールMAX4466(音センサー)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.switch-science.com/catalog/1330/&#34;&gt;FLORA(マイコン)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://item.rakuten.co.jp/3rwebshop/3r-ps2600/&#34;&gt;小型モバイルバッテリー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;工具類&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;はんだ,はんだごて&lt;/li&gt;
&lt;li&gt;フックアップワイヤー&lt;/li&gt;
&lt;li&gt;ワイヤーストリッパー&lt;/li&gt;
&lt;li&gt;ニッパ&lt;/li&gt;
&lt;li&gt;ハサミ&lt;/li&gt;
&lt;li&gt;マイクロUSB(TypeB)&lt;/li&gt;
&lt;li&gt;パソコン&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;側の部分&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;サバゲーのマスク&lt;/li&gt;
&lt;li&gt;100均に売っているフェルト2枚&lt;/li&gt;
&lt;li&gt;シールフェルト（半面がシールのもの）1枚&lt;/li&gt;
&lt;li&gt;マジックテープ&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;はんだづけする前に&#34;&gt;はんだづけする前に&lt;/h3&gt;

&lt;p&gt;はんだづけ初心者または慣れていない方は、一回はんだづけのやり方を&lt;a href=&#34;http://www.murata.com/ja-jp/campaign/ads/japan/elekids/ele/craft/knack/soldering&#34;&gt;こちらのサイト&lt;/a&gt;で見てからするのをオススメします。
またはんだづけする時や電線を切断する時、飛び散ることがあります。そのため、&lt;strong&gt;安全メガネなどを装着して目を守る&lt;/strong&gt;ようにしてください。&lt;/p&gt;

&lt;p&gt;はんだづけする際は配線の準備が必要です。今回は被覆が付いているフックアップワイヤーを配線として使いました。
&lt;img src=&#34;https://dotstud.io/img/blog/114/2.png&#34; alt=&#34;&#34; /&gt;
フックアップワイヤーは被覆をワイヤーストリッパーで約2~4mm程度剥きましょう。ワイヤーストリッパーの使い方は&lt;a href=&#34;http://diytools1.com/2016/04/22/post-14009/&#34;&gt;こちら&lt;/a&gt;を参考にしてください。また、フックアップワイヤーの長さは必要に応じて調整しながら切断してください。&lt;/p&gt;

&lt;h3 id=&#34;さっそくはんだづけ&#34;&gt;さっそくはんだづけ！&lt;/h3&gt;

&lt;p&gt;今回は以下のように配線しました。
&lt;img src=&#34;https://dotstud.io/img/blog/114/3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ピンの配置はこちらです。
&lt;img src=&#34;https://dotstud.io/img/blog/114/4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;neopixelをはんだづけ&#34;&gt;NeoPixelをはんだづけ&lt;/h2&gt;

&lt;p&gt;合計44個のNeoPixel(LED)をはんだづけしていきます。
&lt;img src=&#34;https://dotstud.io/img/blog/114/5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ここで注意する点としては、&lt;strong&gt;NeoPixelの向き&lt;/strong&gt;です。下のNeoPixelの画像を見てみると矢印が書いてあります。この矢印は電流が流れる方向です。この&lt;strong&gt;矢印を逆にしてはんだづけしてしまうとNeoPixelがつかなくなる&lt;/strong&gt;のでここの点は要注意してはんだづけしましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/114/6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ここで以上のようにはんだづけしたら、100均一で買った半面シールのフェルトのシール側にNeoPixelを貼ります。
&lt;img src=&#34;https://dotstud.io/img/blog/114/7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;貼り終わったらFlora側と繋ぐ配線をフェルトに通します。配線を通す穴は適当に開けてください。
&lt;img src=&#34;https://dotstud.io/img/blog/114/8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;次に、NeoPixelの上から普通のフェルトを貼り付けてマスクの形に合わせて余計な部分を切り捨てます。
&lt;img src=&#34;https://dotstud.io/img/blog/114/9.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;floraとマイクアンプ-neopixelをはんだづけ&#34;&gt;Floraとマイクアンプ、NeoPixelをはんだづけ&lt;/h2&gt;

&lt;p&gt;Flora(マイコン)とマイクアンプ(音センサー)のはんだづけをします。&lt;/p&gt;

&lt;p&gt;最後に先ほどフェルトに通したNeoPixelの配線をFloraにはんだづけしてください。
&lt;img src=&#34;https://dotstud.io/img/blog/114/10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これで光らせる部分完成です！&lt;/p&gt;

&lt;h3 id=&#34;プログラミングするための環境設定&#34;&gt;プログラミングするための環境設定&lt;/h3&gt;

&lt;p&gt;次にプログラミングするために環境設定を行います。&lt;/p&gt;

&lt;p&gt;今回使うFloraはArduino互換ボードなのでプログラミングする際に&lt;strong&gt;ArduinoIDE&lt;/strong&gt;というソフトウェアを使います。
このArduinoIDEはフリーソフトです。&lt;a href=&#34;https://www.arduino.cc/en/Main/Software&#34;&gt;公式サイト&lt;/a&gt;から各自のパソコンにダウンロードしてください。&lt;/p&gt;

&lt;p&gt;また、Windowsユーザーの方は Floraの開発元のAdafruit社による「Windows Driver」をインストールする必要があります。&lt;a href=&#34;https://learn.adafruit.com/getting-started-with-flora/windows-setup&#34;&gt;こちらのサイト&lt;/a&gt;を参照して進めてください。（Mac・Linuxのユーザーの方はインストールする必要はありません）&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&#34;マイコンボードのインストレーション&#34;&gt;マイコンボードのインストレーション&lt;/h4&gt;

&lt;p&gt;ArduinoIDEを立ち上げてまだすぐプログラミングはできません。
まず、AduinoIDEにFloraというマイコンボードを知ってもらうためボードのインストールをします。&lt;/p&gt;

&lt;p&gt;Arduino &amp;gt; Preferences をクリックしてください。
&lt;img src=&#34;https://dotstud.io/img/blog/114/11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://www.adafruit.com/package_adafruit_index.json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;上記のAdafruitのURLをコピーして、追加のボードマネージャーのURLに貼り、OKをクリックしてください。
&lt;img src=&#34;https://dotstud.io/img/blog/114/12.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;コピー＆ペーストが完了したら、ツール &amp;gt; マイコンボード &amp;gt; ボードマネージャーをクリックします。
&lt;img src=&#34;https://dotstud.io/img/blog/114/13.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;すると、このような画面が表示されます。検索欄に「Adafruit AVR Boards」を入力し、インストールしましょう。ここまでで、ボードのインストレーションは終わりです。
&lt;img src=&#34;https://dotstud.io/img/blog/114/14.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&#34;ライブラリのインストール&#34;&gt;ライブラリのインストール&lt;/h4&gt;

&lt;p&gt;次に、NeoPixel を光らせるために必要なライブラリをインストールします。スケッチ &amp;gt; ライブラリをインクルード &amp;gt; ライブラリを管理 をクリックしてください。
&lt;img src=&#34;https://dotstud.io/img/blog/114/15.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;画面が表示されるので、検索欄に「Neopixel」と入力しましょう。下記のようになります。「Adafruit Neopixel by Adafruit」を選択してインストールしてください。
&lt;img src=&#34;https://dotstud.io/img/blog/114/16.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;プログラミングを書き込む&#34;&gt;プログラミングを書き込む！&lt;/h3&gt;

&lt;p&gt;以下のプログラムをArduinoIDEにコピー&amp;amp;ペーストしてください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;Adafruit_NeoPixel.h&amp;gt;

#define N_PIXELS  44  //　LEDの個数
#define MIC_PIN    9  // Floraに接続しているマイクロフォンのGPIO
#define LED_PIN    6  // NeoPixel LEDがFloraに接続しているGPIO
#define DC_OFFSET  0  // マイクロフォンのDCオフセット信号 - わからない場合0に設定
#define NOISE     100  // マイクロフォン信号のNoise/hum/interference
#define SAMPLES   60  // ダイナミックレベルの調整のためのバッファーの長さ
#define TOP       (N_PIXELS +1) // ドットをスケールから少し外れるようにする

byte
  peak      = 0,      
  dotCount  = 0,      
  volCount  = 0;     

int
  vol[SAMPLES],       
  lvl       = 10,    
  minLvlAvg = 0,      
  maxLvlAvg = 512;

Adafruit_NeoPixel  strip = Adafruit_NeoPixel(N_PIXELS, LED_PIN, NEO_GRB + NEO_KHZ800);

void setup() {

  memset(vol,0,sizeof(int)*SAMPLES);//Thanks Neil!
  strip.begin();
}
void loop() {
  uint8_t  i;
  uint16_t minLvl, maxLvl;
  int      n, height;
  n   = analogRead(MIC_PIN);                 
  n   = abs(n - 512 - DC_OFFSET);            
  n   = (n &amp;lt;= NOISE) ? 0 : (n - NOISE);      
  lvl = ((lvl * 7) + n) &amp;gt;&amp;gt; 3;   


  height = TOP * (lvl - minLvlAvg) / (long)(maxLvlAvg - minLvlAvg);

  if(height &amp;lt; 0L)       height = 0;      
  else if(height &amp;gt; TOP) height = TOP;
  if(height &amp;gt; peak)     peak   = height;


  uint8_t bright = 255;   
#ifdef POT_PIN            
   bright = analogRead(POT_PIN);  

#endif
  strip.setBrightness(bright);   

  for(i=0; i&amp;lt;N_PIXELS; i++) {  
    if(i &amp;gt;= height)               
       strip.setPixelColor(i,   0,   0, 0);
    else
       strip.setPixelColor(i,Wheel(map(i,0,strip.numPixels()-1,30,150)));
    }

   strip.show();

  vol[volCount] = n;                      
  if(++volCount &amp;gt;= SAMPLES) volCount = 0;


  minLvl = maxLvl = vol[0];
  for(i=1; i&amp;lt;SAMPLES; i++) {
    if(vol[i] &amp;lt; minLvl)      minLvl = vol[i];
    else if(vol[i] &amp;gt; maxLvl) maxLvl = vol[i];
  }

  if((maxLvl - minLvl) &amp;lt; TOP) maxLvl = minLvl + TOP;
  minLvlAvg = (minLvlAvg * 63 + minLvl) &amp;gt;&amp;gt; 6;
  maxLvlAvg = (maxLvlAvg * 63 + maxLvl) &amp;gt;&amp;gt; 6;
}


uint32_t Wheel(byte WheelPos) {
  if(WheelPos &amp;lt; 85) {
   return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
  } else if(WheelPos &amp;lt; 170) {
   WheelPos -= 85;
   return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  } else {
   WheelPos -= 170;
   return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここで、ArduinoIDEのツールに行きボードを&amp;rdquo;Adafuit Flora&amp;rdquo;に選択してください。
次にシリアルポートを(Adafruit Flora)に選択してください。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/114/17.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/114/18.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;次に、コンパイル（検証）ボタンをクリックし、プログラムに問題がないかチェックします。OKならば、書き込みのボタンをクリックするとプログラムがFLORAマイコンに書き込まれます。赤いランプの点滅が終わると書き込みが終了した状態なので、そうなったらケーブルを外しても大丈夫です。&lt;/p&gt;

&lt;h3 id=&#34;仕上げ&#34;&gt;仕上げ&lt;/h3&gt;

&lt;p&gt;NeoPixelの裏側にある、Floraとマイクアンプ側の面をフェルトを適当な形に切って、覆います。
ここで覆ったフェルトとFlora側のフェルトが付け剥がしできるようにマジックテープなどで固定します。
&lt;img src=&#34;https://dotstud.io/img/blog/114/19.png&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;https://dotstud.io/img/blog/114/20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;最後にFlora側のフェルトが内向き(口に合わせる方)になるようサバゲーマスクに貼り合わせて、モバイルバッテリーをさしたら完成です〜！
&lt;img src=&#34;https://dotstud.io/img/blog/114/21.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;音があるとNeoPixelが反応して光ります！
&lt;img src=&#34;https://dotstud.io/img/blog/114/22.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;マスクつけてライブに遊びに行ったよ&#34;&gt;マスクつけてライブに遊びに行ったよ！&lt;/h3&gt;

&lt;p&gt;さっそくマスクをつけてライブに行ってきた！みんなに&lt;strong&gt;ニンジャスレイヤーみたい&lt;/strong&gt;だと褒められてまじなんかよくわからないけど、くノ一になった気分で嬉しかったっす。
&lt;img src=&#34;https://dotstud.io/img/blog/114/23.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;今回のライブでは以前ギャル電きょうこが記事で紹介した&lt;a href=&#34;https://dotstud.io/blog/gyaruden-party-people-daigoro/&#34;&gt;&lt;strong&gt;光る大五郎&lt;/strong&gt;&lt;/a&gt;とフル装備で光りまくって&lt;strong&gt;振る舞い大五郎&lt;/strong&gt;をしてきた。ビカビカする中お酒をみんなに振る舞う感じ、&lt;strong&gt;まじサグみしかなくて超エモ&lt;/strong&gt;ってなった。
&lt;img src=&#34;https://dotstud.io/img/blog/114/24.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;こんな感じで、&lt;strong&gt;とりま光らせてパーディーにいくとまじアゲぽよ&lt;/strong&gt;になって超楽しくなるから、みんなも&lt;strong&gt;サグい電子工作してパーティーを盛り上げよう&lt;/strong&gt;！卍
&lt;img src=&#34;https://dotstud.io/img/blog/114/25.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>海外の最新IoT事情も。初開催のIoT女子会潜入レポ！</title>
      <link>https://dotstud.io/blog/iot-girls-chantoku-report/</link>
      <pubDate>Mon, 10 Jul 2017 21:26:27 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/iot-girls-chantoku-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、ちゃんとくです。6月1日に開催された「IoT女子会＠ヒカ☆ラボ」の様子をレポートします！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://career.levtech.jp/hikalab/event/detail/98/&#34;&gt;&lt;strong&gt;【女性限定！お土産付き♡】 IoT女子会♪～IoT×海外事情　フランス・イタリア編～&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;今日はIoT女子会です( *˙ω˙*)و  女子力がつよい！&lt;br&gt;初めてモデレータを努めさせていただくので御手柔らかにお願いしますm(*_ _)m &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%92%E3%82%AB%E3%83%A9%E3%83%9C?src=hash&#34;&gt;#ヒカラボ&lt;/a&gt; &lt;a href=&#34;https://t.co/6IwzG74aVn&#34;&gt;pic.twitter.com/6IwzG74aVn&lt;/a&gt;&lt;/p&gt; ちゃんとく( ˙꒳​˙ ) (@tokutoku393) &lt;a href=&#34;https://twitter.com/tokutoku393/status/870227989652414464&#34;&gt;2017年6月1日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/center&gt;
当日は超満員！IoTへの注目度の高さを感じます。&lt;/p&gt;

&lt;h2 id=&#34;iot女子会って&#34;&gt;IoT女子会って？&lt;/h2&gt;

&lt;p&gt;「IoTって最近よく聞くけど何？」「それって可愛いの？楽しいの？」という女性に向けて、&lt;a href=&#34;https://akiba.dmm-make.com/&#34;&gt;&lt;strong&gt;DMM.make AKIBA&lt;/strong&gt;&lt;/a&gt;主催でヒカ☆ラボにて開催されました！&lt;/p&gt;

&lt;p&gt;IoT界隈で活躍されているお二人をゲストに迎え、講演+参加者を交えてのトークセッション形式です。
&lt;img src=&#34;https://dotstud.io/img/blog/104/guest.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;写真左からモデレータちゃんとく・ゲスト講演者の矢島佳澄氏・同じく上村遥子氏&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;はじめに-そもそもiotって何&#34;&gt;はじめに: そもそもIoTって何？&lt;/h2&gt;

&lt;p&gt;まずは「そもそもIoTってなんだ？」というお話からスタート。IoTは&lt;strong&gt;&amp;ldquo;Internet Of Things&amp;rdquo;&lt;/strong&gt;の頭文字を取った言葉ですが、その定義はかなり広い！
&lt;img src=&#34;https://dotstud.io/img/blog/104/chantoku.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;僭越ながら前座を務めさせていただきました(*･ω･)*_ _)&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;「インターネットにつながるモノ」全てをIoTといい、広義にはスマホや携帯ゲーム機もIoTの一種です。現在「流行りのIoT」の文脈で語られるIoTとは、「&lt;strong&gt;今までインターネットには繋がっていなかったモノがインターネットに繋がること&lt;/strong&gt;」と捉えられます。&lt;/p&gt;

&lt;p&gt;具体的にはエアコンや電気をリモートで制御したり、植木の水やりやペットの生体情報を監視したり、持ち物にタグをつけて忘れ物を防止したり、ファッショナブルデバイスだったり……。&lt;strong&gt;近い将来ほとんど全てのモノがIoT化すると考えられます&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;最新のIoT事情はどうなっているのか、IoTとどう付き合っていくべきなのか、お二人の講演とトークセッションを通して探ってみます！&lt;/p&gt;

&lt;h2 id=&#34;iotなプロトタイプ制作-イタリア話-by-矢島佳澄氏&#34;&gt;IoTなプロトタイプ制作 &amp;amp; イタリア話 by 矢島佳澄氏&lt;/h2&gt;

&lt;p&gt;まずは矢島氏のお話から！プロトタイプ制作を得意とする&lt;a href=&#34;http://techika.jp/&#34;&gt;&lt;strong&gt;合同会社techika&lt;/strong&gt;&lt;/a&gt;の代表や「手芸×電子工作」をテーマに活動する&lt;a href=&#34;http://otomedengeibu.com/&#34;&gt;&lt;strong&gt;乙女電芸部&lt;/strong&gt;&lt;/a&gt;の部長を務められています。&lt;/p&gt;

&lt;h3 id=&#34;生活に機能を埋め込む-iotなプロトタイプ制作&#34;&gt;生活に機能を埋め込む！IoTなプロトタイプ制作&lt;/h3&gt;

&lt;p&gt;矢島氏は学生時代から技術寄りなデバイスをたくさん作っていたそう。機能が多すぎて逆に使いづらくなってしまっている多機能リモコンなどへの反骨心から「&lt;strong&gt;もっと生活に落とし込めるIoTを……&lt;/strong&gt;」と、コミュニケーションデバイスやファッショナブルなデバイス作りで活躍されています。
&lt;img src=&#34;https://dotstud.io/img/blog/104/remote.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;乙女電芸部の考えるメイカーズ時代のリモコン&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;写真はルームシューズやアロマディフューザーなど、生活導線に合わせてテレビが作動するスマートリモコンのご紹介。技術主導ではなく「生活に機能を埋め込む」という視点が素敵ですね。&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/iq1cSiPJBO0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;「IoT」という言葉の側面に捕らわれることなく、「&lt;strong&gt;生活の中にテクノロジーを埋め込む&lt;/strong&gt;」という視点でモノづくりを考えることが一つのキーワードになりそうです。&lt;/p&gt;

&lt;h2 id=&#34;iotスタートアップ動向-激アツなフランスiot事情-by-上村遥子氏&#34;&gt;IoTスタートアップ動向 &amp;amp; 激アツなフランスIoT事情 by 上村遥子氏&lt;/h2&gt;

&lt;p&gt;続いてDMM.make AKIBAから上村氏のお話！「&lt;a href=&#34;https://akiba.dmm-make.com/&#34;&gt;&lt;strong&gt;DMM.make AKIBA&lt;/strong&gt;&lt;/a&gt;」はハードウェア開発をトータルでサポートする総合型のモノづくり施設で、上村氏はコミュニティマネージャとしてハードウェア・スタートアップを志す方々の支援やコミュニティ活性化に取り組まれています。
&lt;img src=&#34;https://dotstud.io/img/blog/104/french1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;iotスタートアップ界隈の動向&#34;&gt;IoTスタートアップ界隈の動向&lt;/h3&gt;

&lt;p&gt;日頃から様々なスタートアップ企業やプロダクトに触れている上村氏。IoTの大きな特徴として「体験をモノで受け取ること」が挙げられるそうです。
&lt;img src=&#34;https://dotstud.io/img/blog/104/french2.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;動きやスマホからのアクションに合わせて光る靴・&lt;a href=&#34;http://orphe.shoes/&#34;&gt;Orphe&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;一時「IT革命」として様々なサービスがウェブ化してPCやスマートフォンで受け取るサービスがどんどん普及してきましたが、IoTは「&lt;strong&gt;サービスのモノ化&lt;/strong&gt;」だそう。テクノロジーの受け取り手の障壁がなくなってきていることを感じます。&lt;/p&gt;

&lt;h3 id=&#34;テック熱に燃えるフランス-iot展示会sido-インキュベーション施設の街パリ視察&#34;&gt;テック熱に燃えるフランス！IoT展示会SidO、インキュベーション施設の街パリ視察&lt;/h3&gt;

&lt;p&gt;スタートアップ支援や海外企業誘致など大規模な施策を有する「&lt;strong&gt;La French tech&lt;/strong&gt;」プログラムを国策として展開しているフランス。2016年にはDMM.make AKIBAの母体であるDMM.comとFrench Tech Tokyoが提携協定を結んでいます。&lt;/p&gt;

&lt;p&gt;そんなフランスから熱烈なアプローチを受けフランスはリヨンへ！
EUのIoT展示会&lt;a href=&#34;http://www.sido-event.com/en/&#34;&gt;&lt;strong&gt;SidO&lt;/strong&gt;&lt;/a&gt;に参加され、現地で感じたスタートアップ熱をお話してくれました。SidOは二人の女性が始めたイベントで、IoT界隈での女性の活躍にも刺激を受けたそうです。
&lt;img src=&#34;https://dotstud.io/img/blog/104/french.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;上村氏の発表資料より抜粋・リヨンで開催されたSidO&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;フランスの首都パリは40以上ものインキュベーション施設（賃貸スペースや技術支援を提供する施設）があり、環境整備の手厚さを感じたそうです。
&lt;img src=&#34;https://dotstud.io/img/blog/104/paris.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;上村氏の発表資料より抜粋・パリのインキュベーション施設の一例&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;日本国内では現状IoTプロダクトは男性向けのものが多く、海外や女性向けといった広い視点で活動していくことに可能性がありそうです。&lt;/p&gt;

&lt;h2 id=&#34;トークセッション-女子-iot&#34;&gt;トークセッション 〜女子×IoT〜&lt;/h2&gt;

&lt;p&gt;最後はゲストお二人とモデレータの私を交えてトークセッションに！
&lt;img src=&#34;https://dotstud.io/img/blog/104/talk_session2.png&#34; alt=&#34;&#34; /&gt;
みなさんからリアルタイムに質問を集めてお話するスタイルで進めました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/104/menti.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;当日使用したフォームの一部。一瞬で質問がいっぱいに。&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;IoTの国際事情や事業に関する話から、好きなIoT系男子！？までたくさんの質問が集まり、大盛況でした！&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;「IoT」という言葉自体は一種のトレンドワードで、無理に技術を盛り込もうとするのではなく「&lt;strong&gt;好きなことを自由な発想でカタチにする&lt;/strong&gt;」ということが大事なように感じました。&lt;/p&gt;

&lt;p&gt;IoTへの注目度は高く支援システムやクラウドファンディングの体制も普及してきているので様々なアプローチを取っていけそうです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/104/novelty.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;最後に協賛企業様から素敵なお土産が♡ 素敵な女子会となりました！&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>飾ってカワイイ紫外線メーター制作！IoT入門ハンズオンを開催しました</title>
      <link>https://dotstud.io/blog/wionode-ifttt-handson-report/</link>
      <pubDate>Sun, 02 Jul 2017 01:58:09 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/wionode-ifttt-handson-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、ちゃんとくです。6月30日にIoT入門ハンズオンを開催しました！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/113/01_event.png&#34; alt=&#34;&#34; /&gt;
&lt;center&gt;&lt;a href=&#34;https://dotstudio.connpass.com/event/59240/&#34;&gt;&lt;strong&gt;ノンプログラミングで紫外線をお知らせ！IoT入門ハンズオン ( Wio Node + IFTTT )&lt;/strong&gt;&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;盛況だった現場の様子をレポートします！&lt;/p&gt;

&lt;h2 id=&#34;イベント概要&#34;&gt;イベント概要&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/113/02_image.png&#34; alt=&#34;&#34; /&gt;
今回はスマートフォンからの設定だけでWi-Fiに繋がる&lt;a href=&#34;https://dotstud.io/shop/wionode-social-remote-control/&#34;&gt;&lt;strong&gt;Wio Node&lt;/strong&gt;&lt;/a&gt;とウェブサービス同士を簡単に連携できる&lt;a href=&#34;https://ifttt.com/&#34;&gt;&lt;strong&gt;IFTTT&lt;/strong&gt;&lt;/a&gt;を使って紫外線指数の表示にチャレンジします。&lt;/p&gt;

&lt;p&gt;制作手順はこちら -&amp;gt; 「&lt;a href=&#34;https://dotstud.io/blog/wionode-ifttt-uv-ornament/&#34;&gt;Wio NodeとIFTTTで簡単IoT！紫外線情報を取得してみよう&lt;/a&gt;」&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/113/labo.png&#34; alt=&#34;&#34; /&gt;
会場は&lt;strong&gt;デジタルハリウッド大学のLabProto&lt;/strong&gt;をお借りしました。ラボ感がすてき！&lt;/p&gt;

&lt;h2 id=&#34;wio-nodeをwi-fiにつなげる&#34;&gt;Wio NodeをWi-Fiにつなげる&lt;/h2&gt;

&lt;p&gt;はじめに、Wio NodeのセットアップとしてWi-Fi設定を行います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/113/wifi.png&#34; alt=&#34;&#34; /&gt;
Wio NodeのWi-Fiに繋ぎ、インターネット経由で会場などのWi-Fi情報（SSID、パスワード）を教えてあげる作業です。これが済むと、同じWi-Fiを使う限りWio Nodeは自動でインターネットに繋がります。&lt;/p&gt;

&lt;p&gt;セットアップでつまづいてしまった方は以下の詳細な手順を見てみてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://dotstud.io/docs/wionode-android/&#34;&gt;Wio Node設定 - Android編&lt;/a&gt; / &lt;a href=&#34;https://dotstud.io/docs/wionode-ios/&#34;&gt;Wio Node設定 - iOS編&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ledバーを接続&#34;&gt;LEDバーを接続！&lt;/h2&gt;

&lt;p&gt;Wio Nodeに搭載されているGroveコネクタは、対応のGroveモジュールを刺すだけ。
&lt;img src=&#34;https://dotstud.io/img/blog/113/led.png&#34; alt=&#34;&#34; /&gt;
こちらの設定もスマートフォンのみで行っていきます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;あらかじめサーバとAPIが用意してある&lt;/strong&gt;ので接続後スマートフォンから簡単に機能を試すことができます。
&lt;img src=&#34;https://dotstud.io/img/blog/113/nemu.png&#34; alt=&#34;&#34; /&gt;
数字の指定で光らせることが出来るので表情を変えてみるのもカンタン！&lt;/p&gt;

&lt;p&gt;もちろんAPIとtokenを使って自分でプログラミングすることも。Node.jsでプログラミングする方法について&lt;a href=&#34;https://dotstud.io/blog/seeed-wionode-hands-on/&#34;&gt;&lt;strong&gt;こちらの記事&lt;/strong&gt;&lt;/a&gt;で詳しく紹介しています。&lt;/p&gt;

&lt;h2 id=&#34;iftttとwio-nodeの連携もウェブからサクサク&#34;&gt;IFTTTとWio Nodeの連携もウェブからサクサク&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/113/seeed.png&#34; alt=&#34;&#34; /&gt;
IFTTTにはSeeed（Wio Nodeの母体）との連携があり、設定もウェブからできて簡単です。&lt;/p&gt;

&lt;h2 id=&#34;命を吹き込む-目入れ作業&#34;&gt;命を吹き込む！目入れ作業＜●＞＜●＞&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/113/eye.png&#34; alt=&#34;&#34; /&gt;
基本の機能ができたら、紙とペンでお目々を入れます！会場にはインクの匂いが充満して工作感が！（笑）&lt;/p&gt;

&lt;h2 id=&#34;個性あふれる紫外線メーターが完成&#34;&gt;個性あふれる紫外線メーターが完成！&lt;/h2&gt;

&lt;p&gt;みなさん無事に完成させることができました！
&lt;img src=&#34;https://dotstud.io/img/blog/113/face.png&#34; alt=&#34;&#34; /&gt;
ピアスをつけたチャラ男くんだったり、ねむねむだったり、個性あふれるオーナメントばかりでとても可愛い仕上がりです！（お顔を紹介しきれず残念……）&lt;/p&gt;

&lt;p&gt;完成した我が子と記念撮影。
&lt;img src=&#34;https://dotstud.io/img/blog/113/comp.png&#34; alt=&#34;&#34; /&gt;
簡単な工作でも完成できたモノがあるととても楽しいですよね！&lt;/p&gt;

&lt;h2 id=&#34;今回学んだ技術で発展編にトライ&#34;&gt;今回学んだ技術で発展編にトライ&lt;/h2&gt;

&lt;p&gt;IFTTTには他にもやLINE・Twitter・Gメールといったとにかく豊富なサービスと連携が出来るので、今回紹介した方法を使って簡単にカスタマイズできます。&lt;/p&gt;

&lt;p&gt;また刺すだけで使える&lt;a href=&#34;https://dotstud.io/docs/grove&#34;&gt;Grove規格モジュール&lt;/a&gt;には、様々なセンサやアクチュエータ（サーボ、LED、ディスプレイなどなど）があります。
&lt;img src=&#34;https://dotstud.io/img/blog/113/grove.png&#34; alt=&#34;&#34; /&gt;
それぞれ安価に購入できるので電子工作デビューにはとてもオススメです！（Wio Nodeに対応していないGroveモジュールもあるのでご注意ください）&lt;/p&gt;

&lt;h2 id=&#34;終わりに&#34;&gt;終わりに&lt;/h2&gt;

&lt;p&gt;dotstudioでは毎月IoT入門者向けハンズオンを開催しています。&lt;/p&gt;

&lt;p&gt;興味を持っていただいた方はぜひ下記からご参加ください！
&lt;a href=&#34;https://dotstudio.connpass.com/&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/113/connpass.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
&lt;center&gt;&lt;a href=&#34;https://dotstudio.connpass.com/&#34;&gt;&lt;strong&gt;dotstudioイベントページ&lt;/strong&gt;&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>