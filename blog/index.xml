<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog-rsses on dotstudio（ドットスタジオ）</title>
    <link>https://dotstud.io/blog/index.xml</link>
    <description>Recent content in Blog-rsses on dotstudio（ドットスタジオ）</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2016 dotstudio inc.</copyright>
    <lastBuildDate>Sun, 20 Nov 2016 08:00:00 +0900</lastBuildDate>
    <atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>IoTって結局なに？世界のIoT実例 - 赤ちゃん・子育て編（4選）</title>
      <link>https://dotstud.io/blog/internet-of-things-baby/</link>
      <pubDate>Sun, 20 Nov 2016 08:00:00 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/internet-of-things-baby/</guid>
      
      <description>

&lt;p&gt;モノのインターネットを繋げる「IoT」という用語や技術が話題になっていますが、子育てには役立つのでしょうか？　日本ではまだあまり見かけないデザインやコンセプトのIoT製品を独断と偏見で紹介します。&lt;/p&gt;

&lt;h2 id=&#34;sproutling-赤ちゃんのステータスを把握できる足首バンド型デバイス&#34;&gt;Sproutling：赤ちゃんのステータスを把握できる足首バンド型デバイス&lt;/h2&gt;

&lt;iframe width=&#34;715&#34; height=&#34;402&#34; src=&#34;https://www.youtube.com/embed/slyXHix8hLg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&#34;http://sproutling.com/&#34;&gt;Sproutling&lt;/a&gt;は赤ちゃんの足首につけるバンド型のデバイスです。スマートフォンで、赤ちゃんが今「寝ている」「泣いている」かといった状態や、心拍数や体温なども確認できます。「あなたの子育てを少し楽にしてくれる」ようです。&lt;/p&gt;

&lt;p&gt;泣いているかどうかがすぐにわからないくらい大きめの家（特に海外など）に住んでいる方におすすめのガジェットかなと思いました。&lt;/p&gt;

&lt;h2 id=&#34;owlet-きちんと呼吸をしているかを確認するための足首バンド型デバイス&#34;&gt;Owlet：きちんと呼吸をしているかを確認するための足首バンド型デバイス&lt;/h2&gt;

&lt;iframe width=&#34;715&#34; height=&#34;402&#34; src=&#34;https://www.youtube.com/embed/MJj_TNrIFdU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&#34;http://www.owletcare.com/&#34;&gt;Owlet&lt;/a&gt;も足首につけるタイプのデバイスです。心拍数をリアルタイムで確認できて、&lt;strong&gt;万が一呼吸が止まったらアラートが出ます&lt;/strong&gt; 。また、体温や睡眠の質、睡眠の体制などもアプリが教えてくれるそうです。&lt;/p&gt;

&lt;p&gt;病院で心拍数を計る際につける医療器具に使われているパーツを、バンドの中に入れています。&lt;/p&gt;

&lt;p&gt;YouTubeの紹介動画に登場する製作メンバーらにも子供がいて、実際に器具を使って役に立ったと語っている姿が印象的でした。&lt;/p&gt;

&lt;h2 id=&#34;mimo-赤ちゃんがきちんと眠れているかを確認できるウェアラブルデバイス&#34;&gt;mimo：赤ちゃんがきちんと眠れているかを確認できるウェアラブルデバイス&lt;/h2&gt;

&lt;iframe width=&#34;715&#34; height=&#34;402&#34; src=&#34;https://www.youtube.com/embed/7vPt0V2yYmo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;赤ちゃんがよく眠れるように作られたのが&lt;a href=&#34;http://mimobaby.com/&#34;&gt;mimo&lt;/a&gt;です。小さな緑のカメ型のアイテムで、専用の服（綿）かベッドのマットに取り付けることができます。&lt;/p&gt;

&lt;p&gt;Bluetooth/WiFi経由でスマートフォンと接続して、赤ちゃんのステータスや部屋の温度をアプリから確認できます。また、睡眠データもタイムラインで表示。何時間起きていた/眠っていたかを一目で把握できます。自動で記録できるのがいいですね。&lt;/p&gt;

&lt;h2 id=&#34;withings-成長をアプリで把握できる体重計&#34;&gt;Withings：成長をアプリで把握できる体重計&lt;/h2&gt;

&lt;iframe width=&#34;715&#34; height=&#34;402&#34; src=&#34;https://www.youtube.com/embed/FZjewfWfhzg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Withingsは子供用の成長記録ツールです。赤ちゃんの体重を計測したり、ミルクや食べ物などを登録してどれくらい栄養を摂取したかを記録できます。&lt;/p&gt;

&lt;p&gt;今では大人用の健康管理ができる体重計が続々と登場していますが、子供用の体重計は2012年に登場したこのWithingsのみのようです。&lt;/p&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;子育てに役立つIoT製品は世界で続々と登場しています。これからも赤ちゃんの役にたつ製品が生まれ、テクノロジーが子育てのちょっとしたサポートになってくれそうです。&lt;/p&gt;

&lt;p&gt;自分の生活の範囲であれば、マイコンボード（小さなコンピュータ）やセンサーといった電子パーツを使って、IoTを自作することもできます。dotstudioではそういったIoTに興味のある方向けに、パーツを集めたキットも販売しているので、自作IoTに挑戦してみたい方は利用してみてください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;センサーなどを使ってみたい方向け：&lt;a href=&#34;https://dotstud.io/projects/nefry-connect-internet/&#34;&gt;Nefry&lt;/a&gt;、&lt;a href=&#34;https://dotstud.io/projects/wionode-social-remote-control/&#34;&gt;Wio Node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;はんだづけを練習したい方向け：&lt;a href=&#34;https://dotstud.io/projects/led-keychain-original-handa/&#34;&gt;光るキーホルダー制作キット&lt;/a&gt;・&lt;a href=&#34;https://dotstud.io/projects/neopixel-ring-gemma-earrings/&#34;&gt;光るイヤリング制作キット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JavaScriptでモータなどを動かしてみたい方向け：&lt;a href=&#34;https://dotstud.io/projects/nodebots-seeeduino-for-beginners/&#34;&gt;Node.jsキット&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;それではまた。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>中国・深センの街で見た、日本にはないテクノロジーに感動した</title>
      <link>https://dotstud.io/blog/shenzhen-technology-examples-diary/</link>
      <pubDate>Thu, 10 Nov 2016 11:30:06 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/shenzhen-technology-examples-diary/</guid>
      
      <description>

&lt;p&gt;こんにちは、dotstudioエディターのうららです。dotstudioは2016年10月に、「中国の秋葉原」と言われている &lt;strong&gt;深セン&lt;/strong&gt; へ訪問しました。香港の近くにあるこの街は、技術的な新しさと街の古さなどが集まったちぐはぐな場所。&lt;/p&gt;

&lt;p&gt;街には「日本にも来てほしい」と思っていまうような技術がたくさんあり、めちゃくちゃ感動したのでまとめます！&lt;/p&gt;

&lt;h2 id=&#34;深センは都会と下町が混じった発展中の街-という印象&#34;&gt;深センは都会と下町が混じった発展中の街（という印象）&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/049/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;深センの雰囲気は、秋葉原〜御徒町をイメージさせるような下町でした。電気屋さんやデパートが並び、その間に飲食店や屋台がポツポツと混在しています。&lt;/p&gt;

&lt;p&gt;特にデパートなんかは、例えるなら伊勢丹でしょうか、かなり大きく綺麗で何棟も建っていたのですが、その前の道では工事をしていたり、地面の土がむき出しになっていたりと舗装されていない箇所が多々ありました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/049/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;工事現場の横を、歩行者がふつうに歩いていました。入場規制や通行止めなどはとくにありません。まさに「&lt;strong&gt;いまこの瞬間も発展し続けている街&lt;/strong&gt;」でした。某テーマパークのように「いつまでも完成しない」、そんなようなエネルギーに溢れていました（？）&lt;/p&gt;

&lt;h2 id=&#34;自転車の9割が電動だった&#34;&gt;自転車の9割が電動だった&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/049/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;街には、自転車がひっきりなしに走っていましたが、自転車のほとんどがバッテリーで走る電動自転車！　ペダルがついているにも関わらず、誰もペダルを濃いでいませんでした。そして（これも驚いたのですが）だいたい2人乗り用の椅子がついています。&lt;/p&gt;

&lt;p&gt;自転車の見た目はオンボロのものがほとんどですが、アクセル入れるとぶおーんと進んでいきます。自分で漕ぐ自転車しかないと思いますが、これは日本にもほしい。普通のバイクもぶんぶん走っていました。&lt;/p&gt;

&lt;h2 id=&#34;切符をタッチできる&#34;&gt;切符をタッチできる&lt;/h2&gt;

&lt;p&gt;深センには地下鉄が走っています。荷物のスキャンをしないと入れないなどセキュリティも少し厳しかったです。電車に乗るときに切符を買いましたが、なんと「コイン型」でした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/049/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;しかもこれを改札にタッチできます。改札を出るときは、自動販売機のような投入口にコインを入れると改札が開きます。切符なのにSuicaのような機能があるって便利！　すごい〜〜！　紙印刷しないし繰り返し使えるしエコじゃん！　と一人で感動していました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/049/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;場所にもよりますが、駅をタッチして切符を変える券売機もありました。直感的でわかりやすい。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/049/06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;日本でも駅のホームに「電車がまいります」という案内が出されますが、中国の駅ではモニターで表示されていました。電車に乗る際の注意勧告や広告が流れています。&lt;/p&gt;

&lt;h2 id=&#34;便座カバーが回る&#34;&gt;便座カバーが回る&lt;/h2&gt;

&lt;iframe width=&#34;715&#34; height=&#34;402&#34; src=&#34;https://www.youtube.com/embed/fdZ3ZVGdCh4&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;女子トイレだけかもしれませんが、なぜかトイレの便座カバーが自動回転しました。レストランのお手洗いだったと思います。そこ回る意味あるのか……？&lt;/p&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/049/07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ということで少ないのですが個人的に感動した深セン（中国）のテクノロジーを紹介しました。自転車も切符もそうですが、実際の生活で役にたつものが特に発展しているなあと感じました。日本の切符もいつかタッチできるようになるのでしょうか。待ちわびてます！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>今年のクリスマスは遊んで学ぶ!?子供のプレゼントにおすすめなIoT/電子工作おもちゃ3選</title>
      <link>https://dotstud.io/blog/iot-for-kids-toys/</link>
      <pubDate>Wed, 09 Nov 2016 17:30:48 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/iot-for-kids-toys/</guid>
      
      <description>

&lt;p&gt;毎年、恒例行事のクリスマス。子供のころは「何をもらえるか」とワクワクしますが、年を重ねるにつれ与える側になってしまいます。お子さんがいる方は、プレゼントに「何を贈ろうか」と頭を悩ませている方も多いのではないでしょうか。&lt;/p&gt;

&lt;p&gt;とは言っても、この世にあるものはすべて何かを学べるもの。そこに、&lt;strong&gt;新しい技術に触れられるようなエッセンス&lt;/strong&gt; が加えられた、&lt;strong&gt;遊びながら学べる&lt;/strong&gt; 電子工作やIoTを学べるガジェットを紹介します！&lt;/p&gt;

&lt;h2 id=&#34;スマホでおもちゃを操れる乾電池-mabeee&#34;&gt;スマホでおもちゃを操れる乾電池「Mabeee」&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/050/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mabeee.mobi/&#34;&gt;Mabeee（マビー）&lt;/a&gt;は単三電池で動くおもちゃに使えるアイテム。単四電池にMabeeeをセットして単三電池としてセットして、専用のスマートフォンアプリとBluetoothを経由してつなぐだけで、おもちゃをコントロールできるようになります。&lt;/p&gt;

&lt;p&gt;スマホを振ったり、傾けたり、声を出したり、スマホから遠ざけたりすることでおもちゃをコントロールできます（&lt;a href=&#34;http://mabeee.mobi/support/&#34;&gt;詳しくはこちら&lt;/a&gt;）。また、タイマーやレバー、スイッチの機能もあります。ラジコンやモノレールなどの乗り物系おもちゃによく単三電池が使われていますよね。そういったおもちゃをすでに持っている子には特におすすめです。&lt;/p&gt;

&lt;iframe width=&#34;715&#34; height=&#34;402&#34; src=&#34;https://www.youtube.com/embed/Rd4uUII6UGI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;商品の紹介動画はこちらからどうぞ（動画の後半で登場するはみがきとスタンドライトには対応していません）。&lt;a href=&#34;https://dotstud.io/blog/mabeee-summer-horror-comic/&#34;&gt;dotstudioのメンバー（大人）が遊んでみた記事&lt;/a&gt;もぜひご覧ください。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;購入&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mabeee.mobi/shops/&#34;&gt;Mabeee公式サイト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;makey-makey&#34;&gt;Makey Makey&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/050/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://makeymakey.com/&#34;&gt;Makey Makey&lt;/a&gt;は電気を通すものをクリップでつなぐと、それをスイッチにできるアイテムです。何が電気を通すか、通さないかを学びながら遊べます。電子製品や教育に力を入れている、アメリカのSparkFun Electronicsが制作しました。&lt;/p&gt;

&lt;p&gt;パソコンのキーボードにある上下左右の方向キーやSPACEバー、一部のアルファベットのキーと連携できます。また、マウスのクリックとも接続可能。&lt;/p&gt;

&lt;iframe width=&#34;715&#34; height=&#34;402&#34; src=&#34;https://www.youtube.com/embed/rfQqh7iCcOU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;電気を通すものならなんでもパソコンと繋げられるので、たとえば鉛筆で塗ったイラストとコードを繋げて、イラストをタッチするとマウスのクリックになる、なんてことも実現できます。&lt;/p&gt;

&lt;p&gt;私は「バナナでツイート」に挑戦してみました。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;購入&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://shop.makeymakey.com/&#34;&gt;Makey Makey公式サイト（英語）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.switch-science.com/catalog/1109/&#34;&gt;Switch Science（日本語）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;legoで遊びながらプログラミングを学ぶ-wedo2-0&#34;&gt;LEGOで遊びながらプログラミングを学ぶ「WeDo2.0」&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/050/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;プログラミングは日本の中学教育カリキュラムに導入され、英語や同様に今後の必須技能と呼ばれています。そんなプログラミングを、発想力や構築力、問題解決力などを遊びながら身につけられるLEGOと一緒に学べるきっと「WeDo 2.0」が登場しました。&lt;/p&gt;

&lt;iframe width=&#34;715&#34; height=&#34;402&#34; src=&#34;https://www.youtube.com/embed/vRLEvsuJ0T8&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;物体を検知するモーションセンサーや、傾きを検知するチルトセンサー、モーターなどを組み込んだブロックがキットに含まれています。LEGOでロボットを組み立てて、物体を検知すると止まるようにするなど複雑な操作もプログラムを組みながら指示できます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://liginc.co.jp/305524&#34;&gt;親子で参加するワークショップ&lt;/a&gt;も不定期で開催されています。&lt;/p&gt;

&lt;p&gt;英語ですが「&lt;a href=&#34;http://www.internetoflego.com/&#34;&gt;Internet of LEGO&lt;/a&gt;」という、LEGOをインターネットに繋げるサイトもありました。スマホアプリで操作できる「Wio Link」とLEGO「Palace Cinema」という映画の街セットを組み合わせて&lt;a href=&#34;http://www.internetoflego.com/palace-cinema-wio-link-addressable-leds-node-red/&#34;&gt;きらびやかな映画館&lt;/a&gt;を作ったり、ほかにもさまざまな街作成をLEGOとIoTでしているようです。電子工作の知識をこういう風に応用できたら楽しそうですね〜〜！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;購入&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.afrel.co.jp/lineup/wedo2-0&#34;&gt;株式会社アフレル&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;クリスマスにおすすめのプレゼント候補をまとめてみました。私自身どれも触ってみましたが、個人的にはMakey Makeyがアイデア次第でおもしろいことができそうなので気に入っています。若ければ若いほど常識にとらわれない豊かな発想が生まれると思うので、そのアイデアを実現できるようにガジェットを使ってみてください。ではまた！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>かなり盛り上がった！ものづくりの祭典＠中国 #MakerFaireShenZhen</title>
      <link>https://dotstud.io/blog/maker-faire-shenzhen-report/</link>
      <pubDate>Tue, 08 Nov 2016 19:30:18 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/maker-faire-shenzhen-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、dotstudioエディターのうらら（&lt;a href=&#34;http://twitter.com/uraranbon&#34;&gt;@uraranbon&lt;/a&gt;）です。&lt;/p&gt;

&lt;p&gt;2006年から始まったものづくりの祭典「Maker Faire」は、いまや世界の20カ国くらいに広まり、勢いを伸ばし続けています。日本でも毎年夏におこなわれる恒例行事となりましたが、dotstudioは日本を飛び出し、中国・深センでおこなわれた「&lt;a href=&#34;http://www.makerfaireshenzhen.com/&#34;&gt;Maker Faire Shenzhen 2016&lt;/a&gt;（MFSZ）」に参加してきました！　80以上ものブースに世界各国からのものづくりが展示されていました〜〜！&lt;/p&gt;

&lt;h2 id=&#34;会場の-海上世界-の広さに絶句&#34;&gt;会場の「海上世界」の広さに絶句&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;今回、中国の深センでおこなわれた「Maker Faire Shenzhen」。香港の近くの場所にあり、日本から飛行機では4時間程度の距離です。会場となるのは「海上世界」。中国に到着してからすぐに、何十個ものブースが出展されるイベント会場へ下見に行ったのですが……&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;街中に突然、船がある場所でした。でかっ！　&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;なかなか広そうです。この一角は、地元の人が集まるショッピングモールとのこと。一周してみましたがなかなか広かったです。あっ奥の方にブースが見える。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;入り口発見。設営がかなりしっかりしてます。&lt;/p&gt;

&lt;h2 id=&#34;microsoftやintelといった大手企業も参加&#34;&gt;MicrosoftやIntelといった大手企業も参加&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/04-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;もともと予定していた開催日は、10月21日（金）〜10月23日（日）でしたが、台風「Haima」の影響で10月23日（日）〜10月24日（月）に後ろ倒し。3日間開催予定が、2日間に圧縮。帰りの飛行機の都合もあり、私たちは23日のみの参加となりました。幸いにも1日で1周できる広さではありました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;いろんな企業が参加していましたが、会場のゲート近くには大手企業が軒を連ねていました。まずはintel。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;こちらはMicrosoft。顔認識する自動販売機を実演していました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;GROVEやWio Node、でおなじみの&lt;a href=&#34;https://www.seeedstudio.com&#34;&gt;Seeed&lt;/a&gt;。いろんなガジェットが紹介されていました！&lt;/p&gt;

&lt;h2 id=&#34;見たことのないガジェットがあちこちに&#34;&gt;見たことのないガジェットがあちこちに&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;地面に砂で字を書きながら進むマシン。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;きれいな字です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;こちらはペット用のスマート首輪。文字が流れるようです。詳細が読めない。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;台湾発の超小型のゲーム機「WiFiBoy（ESP32）」というもの。子供がプレイしているところを覗いたら、テトリスやってました。これMaker Faire Tokyoにも出展していたそうです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/12.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;こちらのブースは全て木でできていました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/13.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;プラネタリウムもやってました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/14.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ドラムや楽器を演奏するロボット。体を揺らしながらリズムを刻む様子をみんなカメラに収めていました。Maker Faire Tokyoでも見かけた気がします！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/15.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;VRの体験コーナーもありました！（3回100元）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/16.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ロボット同士のバトルも開催されていました！　周りには人だかりが。&lt;/p&gt;

&lt;p&gt;という感じで、日本で見たことがあるものも出展されていましたが、ほとんどが初見のガジェットでした。（でも説明が読めなくて悔しい）アートとおもちゃ系が多かったように感じました。&lt;/p&gt;

&lt;h2 id=&#34;来場者は-たまたま来た地元の人-が多かった印象&#34;&gt;来場者は「たまたま来た地元の人」が多かった印象&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/17.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;dotstudioとして展示したのは、私たちが普段PRしたり販売しているIoTガジェットらです。幸いにもdotstudioは人通りの多い場所で展示できて、人が途絶えませんでした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/18.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;そして、本当にたまたま、私たちも日本で販売している &lt;strong&gt;Wio Nodeを作ったSeeedのエンジニアさんと会いました&lt;/strong&gt;。驚いた。手に持っている箱が裏向きですね。&lt;/p&gt;

&lt;h2 id=&#34;あっと言う間に終わったmfsz-締めはaki-party&#34;&gt;あっと言う間に終わったMFSZ、締めはAki Party！&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/19.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;17時くらい閉めるムードに。Maker Faire Tokyoの後に秋葉原でおこなわれた「Aki Party」がここでも開催されるということで参加しました。日本からの参加者さんらと交流できました。&lt;/p&gt;

&lt;p&gt;室内で &lt;strong&gt;ドローンが飛ぶなど&lt;/strong&gt; 、みんな楽しそうでした。&lt;/p&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/051/20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;▲Aki Partyにて：床に投影されたMaker Faireのマスコットキャラクター&lt;/p&gt;

&lt;p&gt;ということで1日しか参加できなかったMaker Faire Shenzhenですが、中国にも電子工作やテクノロジーが盛り上がっていることが認識できた素敵なイベントでした。&lt;/p&gt;

&lt;p&gt;ショッピングモール周辺で開催されたこともあり、モールに来たついでにイベントも周ってみているという人が多そうな印象でした。「&lt;strong&gt;IoTってなに？&lt;/strong&gt;」という人も。反対に、おもちゃをスマホアプリから操作できる日本のデバイス「Mabeee」を知っている人もいるなど幅広いお客さんが集まりました。それって超素敵。&lt;/p&gt;

&lt;p&gt;日本は幕張メッセなどのイベント会場でおこなわれ、しかも入場料もかかるので参加する人はおのずとテクノロジー関連に興味のある方になると思います。そういった意味では、&lt;strong&gt;深センのMaker Faireは広い人に解放されていて、新しい技術に触れる場になっていた&lt;/strong&gt; ように感じました。&lt;/p&gt;

&lt;p&gt;今度はまた別の国のMaker Faireに参加してみたいです！&lt;/p&gt;

&lt;p&gt;[]()&lt;/p&gt;

&lt;p&gt;ではまた！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to set up your Nefry for the first time</title>
      <link>https://dotstud.io/blog/nefry-enenglish-how-to/</link>
      <pubDate>Fri, 04 Nov 2016 10:00:03 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/nefry-enenglish-how-to/</guid>
      
      <description>

&lt;p&gt;Hi I’m Wami. I’m a university student who is learning networking in Japan. I’m into electronics since 2014, and I’ve made an IoT device named “Nefry” which is as small as FRISK.&lt;/p&gt;

&lt;p&gt;This is a very easy and short tutorial on how to set up the development environment on your Nefry and get started programming immediately. Arduino Software (IDE) needed.&lt;/p&gt;

&lt;h2 id=&#34;what-is-nefry&#34;&gt;What is Nefry?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Nefry is an IoT Device which allows you to connect internet very easily. You also can  attach GROVE sensors to it. Nefry does not need complicated setting thus you can spend more time with making your ideas true.&lt;/p&gt;

&lt;p&gt;Nefry also can be connected with useful web services such as &lt;a href=&#34;https://mlkcca.com/&#34;&gt;milkcocoa&lt;/a&gt; (real-time operating system) or &lt;a href=&#34;https://ifttt.com/&#34;&gt;IFTTT&lt;/a&gt;. Since Nefry works with mobile battery, you can put Nefry anywhere you want.&lt;/p&gt;

&lt;h2 id=&#34;let-s-get-started&#34;&gt;Let&amp;rsquo;s get started&lt;/h2&gt;

&lt;p&gt;You can make a program for Nefry on Arduino Software (IDE). Arduino is an open-source electronics platform which provides “Arduino language” to develop hardwares easier.&lt;/p&gt;

&lt;p&gt;Arduino Software (IDE) is a software for writing Arduino language.&lt;/p&gt;

&lt;h3 id=&#34;downloading-arduino-software-ide&#34;&gt;Downloading Arduino Software (IDE)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can get the latest version of Arduino Software (IDE) from the &lt;a href=&#34;https://www.arduino.cc/en/Main/Software&#34;&gt;download page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If you are using Windows, choose &amp;ldquo;Windows Installer”. If you are using Mac, click &amp;ldquo;Mac OS X” to install.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After choosing the software, the page above will come up. If you want to donate and donate, choose &amp;ldquo;CONTRIBUTE &amp;amp; DOWNLOAD”. Otherwise click &amp;ldquo;JUST DOWNLOAD” to start downloading.&lt;/p&gt;

&lt;h4 id=&#34;when-a-popup-like-this-comes-up-needed-uninstalling&#34;&gt;When a popup like this comes up (Needed uninstalling)&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If a popup like this comes up, that means you have already installed old version of Arduino Software (IDE). Click “OK” to uninstall the old one.&lt;/p&gt;

&lt;p&gt;If not, please skip until next headline.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;installing-arduino-software-ide&#34;&gt;Installing Arduino Software (IDE)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If you do not have any problems with Licence Agreement, click on the “I Agree” button to the next step.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can select options (There is no problem with all checked though). Click “Next” to following step.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can browse the installation location.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/12.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Please wait for a while until install finishes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/13.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After the installation finishes, you will see COMPLETED on the desplay.&lt;/p&gt;

&lt;h3 id=&#34;activating-arduino-software-ide&#34;&gt;Activating Arduino Software (IDE)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/14.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After you have installed the Arduino Software (IDE), there will be an icon like this on you desktop. Double click to run Arduino Software (IDE).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/15.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Arduino Software (IDE) will automatically start-up.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/16.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can now start programming. Well done!&lt;/p&gt;

&lt;h2 id=&#34;installing-the-nefry-board&#34;&gt;Installing the Nefry board&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/17.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Arduino Software (IDE) does not support Nefry. To activate Nefry, you need to install the “board”. Open “Preferences”, and type the URL below to the new Additional Boards Manager URLs option.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wamisnet.github.io/package_nefry_index.json&#34;&gt;http://wamisnet.github.io/package_nefry_index.json&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/18.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Click &amp;ldquo;OK&amp;rdquo; to save the new preference settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/19.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Open the Boards Manager by navigating to the Tools &amp;gt; Board menu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You will then be able to select Nefry and install the board. If you can’t find Nefry, please reconfirm you have typed the correct URL at Additional Boards Manager URLs option.&lt;/p&gt;

&lt;h4 id=&#34;making-install-clean&#34;&gt;Making install clean&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/21.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Click on &amp;ldquo;Install&amp;rdquo; button to install the latest version (v1.6.12 2016/11/01). Download will begin in a moment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/22.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;“INSTALLED” comes up when the installation is completed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/23.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can now choose Nefry V2 on the category drop down menu (Tools &amp;gt; Board “Nefry” &amp;gt; Nefry V2). These settings are needed at the first time.&lt;/p&gt;

&lt;p&gt;Once you have done the primary settings, you can start from writing codes.&lt;/p&gt;

&lt;h4 id=&#34;update-to-the-latest-version&#34;&gt;Update to the latest version&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/24.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Some troubles may cause if the old version of the board remains in your computer. You need to uninstall it by “Delete” button. Please wait for a while until uninstall is completed.&lt;/p&gt;

&lt;p&gt;After uninstalling, you can now install the newest version of Arduino Software (IDE). Please refer the headline “Making install clean” above.&lt;/p&gt;

&lt;h2 id=&#34;writing-the-code&#34;&gt;Writing the code&lt;/h2&gt;

&lt;p&gt;So now let’s write the program for Nefry. Nefry runs with the same codes with Arduino. When you run Arduino Software (IDE), following program should be written from the beginning.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void setup(){

}

void loop(){

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/25.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Let me briefly explain about these codes.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void setup()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this part, you write processes to be carried out only once at start-up. For example, settings for input and output pin, or initial setting for sensors.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void loop()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this part, you write processes to be repeatedly carried out during the boot. For example, LED blinking or sensor data acquisition.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/26.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To wrap up, it is like this.&lt;/p&gt;

&lt;h3 id=&#34;using-led&#34;&gt;Using LED&lt;/h3&gt;

&lt;p&gt;This time, we will blink full-color LED randomly. Please delete all statements written on Arduino Software (IDE), and paste the program below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;Nefry.h&amp;gt;
//full-color LED, the color changes randomly
void setup() {
  Nefry.println(&amp;quot;fullColorLED!&amp;quot;);
  randomSeed(analogRead(A0));
}
int red,green,blue;
void loop() {
  red=random(255);//random function reply numbers from 0 to 255 randomly
  green=random(255);
  blue=random(255);
  Nefry.setLed(red,green,blue);//LED blinks randomly
  String color=&amp;quot;Red:&amp;quot;;color+=red;
  color+=&amp;quot; Green:&amp;quot;;color+=green;
  color+=&amp;quot; Blue:&amp;quot;;color+=blue;
  Nefry.println(color);//Nefry console shows the color
  Nefry.ndelay(1000);//wait a second
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/27.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Nefry functions are used in some places. I summarized these on &lt;a href=&#34;http://qiita.com/wamisnet/items/e44812eb6d6fded7af26&#34;&gt;Qiita&lt;/a&gt;. Please have a look if you are interested.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/28.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You need to save the program after writing the code. The program will be saved in the location where you chose (Don&amp;rsquo;t forget the place!).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/29.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Click on &amp;ldquo;Export compiled Binary” to convert the file for Nefry. It takes a little time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/30.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It will display &amp;ldquo;Done compiling” if there is no problem with the program. If there is, Arduino Software (IDE) shows you where you have to fix (such as &amp;ldquo;no semicolons&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;In the following part, we will write a program to Nefry.&lt;/p&gt;

&lt;h3 id=&#34;writing-program-on-nefry&#34;&gt;Writing program on Nefry&lt;/h3&gt;

&lt;p&gt;Finally let’s write the program on Nefry. Please connect Nefry to the USB port of mobile battery or PC.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/31.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After a while, there will be &amp;ldquo;Nefry-○○○○” on your Wi-Fi. Please connect to it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/32.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When you have done connecting, main page of Nefry automatically opens. If not, please enter the URL below.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://192.168.4.1&#34;&gt;http://192.168.4.1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can do various settings on this page.&lt;/p&gt;

&lt;p&gt;To write program on Nefry, you need to change Nefry to writing mode. To change to writing mode, click on &amp;ldquo;setup Module”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/33.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Nefry will automatically restart itself.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/34.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I might as well tell you what happens when you click on &amp;ldquo;Next page” at setup Module. At there, you can check networking information such as Mac address and IP address.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/35.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So let’s write the program on Nefry. Click on &amp;ldquo;Upload Sketch” to open the page. There will be “参照” button where you can choose your file. (You may be displayed different design than this due to your browser.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/36.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Open “arduino.bin”. (Please make sure you have selected the correct file.
(If wrong, Nefry will stop starting up at the worst time so please be aware)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/37.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Click on “Upload”. When uploading is completed, Nefry automatically restarts to update the program.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/38.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now, LED shoule be blinking like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/39.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Besides, there is also a page called &amp;ldquo;Nefry Console” where you can check the status of Nefry.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/40.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Also, at “Web Sketch Download”, you can download program to update your Nefry.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/047/41.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;At &amp;ldquo;Setup WiFi”, you can connect Nefry to your own Wi-Fi.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s all for setting up you Nefry. I know it wouold be hard to make developing environment for the first time, but once you have created, that’s all.&lt;/p&gt;

&lt;p&gt;Thanks for reading and hope Nefry helps you to try IoT easier.&lt;/p&gt;

&lt;p&gt;Original Article (Japanese) : &lt;a href=&#34;https://liginc.co.jp/298161&#34;&gt;https://liginc.co.jp/298161&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GR-COTTONで見た目も可愛く電子工作！部屋の温度をブラウザからチェックしてみよう</title>
      <link>https://dotstud.io/blog/milkcocoa-grcotton-realtime-temperature/</link>
      <pubDate>Thu, 03 Nov 2016 10:00:00 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/milkcocoa-grcotton-realtime-temperature/</guid>
      
      <description>

&lt;p&gt;こんにちは！　dotstudioのエディターのうららです。先日、バックエンドサービス「Milkcocoa」を題材にしたLT大会「 &lt;strong&gt;&lt;a href=&#34;http://mlkcca.connpass.com/event/34936/&#34;&gt;紅白Milkcocoa合戦&lt;/a&gt;&lt;/strong&gt; 」に参加してきました。&lt;/p&gt;

&lt;p&gt;そこで発表した &lt;strong&gt;Webサイト上から部屋の温度がわかる&lt;/strong&gt; という仕組みが何かしらに役に立つ気がするので本記事にまとめておこうと思います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;こんな人におすすめ&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;部屋の気温をブラウザ上からチェックできるようにしたり、データとして貯めたい人（ペットを飼ってる人や観葉植物を育てている人におすすめ）&lt;/li&gt;
&lt;li&gt;電子工作には興味があるけれど、せっかくなら見た目が可愛いアイテムで挑戦したい人&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;全体の構成&#34;&gt;全体の構成&lt;/h2&gt;

&lt;p&gt;マイコンボード「GR-COTTON」でセンサーの値を取得し、バックエンドサービス「Milkcocoa」を使いブラウザ側にデータを送ります。&lt;/p&gt;

&lt;p&gt;MacとGR-COTTONをUSB接続し、Node.jsを経由してMilkcocoaにデータを送ります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;milkcocoa&#34;&gt;Milkcocoa&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/01_milkcocoa.png&#34; alt=&#34;&#34; /&gt;
&lt;a href=&#34;https://mlkcca.com&#34;&gt;milkcocoa&lt;/a&gt;とは、&lt;strong&gt;JavaScriptのソースコードを1行挿入するだけで、リアルタイム通信ができるようになる&lt;/strong&gt; サービスです。リアルタイム通信にはバックエンドの構築が必要ですが、そこの手間が省けます。&lt;/p&gt;

&lt;h3 id=&#34;gr-cotton&#34;&gt;GR-COTTON&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/02_cotton.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;こちらが今回使うマイコンボード「&lt;a href=&#34;http://gadget.renesas.com/ja/product/cotton.html&#34;&gt;GR-COTTON&lt;/a&gt;」です。ルネサスエレクトロニクスが企画する「&lt;a href=&#34;http://gadget.renesas.com/ja/&#34;&gt;がじぇっとるねさす&lt;/a&gt;（通称がじぇるね）」が作っています。&lt;/p&gt;

&lt;p&gt;最初からタッチセンサーや気温センサー、フルカラーLEDを搭載しています。しかもその &lt;strong&gt;タッチセンサーが星型&lt;/strong&gt; で、基盤も白をベースにしているので、見た目がものすごく可愛いんです！　&lt;/p&gt;

&lt;h2 id=&#34;作り方&#34;&gt;作り方&lt;/h2&gt;

&lt;p&gt;では早速作ってみましょう！　大きく分けると次の4つの作業をします。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Milkcocoaの登録をする&lt;/li&gt;
&lt;li&gt;GR-COTTONのチュートリアル1〜10をおこなう&lt;/li&gt;
&lt;li&gt;app.jsをビルドする&lt;/li&gt;
&lt;li&gt;Webサイトを作る（HTMLのみでOK）&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;1-milkcocoaの登録をする&#34;&gt;1. Milkcocoaの登録をする&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/04_milkcocoa.png&#34; alt=&#34;&#34; /&gt;
&lt;a href=&#34;https://mlkcca.com/&#34;&gt;トップページ&lt;/a&gt;からログインして、「新しいアプリを作る」をクリックします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/05_milkcocoa.png&#34; alt=&#34;&#34; /&gt;
アプリ名は自分で好きなものを登録します。ここでは「GR-COTTON」にしました。&lt;/p&gt;

&lt;p&gt;これだけでMilkcocoa側の準備はOKです。&lt;/p&gt;

&lt;h3 id=&#34;2-gr-cottonのチュートリアル1-10をおこなう&#34;&gt;2. GR-COTTONのチュートリアル1〜10をおこなう&lt;/h3&gt;

&lt;p&gt;がじぇっとるねさすが提供している、こちらの&lt;a href=&#34;http://gadget.renesas.com/ja/product/cotton_sp1.html&#34;&gt;チュートリアル&lt;/a&gt;を参考に、1〜10まで進めてください。&lt;/p&gt;

&lt;h3 id=&#34;3-node-jsのプログラムを用意する&#34;&gt;3. Node.jsのプログラムを用意する&lt;/h3&gt;

&lt;p&gt;シリアル通信でCOTTONとMilkcocoaの橋渡しをするプログラムを用意します。以下のapp.jsをプログラムに記入して実行してみてください。Node.jsで作成しています。&lt;/p&gt;

&lt;h4 id=&#34;app-js&#34;&gt;app.js&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;// Milkcocoaの設定
const MilkCocoa = require(&#39;milkcocoa&#39;);
const milkcocoa = new MilkCocoa(&#39;your api key&#39;);
const ds = milkcocoa.dataStore(&#39;status&#39;);

// シリアル通信の設定
const SerialPort = require(&#39;serialport&#39;);
const portName = &#39;COM6&#39;; // IDE for GRとかで調べる
const serial = new SerialPort(portName, {
  baudrate: 9600,
  flowcontrol: false,
  parser: SerialPort.parsers.readline(&amp;quot;\n&amp;quot;)
});

serial.on(&#39;open&#39;, () =&amp;gt; {
  console.log(&#39;open&#39;);
});

// シリアル通信でデータを受信したに呼び出される関数を定義
serial.on(&#39;data&#39;, (input) =&amp;gt; {
  console.log(input);
  ds.send({message: input});
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ターミナルを開いて、以下のコマンドでインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm init
npm i serialport milkcocoa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;app.jsを動かしたいときは、以下のコマンドを使います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;node app.js
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-webサイトを作る-htmlのみでok&#34;&gt;4. Webサイトを作る（HTMLのみでOK）&lt;/h3&gt;

&lt;p&gt;最後はフロント側を作ります！&lt;/p&gt;

&lt;h4 id=&#34;index-html&#34;&gt;index.html&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;フロント&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;log&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-2.2.4.min.js&amp;quot;   integrity=&amp;quot;sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=&amp;quot;   crossorigin=&amp;quot;anonymous&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#39;https://cdn.mlkcca.com/v2.0.0/milkcocoa.js&#39;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
    window.onload = () =&amp;gt; {
      // Milkcocoa
      const milkcocoa = new MilkCocoa(&#39;your api key&#39;);
      const ds = milkcocoa.dataStore(&#39;status&#39;);

      // Milkcocoaからデータが送られてきた時のコールバック
      ds.on(&#39;send&#39;, (data) =&amp;gt; {
        console.log(data.value);
        // ここでhtmlのDOMを操作する

     })
    }
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/07_milkcocoa.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;14行目の&lt;code&gt;your api key&lt;/code&gt;には、先ほど登録したMilkcocoaのこの箇所の文字列を入れます。&lt;/p&gt;

&lt;p&gt;これで、&lt;code&gt;node app.js&lt;/code&gt;を打つと、コンソールに気温がリアルタイムで表示されるようになります！  ちなみに、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;うららフロント&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;


  &amp;lt;body&amp;gt;
	// ここに書き込める
    &amp;lt;div id=&amp;quot;log&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-2.2.4.min.js&amp;quot;   integrity=&amp;quot;sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=&amp;quot;   crossorigin=&amp;quot;anonymous&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#39;https://cdn.mlkcca.com/v2.0.0/milkcocoa.js&#39;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
    window.onload = () =&amp;gt; {
      const milkcocoa = new MilkCocoa(&#39;your api key&#39;);
      const ds = milkcocoa.dataStore(&#39;status&#39;);

      ds.on(&#39;send&#39;, (data) =&amp;gt; {
        console.log(data.value);
     })
    }
    &amp;lt;/script&amp;gt;
	// ここに書き込める
  &amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;// ここに書き込める&lt;/code&gt; にHTMLなどを書くと、フロント側をいじることができます。&lt;/p&gt;

&lt;h4 id=&#34;わたしが作ったフロント側のソースコード-cotton-html&#34;&gt;わたしが作ったフロント側のソースコード cotton.html&lt;/h4&gt;

&lt;p&gt;完全に余談ですが、私が作ったフロント側のソースコードも載せておきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;部屋の温度なう&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://fonts.googleapis.com/earlyaccess/notosansjp.css&amp;quot;&amp;gt; // googleフォントを入れてみた
    &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;cotton.css&amp;quot;&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;welcome&amp;quot;&amp;gt;Temperature Now&amp;lt;/div&amp;gt;
    &amp;lt;div id=&amp;quot;log&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;marquee&amp;gt;あなたは10573人目の訪問者です！&amp;lt;/marquee&amp;gt; // 文字が流れます
    &amp;lt;div id=&amp;quot;you&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;center&amp;gt;&amp;lt;table border=&amp;quot;0&amp;quot; cellspacing=&amp;quot;0&amp;quot; cellpadding=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;http://www.rays-counter.com/&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://www.rays-counter.com/d350_f6_022/578cc94f09357/&amp;quot; alt=&amp;quot;アクセスカウンター&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td align=&amp;quot;center&amp;quot; style=&amp;quot;font-size:xx-small&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://www.rays-counter.com/images/counter_01.gif&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://www.rays-counter.com/images/counter_02.gif&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://www.rays-counter.com/images/counter_03.gif&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://www.rays-counter.com/images/counter_04.gif&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://www.rays-counter.com/images/counter_05.gif&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/center&amp;gt; // アクセスカウンターです、フリーのを使いました
    &amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-2.2.4.min.js&amp;quot;   integrity=&amp;quot;sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=&amp;quot;   crossorigin=&amp;quot;anonymous&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#39;https://cdn.mlkcca.com/v2.0.0/milkcocoa.js&#39;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
    $(document).ready(function(){
      // Milkcocoa
      const milkcocoa = new MilkCocoa(&#39;yieldiq29oxas.mlkcca.com&#39;);
      const ds = milkcocoa.dataStore(&#39;status&#39;);

      // Milkcocoaからデータが送られてきた時のコールバック
      ds.on(&#39;send&#39;, (data) =&amp;gt; {
        console.log(data.value);
        const temp=data.value.message;
        if (temp&amp;gt;29){
          $(&#39;#log&#39;).css(&#39;color&#39;, &#39;red&#39;);
          $(&#39;#you&#39;).text(&#39;あついね！&#39;) // 29度以上になると「あついね！」というコメントが表示されます
        }
        else if (temp&amp;lt;27){
          $(&#39;#log&#39;).css(&#39;color&#39;, &#39;blue&#39;);
          $(&#39;#you&#39;).text(&#39;さむいね！&#39;)　// 27度以下になると「さむいね！」というコメントが表示されます
        }
        else {
          $(&#39;#log&#39;).css(&#39;color&#39;, &#39;#eebbcb&#39;);
          $(&#39;#you&#39;).text(&#39;ちょうどいいね！&#39;) // 27&amp;amp;28度になると「ちょうどいいね！」というコメントが表示されます
        }
        $(&#39;#log&#39;).text(&#39;今の温度は&#39;+data.value.message+&#39;度☆&#39;); // 今の温度が表示されます
        // ここでhtmlのDOMを操作する
        // milkcocoa と push でカウンター（javascript）

     })
   　});
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;style-css&#34;&gt;style.css&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;body {
  font-family: &#39;Noto Sans Japanese&#39;, sans-serif;
}

#log {
  font-size: 30px;
  text-align: center;
}

#welcome {
  font-size: 50px;
  text-align: center;
  color: darkblue
}

#you {
    text-align: center;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;見た目&#34;&gt;見た目&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/08_website.png&#34; alt=&#34;&#34; /&gt;
このような感じの見た目になります。1990年代のサイトを目指しました。全然可愛くないですね。アクセスカウンタは無料で配布されていた「&lt;a href=&#34;http://www.rays-counter.com/&#34;&gt;無料アクセスカウンター&lt;/a&gt;」を使っています。&lt;/p&gt;

&lt;p&gt;ということで、Webサイトの見た目はこのように自分でアレンジできます。HTMLの技術が少し必要になりますが、自由にいじって自分好みのサイトにしてみてください。（CSSもあればなおよしですね）&lt;/p&gt;

&lt;p&gt;この状態ではサーバーにアップされていないのでローカル環境でないとサイトを見られませんが、これをアップすれば家の外からでもスマホやPCなどで室温を確認することができます。&lt;/p&gt;

&lt;h2 id=&#34;注意点&#34;&gt;注意点&lt;/h2&gt;

&lt;p&gt;ここからは私が詰んだ箇所を紹介します。全部で3つあります。&lt;/p&gt;

&lt;h3 id=&#34;gr-cottonのジャンパを配線する&#34;&gt;GR-COTTONのジャンパを配線する&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/09_jumper.png&#34; alt=&#34;&#34; /&gt;
通常はこのパーツを反対側に刺さないといけないです。チュートリアルにも載っていますが見落とすと操作できなくなります。&lt;/p&gt;

&lt;h3 id=&#34;ケーブルは純正のものを使う&#34;&gt;ケーブルは純正のものを使う&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/10_cable.png&#34; alt=&#34;&#34; /&gt;
コンビニで売っているモバイルバッテリーに付属しているようなケーブルだと、認識されないのです……。&lt;/p&gt;

&lt;p&gt;データ通信が可能なタイプを用意しましょう。（GR-COTTONには純正のケーブルが付属していません）&lt;/p&gt;

&lt;h3 id=&#34;kurumiwriterにチェックを入れる&#34;&gt;KurumiWriterにチェックを入れる&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/11_notfound.png&#34; alt=&#34;&#34; /&gt;
ケーブルを純正にしたのにPCからUSBドライバが表示されない、ということがありました。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;FTDIの仕様上USBポートが開いた/閉じたときでDTR(COTTONのリセット)がハイ/ロウが排他的になります。KurumiWriterでその設定ができますがデフォルト(チェックなし)ではポートが開いたときDTRがロウになります。 &lt;a href=&#34;https://t.co/aWANpSdJka&#34;&gt;https://t.co/aWANpSdJka&lt;/a&gt;&lt;/p&gt; Renesas_FUN (@Renesas_FUN) &lt;a href=&#34;https://twitter.com/Renesas_FUN/status/750323606601609216&#34;&gt;2016年7月5日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;これをTwitterでつぶやいたところ、がじぇっとるねさすさんの公式アカウントからご回答いただきました。KurumiWriterのチェックボックスにチェックをいれていなかったことが原因でした……。&lt;/p&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;自分が詰んだところの余談が長くなってしまったのですが、部屋の温度をGR-COTTONで取得してブラウザに表示する方法を紹介しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/010/06_code.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;余談ですが、今回使った app.jsとhtmlは、知り合いの元組み込みエンジニアいわたんさん（&lt;a href=&#34;twitter.com/iwata_n&#34;&gt;@iwata_n&lt;/a&gt;）にお願いして作ってもらいました。いわたんさんありがとうございます！&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;aa68f3d1934d480f9a3a26a6062ffa9b&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;また、当日発表したプレゼン資料はこちらから見られます。&lt;/p&gt;

&lt;p&gt;みなさんぜひ試してみてください！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【connpass × のびすけ対談】サービスの立ち上げから運営まで。「connpass」の歴史を聞いてみました</title>
      <link>https://dotstud.io/blog/connpass-n0bisuke-interview-vol2/</link>
      <pubDate>Wed, 02 Nov 2016 10:30:00 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/connpass-n0bisuke-interview-vol2/</guid>
      
      <description>

&lt;p&gt;こんにちは、dotstudioエディターのうらら（@uraranbon）です。&lt;/p&gt;

&lt;p&gt;今や10人に1人は社長と言われるほど起業が身近になった現代。しかし、夢や希望を詰めて作られたサービスの大方は、思うように成長せずに消えていってしまいます。&lt;/p&gt;

&lt;p&gt;そんな中、イベントの募集を助けるWebサービス「connpass」は、2011年にリリースされてから5年で85,000人のユーザーを集め、connpassを利用し2015年〜2016年の1年間で6,000人の集客したという人もいます。&lt;/p&gt;

&lt;p&gt;サービスを向上させる秘訣はあるのでしょうか。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://dotstud.io/blog/connpass-n0bisuke-interview-vol1/&#34;&gt;【connpass × のびすけ対談】勉強会あるある！イベントのドタキャンにどう対処する？&lt;/a&gt;に続き、connpassを運営する株式会社ビープラウドの代表・佐藤氏に話を伺ってきました。&lt;/p&gt;

&lt;div class=&#34;person-intro&#34;&gt;
    &lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34;/&gt;
    &lt;div class=&#34;person-info&#34;&gt;
        &lt;strong&gt;人物紹介：佐藤治夫 氏&lt;/strong&gt;
        &lt;p&gt;株式会社ビープラウド代表。&lt;br /&gt;2011年からイベントサイト「connpass」を運営する傍ら、自身も積極的に勉強会やイベント活動をおこなっている。&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;話を伺ってきたのは、エンジニア向けのイベントを積極的に主催しているdotstudio代表/エンジニアのびすけです。よく「connpass」を使って集客をしています。&lt;/p&gt;

&lt;div class=&#34;person-intro&#34;&gt;
    &lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; /&gt;
    &lt;div class=&#34;person-info&#34;&gt;
        &lt;strong&gt;人物紹介：菅原のびすけ&lt;/strong&gt;
        &lt;p&gt;dotstudio代表。&lt;br /&gt;1989年生まれのバックエンドエンジニア。 &lt;a href=&#34;http://iotlt.connpass.com&#34; target=&#34;_blank&#34;&gt;IoTLT&lt;/a&gt;、Swift愛好会、NodeBotsハンズオンなど、幅広いイベントを開催している。&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;もともとはイベントから生まれたサービスだった&#34;&gt;もともとはイベントから生まれたサービスだった&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/037/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;
今日はありがとうございます。そもそも、なぜこういったイベントサービスを始めようと思ったんですか？&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;今はイベントサイトって結構ありますけど、もともとはリクルートさんが運営する&lt;a href=&#34;https://atnd.org/&#34;&gt;ATND&lt;/a&gt;しかありませんでした。そのときの技術が好きだった人たちが集まっていたんですけど、少しシンプルだったんです。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;そんなときに、&amp;rdquo;Django Dash&amp;rdquo;という「2~3日でサービスを1つ立ち上げよう」みたいなイベントがありました。そこで、イベントサイトならこういう機能がほしい、あれほしいっていうのを簡単に話していたんです。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;そのときはそれで終わってたんですけど、弊社でサービスを作りましょうかという話が持ち上がったときに、「途中までこういうのを作ったことがありますよ」と再浮上したのがきっかけです。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;
&lt;img src=&#34;https://dotstud.io/img/blog/037/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;あとは、もともと僕が「BPStudy」という勉強会をずっと続けていたので、そこでエンジニアの人たちのコミュニティを広げたいとか、経験を高めたくなり、2011年に「ちゃんとサービスを始めよう」となりました。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;へえ、もともとはイベントがきっかけだったんですね。オープンしてからすぐにイベントって集まったんですか？&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;いや、最初はそんなに多くなかったですね。弊社がPython系のコミュニティと繋がっていて、そのイベントの人たちが使ってくれて広まりました。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;イベント参加者だった人が「自分でやってみよう」というときに&lt;strong&gt;自分が参加したことのあるサイトを選ぶ&lt;/strong&gt;といった感じで広まったと思います。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;余談ですが、その頃からPyCon主催の鈴木たかのりさんもいらっしゃったんですか？&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;そうですね。たかのりさんは、2011年にconnpassがオープンしてからすぐくらい、2012年あたりですね。有料決済みたいなのや、参加枠みたいな機能、アーリーバード枠とか。PyConの要望で追加した機能もあるんです。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;ブレイクポイントはサービス開始2年後に&#34;&gt;ブレイクポイントはサービス開始2年後に&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/037/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;connpassを始めた2011年から、何かブレイクポイントありますか？&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;2013年にありました。「IT勉強会に特化した」っていう部分ですね。もともとは「どういうイベントが対象」かっていうのを絞っていなくて。そこを、「IT勉強会といえばconnpass」と思ってもらえるようにしました。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;具体的にはどのへんで伝えたんですか？&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;タイトルですね。ログインしているとわからないんですけど、トップページにこういう画面があって……&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;
&lt;img src=&#34;https://dotstud.io/img/blog/037/06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;あ、上部の「エンジニアをつなぐ〜」というやつですね。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;ここから、より絞られたユーザーが集まってきたと思います。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;サービスを-技術的チャレンジができる広告塔-に&#34;&gt;サービスを「技術的チャレンジができる広告塔」に&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;開発は何人くらいでおこなうんですか？&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;2人とか3人とかですね。今は専任ですが、状況に応じて受託開発をしたり、connpassをやってもらったりしています。いろんな案件を経験すれば、バランス良くスキルやノウハウが身につきますし、「こっちでノウハウを使おう」という流用もできるので。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/037/07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;意外と少ない印象です。ちなみに、connpassって中の人にとってはどういう位置付けなのでしょう？&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;位置づけですか。ひとつは&lt;strong&gt;広告塔として&lt;/strong&gt;ですね。connpassがあることによって、「あ〜、connpassやってる会社ですか」って思ってもらえています。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;ふたつめは、&lt;strong&gt;技術的チャレンジがしやすい&lt;/strong&gt;っていうところですかね。結構Dockerとかを使って、サイトに導入していこうかなとは思っています。そういうデプロイのところは効率化しようかなと。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;connpassの特徴として、落ちない、不具合が少ないっていうのがありますが、それもやっぱり、不具合がおこりにくい、落ちないサイトってどういうサイトなの？っていうのをconnpassで実践してるからですね。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;みっつめは&lt;strong&gt;知見を得られる場所&lt;/strong&gt;ですね。運営・企画サポートまでを自分たちで回しているっていうことで、知見を得られているかなと思っています。ざっくりとした位置付けはこの3点ですね。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;connpass開発で試行錯誤して活用した-匠メソッド&#34;&gt;connpass開発で試行錯誤して活用した「匠メソッド」&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;エンジニアの理想じゃないですか。ちなみに、サイトの企画〜運営までのナレッジは、具体的にどんなことを学んだんですか？&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;&lt;strong&gt;アイデア出しから形に落とし込むまでの要求開発方法&lt;/strong&gt;ですね。サービス企画ってやったことがないと、最終的にどう落とし込んでいくのかってスキルが必要だと思うんですよ。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;自分は「絶対いい！」とか思っている機能を、他の人が「いやぁ……」とかいうと、揉めますよね。みんな熱意があるからそうなるんですけど、喧嘩っぽくなっちゃったり、諦めて妥協したりする人が出て、&lt;strong&gt;結局3ヶ月とか4ヶ月とかかかることも&lt;/strong&gt;あります。みんなが納得する状態まで持っていくのは、意外に難しい。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;そこを「匠メソッド」という要求開発方法を使っていて。それを使ってアイデア出しから形にするまでを2~3日でまとめるんです。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;以前登壇した資料に詳しく書いていますが、現状に対する「こうした機能がほしい」というのが出ても、全部作るわけにはいかないじゃないですか。それを、「どうやって、何を基準に決めるの？」という部分を決めていますね。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;
&lt;center&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/4vBwrvIJjIx1eL&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/ssuserafaef6/bpstudy88-connpass-42735511&#34; title=&#34;BPStudy#88 connpassにおける戦略決定&#34;&gt;BPStudy#88 connpassにおける戦略決定&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/ssuserafaef6&#34;&gt;Haruo Sato&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;まず、&lt;strong&gt;「誰に対してどういう価値があるか」&lt;/strong&gt;を出して、要求分析ツリーというツリーの形にします。そして、経営者目線でどこからやっていくかを話していくんです。そうすると、機能じゃなくて戦略的な話ができる。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;誰も幸せにならない、「絶対これがいい」と言い張る人がたまにいますよね。でも、それをあきらめられる。ロジカルに考えられます。あっさりと「これやろう、これは没、没にぶら下がっているのは全部やらないよね」みたいになります。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;みんなが経営者目線を意識するんですね。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/037/08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;そうですね。みんなが納得感のある落とし所をconnpassを通じてやっていて、それを受託開発もやっています。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;そういうふうに、サイトの企画から開発、運営までをエンジニアでやっているので、お客さんが「こういうサイト作りたいです」って言ったときにもそれを実践していますね。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;connpassのノウハウを生かして、効果の高いものを最小限のちからで。ただ「開発しますよ」という感じではなくて、そういう話ができるようにはなってきたかなって思いますね。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293920&#34; /&gt;&lt;span&gt;僕も匠メソッド試してみようかな。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;connpassの歴史をさっくりと伺いました。もともとはイベントから生まれ、その後は会社と一緒に成長してきたサービスでした。&lt;/p&gt;

&lt;p&gt;せっかく作り上げたサービスを、できることなら成長させたいですよね。そのためにはサービスに関わる人全てが「経営者目線を意識」するのも効果的のようです。&lt;/p&gt;

&lt;p&gt;これからのconnpassがどのような展開を迎えるのか、今後の活躍にも注目ですね！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【connpass × のびすけ対談】勉強会あるある！イベントのドタキャンにどう対処する？</title>
      <link>https://dotstud.io/blog/connpass-n0bisuke-interview-vol1/</link>
      <pubDate>Tue, 01 Nov 2016 10:00:00 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/connpass-n0bisuke-interview-vol1/</guid>
      
      <description>

&lt;p&gt;こんにちは、dotstudioエディターのうらら（@uraranbon）です。&lt;/p&gt;

&lt;p&gt;いろんな人と交流をしたい。新しい情報を得たい。IT/Web業界では最新トレンドやナレッジを共有する「勉強会」や「LT（ライトニングトーク）」というイベントが毎日のように開催されています。&lt;/p&gt;

&lt;p&gt;しかし、イベント当日に参加者が来ない「&lt;strong&gt;ドタキャン&lt;/strong&gt;」に悩まされたことがある方は多いのではないでしょうか。エンジニア向けイベントサービス「&lt;a href=&#34;http://connpass.com&#34;&gt;connpass&lt;/a&gt;」と、1年で100件ほどイベントを開催するエンジニアののびすけ（@n0bisuke）がドタキャン問題の解決策を話します。&lt;/p&gt;

&lt;div class=&#34;person-intro&#34;&gt;
    &lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34;/&gt;
    &lt;div class=&#34;person-info&#34;&gt;
        &lt;strong&gt;人物紹介：佐藤治夫 氏&lt;/strong&gt;
        &lt;p&gt;株式会社ビープラウド代表。&lt;br /&gt;2011年からイベントサイト「connpass」を運営する傍ら、自身も積極的に勉強会やイベント活動をおこなっている。&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;話を伺ってきたのは、エンジニア向けのイベントを積極的に主催しているdotstudio代表/エンジニアのびすけです。よく「connpass」を使って集客をしています。&lt;/p&gt;

&lt;div class=&#34;person-intro&#34;&gt;
    &lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; alt=&#34;n0bisuke&#34; /&gt;
    &lt;div class=&#34;person-info&#34;&gt;
        &lt;strong&gt;人物紹介：菅原のびすけ&lt;/strong&gt;
        &lt;p&gt;dotstudio代表。&lt;br /&gt;1989年生まれのバックエンドエンジニア。 &lt;a href=&#34;http://iotlt.connpass.com&#34; target=&#34;_blank&#34;&gt;IoTLT&lt;/a&gt;、Swift愛好会、NodeBotsハンズオンなど、幅広いイベントを開催している。&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;参加登録した人のドタキャンをなくすには&#34;&gt;参加登録した人のドタキャンをなくすには&lt;/h2&gt;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; /&gt;&lt;span&gt;とあるイベントに参加者の8~9割がconnpassの通知メール経由ってすごいですよね。僕自身も6,000人の集客がconnpassでできました。ただ、人が集まりやすい仕組みになってるからこそ、勢いでくるというか。&lt;strong&gt;ドタキャン率も高い印象です&lt;/strong&gt;。それってどのイベントサイトにも言えると思うんですけど。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;公開されると「とりあえず参加します」みたいな、記念参加みたいにする人もいますよね。そこをなんとかしたいっていう問題はあります。IT業界全体の問題ですよね。&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;ドタキャンをなくすにはどうしたらいいですかね。ドタキャン問題を減らせる機能はうちも入れたい。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; /&gt;&lt;span&gt;&lt;strong&gt;事前課金式&lt;/strong&gt;みたいなのはいいかなと思います。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;1,000円とか徴収するっていう感じですよね。そうすると参加者が伸び悩んじゃう懸念もありますね。「行けないかもしれないからちょっと……」みたいな。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; /&gt;&lt;span&gt;あと、僕は&lt;a href=&#34;http://nodejs.connpass.com/&#34; &gt;Node学園&lt;/a&gt;さんのやり方を参考にしていますね。Node学園では&lt;strong&gt;最初にイベントページだけを公開して、募集は1週間前とかにしています。&lt;/strong&gt;最近のNode学園は2~3日前に募集開始になってるときもあります。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; /&gt;&lt;span&gt;募集開始時期があまりにも早いと、申し込みしたこと自体を忘れてしまうんですよね。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; /&gt;&lt;span&gt;世の中みんなクリーンな心だったらこんなこと考えなくていいんでしょうけど（笑）&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;あはは（笑）　いちおう、connpassには「参加した」とか「キャンセルした」とかは全部表示されるようになっているんです。他のサービスは参加を隠せたりするんですけど。ユーザページである程度その人を把握できます。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; /&gt;&lt;span&gt;申し込みして、キャンセル処理してなくてもキャンセルする人もいますよね。&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_n0bi.png&#34; /&gt;&lt;span&gt;ドタキャンは問題だと思いつつ、仕方ないかとも思っているんですよね。ドタキャンは絶対発生するものと思っていて。 &lt;strong&gt;200人が定員の会場だとしたら250人くらいまで募集をかけるときもあります。&lt;/strong&gt;&lt;/span&gt;
&lt;/div&gt;
&amp;nbsp;

&lt;div class=&#34;box_tweet&#34;&gt;&lt;img src=&#34;https://dotstud.io/img/blog/036/person_sato.png&#34; alt=&#34;person_sato&#34; width=“80&#34; height=“80&#34; class=&#34;alignnone size-full wp-image-293918&#34; /&gt;&lt;span&gt;たしかに。僕も入らないけれど60人で募集して、当日来ないだろうという当たりをつけてやっていますね。&lt;/span&gt;
&lt;/div&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;「ドタキャンはIT業界全体の問題」&lt;/strong&gt;と佐藤氏が仰っていたように、イベントでは避けられないものなのかもしれません。とほほ。&lt;/p&gt;

&lt;p&gt;ドタキャンに悩んでいる方は、次のようなことを試すと良いかもしれませんね。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;最初にイベントページだけを公開して、募集は1週間前や2~3日前などにする&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参加費をとり、事前回収制にする&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ドタキャンを見越して多めに募集する（定員が200人なら250人募集など）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ドタキャン問題と向き合って、皆さんが主催するイベントも楽しいイベントになるといいですね！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>レポート！ギャル電❤︎初めての電子工作ハンズオンvol.1開催</title>
      <link>https://dotstud.io/blog/gyaruden-handson-mao-report/</link>
      <pubDate>Mon, 31 Oct 2016 08:47:33 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/gyaruden-handson-mao-report/</guid>
      
      <description>

&lt;p&gt;こんにちは、テクニカルライターのまおです！&lt;br /&gt;
先日、私が所属する&lt;a href=&#34;”https://dotstud.io/blog/iotlt-gbvol19-galden-report/&#34;&gt;ギャル電&lt;/a&gt;とdotstudioが合同主催して「初めての電子工作ハンズオン」を開催しましたー😄　&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;初めての開催だったので上手くいくか心配でしたが、参加してくれた皆さんが「いい感じだった」と言ってくれました😆　それってつまり成功！？　イエーイ！！！&lt;/p&gt;

&lt;p&gt;では当日の様子を紹介していきたいと思います❤︎&lt;/p&gt;

&lt;h2 id=&#34;初めての電子工作ハンズオン-の概要&#34;&gt;「初めての電子工作ハンズオン」の概要&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;初心者の方でもわかりやすく電子工作を楽しんでもらえるように&lt;/strong&gt;、2016年10月1日（土）に「初めての電子工作ハンズオンvol.1」を開催しました！&lt;/p&gt;

&lt;p&gt;当日は女性5名と男性2名の計7名が参加。イベントを告知するときから「&lt;strong&gt;電子工作に興味があって、光るものが好きな女子&lt;/strong&gt;」を対象としていたので、女性の方が圧倒的に多かったですね！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;参加者のみなさんには、dotstudioにてキット販売をしている「光るピアス」&lt;a href=&#34;https://dotstud.io/projects/neopixel-ring-gemma-earrings/&#34;&gt;&amp;ldquo;Sparkling Piercing Kit for CLUBBERS&amp;rdquo;（4480円）&lt;/a&gt;を、私が以前公開した&lt;a href=&#34;https://dotstud.io/blog/neopixel-ring-gemma-earrings/&#34;&gt;光るイヤリングの作り方&lt;/a&gt;という記事をもとに制作していきました〜😆　参加費は、キット代＋懇親会費用込みで4980円です！&lt;/p&gt;

&lt;h2 id=&#34;当日の流れ&#34;&gt;当日の流れ&lt;/h2&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;dae09f60e1b44f4487087a3d11089922&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;今回のハンズオンでは、こちらのスライドで作り方を説明しながら進めてました〜😁&lt;/p&gt;

&lt;h3 id=&#34;ハンダ付けの練習&#34;&gt;ハンダ付けの練習&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;まずはじめにハンダ付けの練習してもらいました。今回ハンダ付けの練習で作ってもらったのはこちらのスマイルくん！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ピンヘッダ&lt;/li&gt;
&lt;li&gt;LED&lt;/li&gt;
&lt;li&gt;フックアップワイヤー&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;これらの材料をユニバーサル基板（スマイルくんの土台になる部分）にハンダ付けしてもらいました😆&lt;/p&gt;

&lt;p&gt;ピンヘッダの切断や、ワイヤーストリッパーでフックアップワイヤーの銅線を剥くところまで実際にやってもらっらので、最低限のハンダ付け基礎知識は覚えてもらえたと思います😄&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;一番大事なのは安全メガネをすること！　ハンダは下手すると飛び散るので、みなさん目は保護しておきましょう〜シャキーン😎&lt;/p&gt;

&lt;h3 id=&#34;光るイヤリングの制作&#34;&gt;光るイヤリングの制作&lt;/h3&gt;

&lt;p&gt;今回のハンズオンのメイン、&lt;strong&gt;光るイヤリングを制作する&lt;/strong&gt; パートです。パソコンでのプログラミング環境設定やハンダ付けなどは、各自私が書いた記事を元に作業を進めてもらいました！&lt;/p&gt;

&lt;p&gt;ハンズオンでは &lt;strong&gt;プログラムのコピペのトリック&lt;/strong&gt; などを主に紹介しました😁&lt;/p&gt;

&lt;h4 id=&#34;コピペのトリックとは&#34;&gt;コピペのトリックとは&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;簡単にプログラムを探す方法（今回はArduino IDE内のスケッチの例からサンプルプログラムを見つける方法）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;プログラム内で使うハードウェアの設定方法（拾ってきたプログラムの動作内容がわからないときに使える、データを送るピンの番号や、LEDの数などの変え方）&lt;/p&gt;

&lt;p&gt;などを詳しく紹介しました😎&lt;/p&gt;

&lt;h4 id=&#34;ledの色を変える&#34;&gt;LEDの色を変える&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ギャル電はクラブファッションを気にするので、プログラム内でのLEDの色の変え方を詳しく説明しました！　色の変え方さえ分かっておけば上等！😏&lt;/p&gt;

&lt;h3 id=&#34;最後にピアスフックを付けて完成&#34;&gt;最後にピアスフックを付けて完成❤︎&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;続々出来上がってきました！&lt;a href=&#34;https://twitter.com/hashtag/gyaruden?src=hash&#34;&gt;#gyaruden&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3?src=hash&#34;&gt;#ハンズオン&lt;/a&gt; &lt;a href=&#34;https://t.co/z8edDgXky5&#34;&gt;pic.twitter.com/z8edDgXky5&lt;/a&gt;&lt;/p&gt; ギャル電 (@GALDEN999) &lt;a href=&#34;https://twitter.com/GALDEN999/status/782115708800950273&#34;&gt;2016年10月1日&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;かわいい&lt;a href=&#34;https://twitter.com/hashtag/gyaruden?src=hash&#34;&gt;#gyaruden&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3?src=hash&#34;&gt;#ハンズオン&lt;/a&gt; &lt;a href=&#34;https://t.co/SmSwjFG3K5&#34;&gt;pic.twitter.com/SmSwjFG3K5&lt;/a&gt;&lt;/p&gt; ギャル電 (@GALDEN999) &lt;a href=&#34;https://twitter.com/GALDEN999/status/782124352376406016&#34;&gt;2016年10月1日&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;動画で見るとちょーかわいいですね💓💓💓&lt;/p&gt;

&lt;p&gt;みんな似合ってました〜！！&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;ハンダ付け練習のやつもバッチにするとおしゃれ！ &lt;a href=&#34;https://t.co/Wmv4g1z11s&#34;&gt;pic.twitter.com/Wmv4g1z11s&lt;/a&gt;&lt;/p&gt; ギャル電 (@GALDEN999) &lt;a href=&#34;https://twitter.com/GALDEN999/status/782132757023469568&#34;&gt;2016年10月1日&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;ハンダ付けの練習で作ったスマイルくんをバッチにする方もいました！😄&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;「ギャル電に入りたい！」と言ってくれた参加者さんも！&lt;/p&gt;

&lt;h2 id=&#34;会場を貸してくれたアスラテック株式会社&#34;&gt;会場を貸してくれたアスラテック株式会社&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;最後に、今回会場を提供していただいた&lt;a href=&#34;https://www.asratec.co.jp/&#34;&gt;アスラテック株式会社&lt;/a&gt;の今井さんが、アスラテック株式会社についてを紹介。なんと、アスラテック株式会社は &lt;strong&gt;ロボットのソフトウェア開発専用の会社&lt;/strong&gt; なんです！　開発されたソフトウェアで動くロボットはいっぱい種類があって面白いなと思いました！&lt;/p&gt;

&lt;p&gt;今回は会場を提供していただき本当にありがとうございました！！😊💓&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/045/11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;初めてハンズオンを開催したのですが、参加者の皆さんが「楽しかった！」「また参加したい」と言ってくれましたー！！！　めっちゃ嬉しいです💓&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/n0bisuke&#34;&gt;@n0bisuke&lt;/a&gt;さんのまとめ&lt;a href=&#34;https://t.co/umdho4aUWC&#34;&gt;https://t.co/umdho4aUWC&lt;/a&gt;を本日のトゥギャトピに選ばせていただきました！ギャル電、非常に気になるのでまた活動をまとめていただきたいです！トゥギャトピはTogetterのTOPページで紹介しています。みてね！&lt;/p&gt; トゥギャッターまとめ編集部 (@tg_editor) &lt;a href=&#34;https://twitter.com/tg_editor/status/782795742343680000&#34;&gt;2016年10月3日&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;また、当日の様子をTogetterでまとめたものが、TogetterのTOPページに掲載される「トゥギャトピ」に選ばれました！　イエーイ！！&lt;/p&gt;

&lt;p&gt;次回は冬休み頃にハンズオンvol.2を開催したいと思ってます！　もっともっとみんなに電子工作の楽しさが伝わればめっちゃいいなと思います😊&lt;/p&gt;

&lt;p&gt;ではギャル電の次の記事もお楽しみに💓&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>これは掘り出し物かも？ ソーラーバッテリ駆動でスマホ充電もできるLEDランタン！</title>
      <link>https://dotstud.io/blog/led-lantern-and-torch/</link>
      <pubDate>Fri, 28 Oct 2016 09:00:34 +0800</pubDate>
      
      <guid>https://dotstud.io/blog/led-lantern-and-torch/</guid>
      
      <description>

&lt;p&gt;こんにちは、dotstudioエディターのうらら（&lt;a href=&#34;http://twitter.com/uraranbon&#34;&gt;@uraranbon&lt;/a&gt;）です。
現在、「&lt;strong&gt;中国の秋葉原&lt;/strong&gt;」と呼ばれる深センに滞在しています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/042/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;滞在3日目、深センで購入した&lt;a href=&#34;https://dotstud.io/blog/4k-camera-gopro-fake&#34;&gt;4Kと言われているカメラ&lt;/a&gt;で撮影してお届けします。左上にタイムスタンプが押されて &lt;strong&gt;監視カメラのような雰囲気&lt;/strong&gt; がありますが、解除方法がわからないのでご了承ください。&lt;/p&gt;

&lt;p&gt;ここ数日にわたり「壁を走るラジコン」や「4Kと書かれているカメラ」を紹介してきました。（記事を見てない人はぜひチェック！）&lt;/p&gt;

&lt;p&gt;そして今回は、こんなものを紹介します！&lt;/p&gt;

&lt;h2 id=&#34;一見ゴツい円筒だけど&#34;&gt;一見ゴツい円筒だけど……&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/042/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;今回紹介するのは金色のこちら。引っ張ってみると……&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/042/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ファァァァァ……！と光が漏れてくるというランタンです。&lt;/strong&gt;
「上に引っ張ると光る」というちょっとおしゃれな点灯をします。きっと持ってるだけでモテます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/042/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;キャンプや非常時などに活躍しそうです。 目が痛くなるほど光が強い。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/042/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;しかも、このボタンを押すと……&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/042/06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;懐中電灯にも！　なるんです！　これはきっとモテる。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/042/07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;USBポートもついているのでスマホの充電もできます。&lt;br /&gt;
おしゃれな上に、地味にハイスペック。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/042/08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;電池は必要なくて、太陽光で動きます。これも地味にかなり便利。&lt;/p&gt;

&lt;p&gt;気になるお値段ですが、カラオケができるスピーカー付きマイク（後日紹介予定）と合わせて120元（1,800円程度）でした。きっとこのランタンは　&lt;strong&gt;40元（600円程度）くらいだと思われます。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/042/09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ランタン・懐中電灯・充電器の3役になるハイスペックランタンを紹介しました。この&lt;a href=&#34;https://dotstud.io/blog/4k-camera-gopro-fake&#34;&gt;4Kと言われているカメラ&lt;/a&gt;もハイスペックになってほしい。&lt;/p&gt;

&lt;p&gt;ということで引っ張ると光るギミックがついているハイスペックランタンを紹介しました。見つけたらぜひ挑戦してみてはいかがでしょう。きっとモテますよ。&lt;/p&gt;

&lt;p&gt;では、次回もお楽しみに。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使い所が分からなすぎる（笑）LEDで光るマルチリンガルなUSB扇風機を買ってみた</title>
      <link>https://dotstud.io/blog/led-multilingual-confessing-fan/</link>
      <pubDate>Wed, 26 Oct 2016 18:30:38 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/led-multilingual-confessing-fan/</guid>
      
      <description>&lt;p&gt;こんにちは、dotstudioのうらら（&lt;a href=&#34;http://twitter.com&#34;&gt;@uraranbon&lt;/a&gt;）です。&lt;/p&gt;

&lt;p&gt;現在私は「中国の秋葉原」と呼ばれている深センに来ています！　日本の秋葉原と同じく、ザクザクと掘り出しものが出てくるとても面白い街です。&lt;/p&gt;

&lt;p&gt;そんな深センで見つけた掘り出しもののひとつを紹介します！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/044/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;USBで動く扇風機です。10元（150円くらい）でした。&lt;br /&gt;
これがなぜ掘り出しものか？　見たらわかります。&lt;/p&gt;

&lt;p&gt;つけてみましょう！&lt;/p&gt;

&lt;p&gt;・&lt;/p&gt;

&lt;p&gt;・&lt;/p&gt;

&lt;p&gt;・&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/044/02.png&#34; alt=&#34;&#34; /&gt;
&lt;strong&gt;パッ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/044/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;パッ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/044/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;パッ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/044/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;パッ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;……そう、世界各国の「&lt;strong&gt;好きです&lt;/strong&gt;」がLEDで光るんです。全部で4ヶ国語に対応していて、日本語も表示されました。ちなみに、文字は回転します。なんともシュール。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;……どこで使えばいいんだろう、これ。&lt;/strong&gt;&lt;/p&gt;

&lt;iframe width=&#34;715&#34; height=&#34;402&#34; src=&#34;https://www.youtube.com/embed/gi0ydQxnduM&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;扇風機なのでそよ風のような微風が頬を撫でてくれます。電源さえあれば、世界各国の「好きです」で半永久的に告白され続けちゃう〜〜〜！　……。&lt;/p&gt;

&lt;p&gt;プログラマブルらしいのですが、実際にハックできるかは謎です。microUSBのポートはついていたので、これから挑戦してみようと思います。&lt;/p&gt;

&lt;p&gt;どこで使えばいいかわかる方は教えて下さい。では！&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>まさかのGoPro？4Kのカメラを265元（4,000円程度）で買えた</title>
      <link>https://dotstud.io/blog/4k-camera-gopro-fake/</link>
      <pubDate>Mon, 24 Oct 2016 08:00:25 +0800</pubDate>
      
      <guid>https://dotstud.io/blog/4k-camera-gopro-fake/</guid>
      
      <description>

&lt;p&gt;こんにちは、dotstudioエディターのうらら（@uraranbon）です。
現在、「中国の秋葉原」と呼ばれる深センに滞在しています。&lt;/p&gt;

&lt;p&gt;「壁を走るラジコン」や「LEDで文字が浮かび上がる扇風機」など日本では見かけない掘り出し物がたくさんあるのですが、こんなカメラも見つけました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;4K！　手のひらサイズのカメラ！　Wi-Fi対応！　
店員さんは「Go Pro！　Go Pro！」と連呼していました。&lt;/p&gt;

&lt;p&gt;しかも、もともとは290元だったのをカメラに必要な &lt;strong&gt;SDカード込みで265元（4,000円程度）&lt;/strong&gt; に値切ってゲット。すご～い！&lt;/p&gt;

&lt;p&gt;でも、&lt;strong&gt;4Kなのにこの価格はおかしいだろ。&lt;/strong&gt; ということで、早速撮影してみたいと思います。&lt;/p&gt;

&lt;h2 id=&#34;4k-wi-fi-action-cameraのスペック&#34;&gt;4K Wi-Fi ACTION CAMERAのスペック&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;レンズ　　　　　　：16メガピクセルの広角レンズ 
Imageフォーマット：JPEG 
連写　　　　　　　：1秒に3枚 
ホワイトバランス　：オート/晴れ/曇り/白熱灯 
バッテリー　　　　：充電式（3.7V900mAh li-ion） 
データ保存　　　　：microSD 
撮影モード　　　　：ビデオ/カメラ/タイムラプス/スロー 
防水　　　　　　　：付属の防水ケースをつければ水深30mまで対応 
Wi-Fi　　　　　　  ：対応（専用のアプリをDLすればWi-Fi経由で写真を得られる） 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この安価さと手のひらサイズという小型なものでありながら、タイムラプスモードやWi-Fiに対応しているなど、かなりスペックが高そうです。これは期待できそう。&lt;/p&gt;

&lt;p&gt;さっそく撮ってみましょう！&lt;/p&gt;

&lt;h2 id=&#34;撮ってみた&#34;&gt;撮ってみた&lt;/h2&gt;

&lt;p&gt;・&lt;/p&gt;

&lt;p&gt;・&lt;/p&gt;

&lt;p&gt;・&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;あれ……？&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;画質が……？&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;……画質が悪いぞ？&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;！？！？？&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;！！！！！！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;あああ！！！！！！！！！！！！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;あああああああああああああ！！！！！！！！！！！！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;こちらは起動すると最初に出てくる画像。
めっちゃきれい！　シャッタスピード速そう！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;あっれっっれ～～～～～～～～～！！！！！！！！？！？
布団をまくる速度に！！！！　負けた！！！！！！！！！！&lt;/p&gt;

&lt;h2 id=&#34;結論-サイズは4kだが画質は&#34;&gt;結論：サイズは4Kだが画質は……&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/12.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ということで伝わったかと思いますが、「画質の悪いデータを大きくして4Kサイズにするカメラ」でした。たしかに4Kで、間違ってはいない！　いないけど！　なんか違う！　&lt;/p&gt;

&lt;p&gt;ただ、このコンパクトさのおかげで手軽に撮影ができてめっちゃ楽しいです。このカメラでいろんな深センの情景を撮ってこようと思います。&lt;/p&gt;

&lt;h3 id=&#34;おまけ-付属品がたくさんついてきた&#34;&gt;おまけ：付属品がたくさんついてきた&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/13.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;余談ですが、このカメラには山盛りの付属品が付いてきます。てんこ盛り。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/14.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;てんてこ盛り。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/041/15.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;カスタマイズも自由自在。
ここの充実さは群を抜いてピカイチだと思います。使うかはわかりません。&lt;/p&gt;

&lt;p&gt;では次回もお楽しみに！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>すごいじゃん深セン。怪しさMAXの壁を登るラジコン？WALL CLIMBERを試してみた</title>
      <link>https://dotstud.io/blog/wall-climbing-toy-car/</link>
      <pubDate>Fri, 21 Oct 2016 15:05:13 +0800</pubDate>
      
      <guid>https://dotstud.io/blog/wall-climbing-toy-car/</guid>
      
      <description>

&lt;p&gt;こんにちは、dotstudioエディターのうらら（@uraranbon）です。
普段は日本を拠点にしていますが、今は中国の深センにいます。&lt;/p&gt;

&lt;p&gt;中国で2016/10/22-23にておこなわれるものづくりイベント「&lt;a href=&#34;www.makerfaireshenzhen.com&#34;&gt;Maker Faire Shenzhen 2016&lt;/a&gt;」に出るためです。&lt;/p&gt;

&lt;p&gt;さて、そんな深センには「中国の秋葉原」と呼ばれる電気街があり、さっそく昨日遊びに行ってきました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;こちらが電気街の一角です。1日では回れないほどの小売店やデパートなどが集まっています。
そんな電気街で見つけたのがこちら。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;WALL CLIMBER”という名のラジコンです。直訳すると「壁登り」。
もし本当なら、完全に重力を無視してますよね？　&lt;/p&gt;

&lt;p&gt;怪しすぎる。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;側面を見てみると「水平にも垂直にも、天井も走れる」と書いています。&lt;/p&gt;

&lt;p&gt;「壁走んの？！　天井も？！」「さすがに釣りじゃないの」「嘘だろ」とdotstudioメンバー全員が半信半疑だったので、さっそく買って試してみました。&lt;/p&gt;

&lt;h2 id=&#34;試してみた&#34;&gt;試してみた&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;操作は付属していたラジコンでおこないます。
地面は綺麗に走りました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;壁は……ラジコンが壁にくっつきました！？
どうやら、掃除機のように風を吸い込んで、壁に吸い付いているようです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;壁も上方向に進みます。ただ、登りは若干苦手なようです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;天井にもくっつきました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;すごい、天井も普通に走る。&lt;/p&gt;

&lt;h2 id=&#34;結論-wall-climberは壁も天井も走った&#34;&gt;結論：WALL CLIMBERは壁も天井も走った&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;疑いの目で見ていた &amp;ldquo;WALL CLIMBER” ですが、期待を裏切るかのように（？！）見事天井を走ってくれました。中国すごい～～～～。&lt;/p&gt;

&lt;p&gt;深センでは他にもさまざまなガジェットを購入したので、記事で紹介する予定です。
次回もお楽しみに！&lt;/p&gt;

&lt;h3 id=&#34;おまけ-買わなかったけれど紹介したい-pxp-3-slim-station&#34;&gt;おまけ：買わなかったけれど紹介したい「PXP 3 Slim station」&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/040/10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;画面からマリオが飛び出している「PXP 3」というゲームを見つけました。
でもパッケージの右側には「16 Bit」と書かれてる～～～～？！（ソニック付き）&lt;/p&gt;

&lt;p&gt;では！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Azure WebAppsにGitLab連携でデプロイしてみよう</title>
      <link>https://dotstud.io/blog/azure-webapps-gitlab-connect/</link>
      <pubDate>Tue, 18 Oct 2016 10:00:30 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/azure-webapps-gitlab-connect/</guid>
      
      <description>

&lt;p&gt;こんにちは、dotstudio代表の&lt;a href=&#34;https://twitter.com/n0bisuke&#34;&gt;のびすけ&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;最近&lt;a href=&#34;https://azure.microsoft.com/ja-jp/documentation/articles/app-service-web-overview/&#34;&gt;Azure WebApps&lt;/a&gt;を使って開発をしています。dotstudioではGitLabを利用してソースコード管理をしているのでGitLabとWebAppsを連携し自動デプロイをする方法を紹介します。&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;https://christianliebel.com/2016/05/auto-deploying-to-azure-app-services-from-gitlab/&#34;&gt;Auto-Deploying to Azure App Services from GitLab&lt;/a&gt;」を参考にしましたが、調べても英語記事しかなかったので日本語記事は初めてだと思います！&lt;/p&gt;

&lt;h2 id=&#34;今回やること&#34;&gt;今回やること&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt;はGitHubやBitbucketのようなGitのホスティングサービスです。
GitHubとBitbucketはWebAppsが公式対応しているため簡単に設定できますが、GitLabは公式対応していないため少しやり方が特殊です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;やりたいことはこの図の通りで、作業者がGitLabにPushしたら自動的にWebAppsにデプロイされる仕組みを作ります。&lt;/p&gt;

&lt;h2 id=&#34;事前準備&#34;&gt;事前準備&lt;/h2&gt;

&lt;p&gt;以下の内容を事前に済ませておきましょう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WebAppsのアプリケーションを作成しておく&lt;/li&gt;
&lt;li&gt;GitLabでリポジトリを作成しておく&lt;/li&gt;
&lt;li&gt;GitLabに手元のマシンからPushできる状態にしておく&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;設定してみよう&#34;&gt;設定してみよう&lt;/h2&gt;

&lt;h3 id=&#34;1-webappsにgitlabのurlを紐付ける&#34;&gt;1. WebAppsにGitLabのURLを紐付ける&lt;/h3&gt;

&lt;p&gt;WebAppsのデプロイ設定をします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;アプリのデプロイ &amp;gt; デプロイオプション &amp;gt; ソースの選択 &amp;gt; 外部リポジトリ&lt;/strong&gt;を選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;GitLabのリポジトリURLを入力しましょう。 https形式とSSH形式のどちらでも大丈夫です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;無事に設定が完了すると、メニューの &lt;strong&gt;概要 &amp;gt; 外部リポジトリプロジェクト&lt;/strong&gt;にリポジトリのURLが設定されます。&lt;/p&gt;

&lt;h3 id=&#34;2-webappsのデプロイ用ssh公開鍵を取得する&#34;&gt;2. WebAppsのデプロイ用SSH公開鍵を取得する&lt;/h3&gt;

&lt;p&gt;WebAppsに外部からアクセスするためにWebAppsのSSH公開鍵を取得します。&lt;/p&gt;

&lt;p&gt;通常WebAppsの公開URLにアクセスする場合&lt;code&gt;http://アプリケーション名.azurewebsites.net&lt;/code&gt;というドメインにアクセスしますが、ここでは通常のURLに&lt;code&gt;.scm&lt;/code&gt;が追加されたドメインにアクセスします。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://アプリケーション名.scm.azurewebsites.net/api/sshkey?ensurePublicKey=1&lt;/code&gt; にアクセスしてみましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;このssh-rsaから始まるダブルクォートで囲まれている部分が公開鍵になります。&lt;/p&gt;

&lt;p&gt;ちなみに、アプリケーション名がn0bisukeの場合は&lt;code&gt;https://n0bisuke.scm.azurewebsites.net/api/sshkey?ensurePublicKey=1&lt;/code&gt;になります。&lt;/p&gt;

&lt;h3 id=&#34;3-gitlabの対象リポジトリにデプロイ用ssh公開鍵を設定する&#34;&gt;3. GitLabの対象リポジトリにデプロイ用SSH公開鍵を設定する&lt;/h3&gt;

&lt;p&gt;先ほどのSSH公開鍵をGitLabに設定します。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://gitlab.com/ユーザー名/リポジトリ名/deploy_keys&lt;/code&gt;にアクセスしましょう。
リポジトリの &lt;strong&gt;設定(歯車マーク) &amp;gt; Deploy Keys&lt;/strong&gt;からもアクセスできます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/06.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Titleの項目に任意の名前を入力し、Keyの項目に先ほどのSSH公開鍵を貼りましょう。&lt;/p&gt;

&lt;p&gt;これでGitLabのリポジトリに鍵を紐付けられ、GitLabからWebAppsにデプロイすることが出来るようになります。&lt;/p&gt;

&lt;h3 id=&#34;4-webappsのwebhookアドレスをgitlabに紐付ける&#34;&gt;4. WebAppsのWebhookアドレスをGitLabに紐付ける&lt;/h3&gt;

&lt;p&gt;ここまでの作業でWebAppsとGitLabの連携は出来ているのですが、今回は作業者がGitLabにPushしたらデプロイされる仕組みにしたいため、Pushを検知するための設定をします。&lt;/p&gt;

&lt;p&gt;WebAppsのメニューから &lt;strong&gt;設定 &amp;gt; プロパティ &amp;gt; デプロイ開始のURL&lt;/strong&gt;の項目にあるURLをコピーしましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://$アプリケーション名:パスワード@アプリケーション名.scm.azurewebsites.net/deploy&lt;/code&gt;というURLが設定されているはずです。&lt;/p&gt;

&lt;p&gt;GitLab側に移動し、 &lt;code&gt;https://gitlab.com/ユーザー名/リポジトリ名/hooks&lt;/code&gt;にアクセスしましょう。
リポジトリの &lt;strong&gt;設定(歯車マーク) &amp;gt; Webhooks&lt;/strong&gt;からもアクセスできます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;URLの項目に先ほどのWebAppsのWebHookアドレス(&lt;code&gt;https://$アプリケーション名:パスワード@アプリケーション名.scm.azurewebsites.net/deploy&lt;/code&gt;)を貼り付けます。 他の項目は特に変更せずに&lt;code&gt;Add Webhook&lt;/code&gt;で追加します。&lt;/p&gt;

&lt;p&gt;これで設定は完了です。&lt;/p&gt;

&lt;h3 id=&#34;5-試してみる&#34;&gt;5. 試してみる&lt;/h3&gt;

&lt;p&gt;Gitで適当にPushしてみましょう。するとWebAppsのデプロイオプションの項目で同期が確認できます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://アプリケーション名.azurewebsites.net&lt;/code&gt;にアクセスしてみるとソースコードが反映されていることが分かると思います。&lt;/p&gt;

&lt;p&gt;お疲れ様でした！&lt;/p&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;イメージのしやすさから「GitLabからWebAppsにデプロイ」という表現を使いましたが、実際には「WebAppsがGitLab上のソースコードをPullしている」という表現の方が正しいと思います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/038/10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;GitLab側はPushがあったことをWebhookでWebAppsに声を掛けてあげて、WebApps側はGitLabから声が掛かったらPullしにいく、という流れです。&lt;/p&gt;

&lt;p&gt;ちなみに今回はWebhookの設定でかなりハマって、「&lt;a href=&#34;https://github.com/projectkudu/kudu/wiki/Continuous-deployment&#34;&gt;projectkudu/kudu&lt;/a&gt;」や「&lt;a href=&#34;http://stackoverflow.com/questions/31538152/publishing-to-azure-web-apps-from-gitlab-repository-on-trigger&#34;&gt;Publishing to Azure Web Apps from GitLab repository on trigger&lt;/a&gt;」に&lt;code&gt;https://$mysite:BigRandomPassword@mysite.scm.azurewebsites.net/deploy&lt;/code&gt;がWebhookのURLだという記載があるのですが、&lt;code&gt;BigRandomPassword&lt;/code&gt;が謎すぎてかなり詰んでました。 WebApps側で「デプロイ開始のURL」という表現になってるのも分かりにくい気がしますね（苦笑）。&lt;/p&gt;

&lt;p&gt;WebAppsとGitLabの仕様が変わるまではしばらくこの手順が生きるはずですので、参考になれば幸いです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>本ブログにもページネーション機能が付きました！Hugoでページネーション機能を作ろう</title>
      <link>https://dotstud.io/blog/hugo-howto-create-pagination/</link>
      <pubDate>Wed, 12 Oct 2016 10:00:16 +0900</pubDate>
      
      <guid>https://dotstud.io/blog/hugo-howto-create-pagination/</guid>
      
      <description>

&lt;p&gt;こんにちは、 dotstudio代表の&lt;a href=&#34;https://twitter.com/n0bisuke&#34;&gt;のびすけ&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;このブログはページネーション機能が無かったのですが、そろそろコンテンツ数も増えてきたのでページネーション機能を実装しました。 888888&lt;/p&gt;

&lt;p&gt;実際に作る方法を紹介します。&lt;/p&gt;

&lt;h2 id=&#34;hugoでページネーション機能を作る&#34;&gt;Hugoでページネーション機能を作る&lt;/h2&gt;

&lt;p&gt;今回はblogセクションにページネーションを実装します。&lt;/p&gt;

&lt;p&gt;Hugoのページネーションで調べるとまずは&lt;a href=&#34;https://gohugo.io/extras/pagination/&#34;&gt;ドキュメントページのここ&lt;/a&gt;がヒットします。&lt;/p&gt;

&lt;p&gt;もともとも&lt;code&gt;section/blog.html&lt;/code&gt;は以下のようなコードでした。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ partial &amp;quot;header.html&amp;quot; . }}
    &amp;lt;!-- Main Content --&amp;gt;
    &amp;lt;div id=&amp;quot;blog-card--container&amp;quot;&amp;gt;
    {{ range first 12 (where .Data.Pages &amp;quot;Type&amp;quot; &amp;quot;blog&amp;quot;) }}
      {{ .Render &amp;quot;summary&amp;quot;}}
    {{ end }}
    &amp;lt;/div&amp;gt;
{{ partial &amp;quot;footer.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ドキュメントページを参照しながら以下のように変更します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ partial &amp;quot;header.html&amp;quot; . }}

    {{ $paginator := .Paginate (where .Data.Pages &amp;quot;Type&amp;quot; &amp;quot;blog&amp;quot;) 12 }}
    &amp;lt;!-- Main Content --&amp;gt;
    &amp;lt;div id=&amp;quot;blog-card--container&amp;quot;&amp;gt;
       {{ range $paginator.Pages }}
            {{ .Render &amp;quot;summary&amp;quot; }}
        {{ end }}
    &amp;lt;/div&amp;gt;
    
    {{ template &amp;quot;_internal/pagination.html&amp;quot; . }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これだけでページネーション機能はとりあえず完成です。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;めちゃ簡単ですね！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;確認してみるとページの下の方に何かいる&amp;hellip;&amp;hellip;！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/032/01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これがページネーションのメニューです。&lt;/p&gt;

&lt;p&gt;勝手に生成されていてびっくりしますが、&lt;code&gt;{{ template &amp;quot;_internal/pagination.html&amp;quot; . }}&lt;/code&gt;の部分でこのメニューが生成されています。&lt;/p&gt;

&lt;p&gt;だけどここから先で割と詰まりました苦笑&lt;/p&gt;

&lt;h2 id=&#34;見た目とメニューの自由度を上げたい&#34;&gt;見た目とメニューの自由度を上げたい&lt;/h2&gt;

&lt;p&gt;このままだとどこでHTMLが生成されているか不明です。&lt;code&gt;_internal/~~~.html&lt;/code&gt;はHugoの組み込みテンプレートになっていて、通常は変更することが出来ません。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.kakunaga.net/post/160517pagination/&#34;&gt;pagination の見た目&lt;/a&gt;の記事を見ると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;class=&amp;ldquo;pagination&amp;rdquo;&lt;/li&gt;
&lt;li&gt;class=&amp;ldquo;active&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;が生成されているからCSSを指定すればいいみたいです。ただ、メニュー項目の自由度は無いので自分で定義してみたいと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spf13/hugo/blob/master/tpl/template_embedded.go#L116-L142&#34;&gt;Hugoのソース&lt;/a&gt;を覗き見ると対象箇所が分かります。&lt;/p&gt;

&lt;p&gt;ここを元に&lt;code&gt;layouts/partials/paginator.html&lt;/code&gt;を作成します。以下ではコメントも入れておきました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $pag := $.Paginator }}
{{ if gt $pag.TotalPages 1 }}
    &amp;lt;ul class=&amp;quot;pagination&amp;quot;&amp;gt;
        {{/*最初へ*/}}
        {{ with $pag.First }}
            &amp;lt;li&amp;gt;
                &amp;lt;a href=&amp;quot;{{ .URL }}&amp;quot; aria-label=&amp;quot;First&amp;quot;&amp;gt;&amp;lt;span aria-hidden=&amp;quot;true&amp;quot;&amp;gt;最初へ&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
        {{ end }}

        {{/*前ページ*/}}
        &amp;lt;li{{ if not $pag.HasPrev }}class=&amp;quot;disabled&amp;quot;{{ end }}&amp;gt;
            &amp;lt;a href=&amp;quot;{{ if $pag.HasPrev }}{{ $pag.Prev.URL }}{{ end }}&amp;quot; aria-label=&amp;quot;Previous&amp;quot;&amp;gt;
                &amp;lt;span aria-hidden=&amp;quot;true&amp;quot;&amp;gt;前へ&amp;lt;/span&amp;gt;
            &amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;

        {{/*番号*/}}
        {{ range $pag.Pagers }}
            &amp;lt;li{{ if eq . $pag }}class=&amp;quot;active&amp;quot;{{ end }}&amp;gt;
                &amp;lt;a href=&amp;quot;{{ .URL }}&amp;quot;&amp;gt;{{ .PageNumber }}&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
        {{ end }}
        
        {{/*次ページ*/}}
        &amp;lt;li{{ if not $pag.HasNext }}class=&amp;quot;disabled&amp;quot;{{ end }}&amp;gt;
            &amp;lt;a href=&amp;quot;{{ if $pag.HasNext }}{{ $pag.Next.URL }}{{ end }}&amp;quot; aria-label=&amp;quot;Next&amp;quot;&amp;gt;
                &amp;lt;span aria-hidden=&amp;quot;true&amp;quot;&amp;gt;次へ&amp;lt;/span&amp;gt;
            &amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;

        {{/*最後へ*/}}
        {{ with $pag.Last }}
            &amp;lt;li&amp;gt;
                &amp;lt;a href=&amp;quot;{{ .URL }}&amp;quot; aria-label=&amp;quot;Last&amp;quot;&amp;gt;&amp;lt;span aria-hidden=&amp;quot;true&amp;quot;&amp;gt;最後へ&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
            &amp;lt;/li&amp;gt;
        {{ end }}
    &amp;lt;/ul&amp;gt;
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;section/blog.html&lt;/code&gt;を以下に修正します。
&lt;code&gt;_internal&lt;/code&gt;で組み込みテンプレートを呼び出していた行を今作成した&lt;code&gt;paginator.html&lt;/code&gt;を呼び出すように変更です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ partial &amp;quot;header.html&amp;quot; . }}

    {{ $paginator := .Paginate (where .Data.Pages &amp;quot;Type&amp;quot; &amp;quot;blog&amp;quot;) 12 }}
    &amp;lt;!-- Main Content --&amp;gt;
    &amp;lt;div id=&amp;quot;blog-card--container&amp;quot;&amp;gt;
       {{ range $paginator.Pages }}
            {{ .Render &amp;quot;summary&amp;quot; }}
        {{ end }}
    &amp;lt;/div&amp;gt;
    
    {{ partial &amp;quot;paginator.html&amp;quot; . }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで完成です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/032/02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ビルドするとこのような形になりました。&lt;/p&gt;

&lt;p&gt;あとは&lt;a href=&#34;https://dotstud.io/members/chachmaru/&#34;&gt;ちゃちゃまる先生&lt;/a&gt;にCSSをあててもらえば終了です。&lt;/p&gt;

&lt;h2 id=&#34;出来上がったものがこちらです&#34;&gt;出来上がったものがこちらです&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://dotstud.io/img/blog/032/03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;いい感じですね。&lt;/p&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;こちら(&lt;a href=&#34;http://wdkk.co.jp/note/2015/0915-hugo-pagination/&#34;&gt;Hugoでwebサイト構築(9) リストのページネーション(Pagination)&lt;/a&gt;)も参考にさせていただきました。&lt;/p&gt;

&lt;p&gt;なかなか公式ドキュメントも調べづらいので参考になれば幸いです。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>